2021-05-24 12:43:07,608 - HyperTuner_objGenerator - INFO - Objective function using negRegAvgTestAcc
2021-05-24 12:43:07,629 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002813 seconds
2021-05-24 12:43:07,629 - hyperopt.tpe - INFO - TPE using 0 trials
2021-05-24 12:43:10,330 - HyperTuner_objective - INFO - ObjValue=-0.6824944019 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 447, 'epoch': 3, 'hidden_size': 449, 'lr': 0.7406471423269038}
2021-05-24 12:43:10,332 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001695 seconds
2021-05-24 12:43:10,333 - hyperopt.tpe - INFO - TPE using 1/1 trials with best loss -0.682494
2021-05-24 12:43:11,312 - HyperTuner_objective - INFO - ObjValue=-0.6775643826 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 473, 'epoch': 1, 'hidden_size': 465, 'lr': 1.3948383651278868}
2021-05-24 12:43:11,315 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001835 seconds
2021-05-24 12:43:11,315 - hyperopt.tpe - INFO - TPE using 2/2 trials with best loss -0.682494
2021-05-24 12:43:12,376 - HyperTuner_objective - INFO - ObjValue=-0.7160924673 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 447, 'epoch': 1, 'hidden_size': 463, 'lr': 0.6878169756566982}
2021-05-24 12:43:12,379 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002096 seconds
2021-05-24 12:43:12,379 - hyperopt.tpe - INFO - TPE using 3/3 trials with best loss -0.716092
2021-05-24 12:43:14,264 - HyperTuner_objective - INFO - ObjValue=-0.6972596645 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 488, 'epoch': 2, 'hidden_size': 455, 'lr': 0.8304548872313828}
2021-05-24 12:43:14,267 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001816 seconds
2021-05-24 12:43:14,268 - hyperopt.tpe - INFO - TPE using 4/4 trials with best loss -0.716092
2021-05-24 12:43:17,986 - HyperTuner_objective - INFO - ObjValue=-0.6725219488 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 485, 'epoch': 4, 'hidden_size': 439, 'lr': 0.5126443348680312}
2021-05-24 12:43:17,989 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001867 seconds
2021-05-24 12:43:17,989 - hyperopt.tpe - INFO - TPE using 5/5 trials with best loss -0.716092
2021-05-24 12:43:19,959 - HyperTuner_objective - INFO - ObjValue=-0.7086215615 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 429, 'epoch': 2, 'hidden_size': 464, 'lr': 1.252352369017426}
2021-05-24 12:43:19,962 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002111 seconds
2021-05-24 12:43:19,963 - hyperopt.tpe - INFO - TPE using 6/6 trials with best loss -0.716092
2021-05-24 12:43:22,035 - HyperTuner_objective - INFO - ObjValue=-0.7084482312 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 457, 'epoch': 2, 'hidden_size': 476, 'lr': 0.6890852012138957}
2021-05-24 12:43:22,038 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001787 seconds
2021-05-24 12:43:22,038 - hyperopt.tpe - INFO - TPE using 7/7 trials with best loss -0.716092
2021-05-24 12:43:25,935 - HyperTuner_objective - INFO - ObjValue=-0.6687678099 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 417, 'epoch': 4, 'hidden_size': 457, 'lr': 0.8023844786133264}
2021-05-24 12:43:25,937 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001668 seconds
2021-05-24 12:43:25,938 - hyperopt.tpe - INFO - TPE using 8/8 trials with best loss -0.716092
2021-05-24 12:43:27,707 - HyperTuner_objective - INFO - ObjValue=-0.7086582780 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 482, 'epoch': 2, 'hidden_size': 474, 'lr': 0.6077328502092799}
2021-05-24 12:43:27,709 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001642 seconds
2021-05-24 12:43:27,710 - hyperopt.tpe - INFO - TPE using 9/9 trials with best loss -0.716092
2021-05-24 12:43:30,440 - HyperTuner_objective - INFO - ObjValue=-0.6776162386 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 501, 'epoch': 3, 'hidden_size': 461, 'lr': 1.4822722273453726}
2021-05-24 12:43:30,443 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001799 seconds
2021-05-24 12:43:30,444 - hyperopt.tpe - INFO - TPE using 10/10 trials with best loss -0.716092
2021-05-24 12:43:33,221 - HyperTuner_objective - INFO - ObjValue=-0.6836861968 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 494, 'epoch': 3, 'hidden_size': 468, 'lr': 1.4767952479378537}
2021-05-24 12:43:33,224 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002024 seconds
2021-05-24 12:43:33,224 - hyperopt.tpe - INFO - TPE using 11/11 trials with best loss -0.716092
2021-05-24 12:43:34,875 - HyperTuner_objective - INFO - ObjValue=-0.7073298097 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 446, 'epoch': 2, 'hidden_size': 448, 'lr': 1.4508023130029861}
2021-05-24 12:43:34,878 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001637 seconds
2021-05-24 12:43:34,878 - hyperopt.tpe - INFO - TPE using 12/12 trials with best loss -0.716092
2021-05-24 12:43:38,237 - HyperTuner_objective - INFO - ObjValue=-0.2644599676 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 453, 'epoch': 3, 'hidden_size': 472, 'lr': 1.3563974071356792}
2021-05-24 12:43:38,239 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001708 seconds
2021-05-24 12:43:38,240 - hyperopt.tpe - INFO - TPE using 13/13 trials with best loss -0.716092
2021-05-24 12:43:39,078 - HyperTuner_objective - INFO - ObjValue=-0.6931358576 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 470, 'epoch': 1, 'hidden_size': 442, 'lr': 0.9292019483136819}
2021-05-24 12:43:39,081 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001719 seconds
2021-05-24 12:43:39,081 - hyperopt.tpe - INFO - TPE using 14/14 trials with best loss -0.716092
2021-05-24 12:43:39,936 - HyperTuner_objective - INFO - ObjValue=-0.7036338449 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 465, 'epoch': 1, 'hidden_size': 458, 'lr': 0.8508627460318395}
2021-05-24 12:43:39,939 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001696 seconds
2021-05-24 12:43:39,939 - hyperopt.tpe - INFO - TPE using 15/15 trials with best loss -0.716092
2021-05-24 12:43:40,914 - HyperTuner_objective - INFO - ObjValue=-0.7155548334 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 498, 'epoch': 1, 'hidden_size': 466, 'lr': 0.9840641571176997}
2021-05-24 12:43:40,917 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001557 seconds
2021-05-24 12:43:40,917 - hyperopt.tpe - INFO - TPE using 16/16 trials with best loss -0.716092
2021-05-24 12:43:41,833 - HyperTuner_objective - INFO - ObjValue=-0.7216815352 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 456, 'lr': 0.93113330852294}
2021-05-24 12:43:41,836 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001807 seconds
2021-05-24 12:43:41,836 - hyperopt.tpe - INFO - TPE using 17/17 trials with best loss -0.721682
2021-05-24 12:43:45,293 - HyperTuner_objective - INFO - ObjValue=-0.6613641381 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 470, 'epoch': 4, 'hidden_size': 463, 'lr': 1.2670425934847378}
2021-05-24 12:43:45,296 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001749 seconds
2021-05-24 12:43:45,296 - hyperopt.tpe - INFO - TPE using 18/18 trials with best loss -0.721682
2021-05-24 12:43:48,836 - HyperTuner_objective - INFO - ObjValue=-0.6618438363 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 413, 'epoch': 4, 'hidden_size': 456, 'lr': 0.6744198424416287}
2021-05-24 12:43:48,839 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001657 seconds
2021-05-24 12:43:48,839 - hyperopt.tpe - INFO - TPE using 19/19 trials with best loss -0.721682
2021-05-24 12:43:49,830 - HyperTuner_objective - INFO - ObjValue=-0.6846928596 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 420, 'epoch': 1, 'hidden_size': 474, 'lr': 1.29116552437707}
2021-05-24 12:43:49,833 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001606 seconds
2021-05-24 12:43:49,833 - hyperopt.tpe - INFO - TPE using 20/20 trials with best loss -0.721682
2021-05-24 12:43:50,764 - HyperTuner_objective - INFO - ObjValue=-0.7171990871 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 469, 'lr': 1.0993528600161582}
2021-05-24 12:43:50,767 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001499 seconds
2021-05-24 12:43:50,767 - hyperopt.tpe - INFO - TPE using 21/21 trials with best loss -0.721682
2021-05-24 12:43:51,734 - HyperTuner_objective - INFO - ObjValue=-0.7079805136 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 504, 'epoch': 1, 'hidden_size': 469, 'lr': 1.1311900972980338}
2021-05-24 12:43:51,763 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.026528 seconds
2021-05-24 12:43:51,765 - hyperopt.tpe - INFO - TPE using 22/22 trials with best loss -0.721682
2021-05-24 12:43:52,756 - HyperTuner_objective - INFO - ObjValue=-0.6914985776 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 437, 'lr': 1.1171966065480505}
2021-05-24 12:43:52,759 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001712 seconds
2021-05-24 12:43:52,759 - hyperopt.tpe - INFO - TPE using 23/23 trials with best loss -0.721682
2021-05-24 12:43:53,774 - HyperTuner_objective - INFO - ObjValue=-0.6986433864 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 481, 'lr': 1.0948776742242317}
2021-05-24 12:43:53,777 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001757 seconds
2021-05-24 12:43:53,777 - hyperopt.tpe - INFO - TPE using 24/24 trials with best loss -0.721682
2021-05-24 12:43:54,671 - HyperTuner_objective - INFO - ObjValue=-0.7114510536 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 456, 'epoch': 1, 'hidden_size': 441, 'lr': 1.0370253928549185}
2021-05-24 12:43:54,674 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002000 seconds
2021-05-24 12:43:54,675 - hyperopt.tpe - INFO - TPE using 25/25 trials with best loss -0.721682
2021-05-24 12:43:55,709 - HyperTuner_objective - INFO - ObjValue=-0.7199267745 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 467, 'lr': 1.16854347804581}
2021-05-24 12:43:55,712 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001892 seconds
2021-05-24 12:43:55,712 - hyperopt.tpe - INFO - TPE using 26/26 trials with best loss -0.721682
2021-05-24 12:43:56,702 - HyperTuner_objective - INFO - ObjValue=-0.7144640088 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 444, 'epoch': 1, 'hidden_size': 467, 'lr': 0.9120035241980079}
2021-05-24 12:43:56,705 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002123 seconds
2021-05-24 12:43:56,705 - hyperopt.tpe - INFO - TPE using 27/27 trials with best loss -0.721682
2021-05-24 12:43:57,662 - HyperTuner_objective - INFO - ObjValue=-0.7060047984 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 505, 'epoch': 1, 'hidden_size': 485, 'lr': 1.2010177996877947}
2021-05-24 12:43:57,665 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001393 seconds
2021-05-24 12:43:57,665 - hyperopt.tpe - INFO - TPE using 28/28 trials with best loss -0.721682
2021-05-24 12:44:00,285 - HyperTuner_objective - INFO - ObjValue=-0.6857714653 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 426, 'epoch': 3, 'hidden_size': 452, 'lr': 1.0005682917286653}
2021-05-24 12:44:00,287 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001633 seconds
2021-05-24 12:44:00,288 - hyperopt.tpe - INFO - TPE using 29/29 trials with best loss -0.721682
2021-05-24 12:44:01,102 - HyperTuner_objective - INFO - ObjValue=-0.7061134577 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 1, 'hidden_size': 444, 'lr': 1.2073035578568938}
2021-05-24 12:44:01,105 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001677 seconds
2021-05-24 12:44:01,105 - hyperopt.tpe - INFO - TPE using 30/30 trials with best loss -0.721682
2021-05-24 12:44:02,047 - HyperTuner_objective - INFO - ObjValue=-0.6867568493 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 474, 'epoch': 1, 'hidden_size': 475, 'lr': 0.7687859466984449}
2021-05-24 12:44:02,050 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001682 seconds
2021-05-24 12:44:02,050 - hyperopt.tpe - INFO - TPE using 31/31 trials with best loss -0.721682
2021-05-24 12:44:05,558 - HyperTuner_objective - INFO - ObjValue=-0.6570196152 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 4, 'hidden_size': 443, 'lr': 0.900058367321012}
2021-05-24 12:44:05,561 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001768 seconds
2021-05-24 12:44:05,562 - hyperopt.tpe - INFO - TPE using 32/32 trials with best loss -0.721682
2021-05-24 12:44:06,566 - HyperTuner_objective - INFO - ObjValue=-0.6879761219 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 496, 'epoch': 1, 'hidden_size': 470, 'lr': 1.372078320433867}
2021-05-24 12:44:06,569 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001723 seconds
2021-05-24 12:44:06,570 - hyperopt.tpe - INFO - TPE using 33/33 trials with best loss -0.721682
2021-05-24 12:44:09,460 - HyperTuner_objective - INFO - ObjValue=-0.6852014065 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 428, 'epoch': 3, 'hidden_size': 453, 'lr': 1.0308487845767802}
2021-05-24 12:44:09,462 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001517 seconds
2021-05-24 12:44:09,463 - hyperopt.tpe - INFO - TPE using 34/34 trials with best loss -0.721682
2021-05-24 12:44:10,328 - HyperTuner_objective - INFO - ObjValue=-0.7135157585 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 511, 'epoch': 1, 'hidden_size': 477, 'lr': 0.5207594116697054}
2021-05-24 12:44:10,330 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001502 seconds
2021-05-24 12:44:10,331 - hyperopt.tpe - INFO - TPE using 35/35 trials with best loss -0.721682
2021-05-24 12:44:12,066 - HyperTuner_objective - INFO - ObjValue=-0.6965438724 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 461, 'epoch': 2, 'hidden_size': 459, 'lr': 1.2014786826184065}
2021-05-24 12:44:12,069 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001700 seconds
2021-05-24 12:44:12,070 - hyperopt.tpe - INFO - TPE using 36/36 trials with best loss -0.721682
2021-05-24 12:44:15,978 - HyperTuner_objective - INFO - ObjValue=-0.6650975347 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 430, 'epoch': 4, 'hidden_size': 479, 'lr': 0.8715754958758535}
2021-05-24 12:44:15,981 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001523 seconds
2021-05-24 12:44:15,981 - hyperopt.tpe - INFO - TPE using 37/37 trials with best loss -0.721682
2021-05-24 12:44:16,937 - HyperTuner_objective - INFO - ObjValue=-0.7052031159 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 443, 'epoch': 1, 'hidden_size': 450, 'lr': 1.3076995234494786}
2021-05-24 12:44:16,940 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001679 seconds
2021-05-24 12:44:16,940 - hyperopt.tpe - INFO - TPE using 38/38 trials with best loss -0.721682
2021-05-24 12:44:18,687 - HyperTuner_objective - INFO - ObjValue=-0.6973194480 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 451, 'epoch': 2, 'hidden_size': 451, 'lr': 0.9537782044722158}
2021-05-24 12:44:18,690 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001559 seconds
2021-05-24 12:44:18,690 - hyperopt.tpe - INFO - TPE using 39/39 trials with best loss -0.721682
2021-05-24 12:44:21,266 - HyperTuner_objective - INFO - ObjValue=-0.6942307949 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 481, 'epoch': 3, 'hidden_size': 484, 'lr': 0.5794836120123248}
2021-05-24 12:44:21,268 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001546 seconds
2021-05-24 12:44:21,268 - hyperopt.tpe - INFO - TPE using 40/40 trials with best loss -0.721682
2021-05-24 12:44:22,085 - HyperTuner_objective - INFO - ObjValue=-0.6938045621 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 507, 'epoch': 1, 'hidden_size': 462, 'lr': 0.8105965240881832}
2021-05-24 12:44:22,088 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001372 seconds
2021-05-24 12:44:22,088 - hyperopt.tpe - INFO - TPE using 41/41 trials with best loss -0.721682
2021-05-24 12:44:23,755 - HyperTuner_objective - INFO - ObjValue=-0.7190049887 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 455, 'epoch': 2, 'hidden_size': 445, 'lr': 0.7157794359508289}
2021-05-24 12:44:23,758 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001707 seconds
2021-05-24 12:44:23,758 - hyperopt.tpe - INFO - TPE using 42/42 trials with best loss -0.721682
2021-05-24 12:44:27,032 - HyperTuner_objective - INFO - ObjValue=-0.6455517411 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 418, 'epoch': 4, 'hidden_size': 440, 'lr': 1.4303522347443245}
2021-05-24 12:44:27,035 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001607 seconds
2021-05-24 12:44:27,035 - hyperopt.tpe - INFO - TPE using 43/43 trials with best loss -0.721682
2021-05-24 12:44:28,019 - HyperTuner_objective - INFO - ObjValue=-0.7012657523 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 423, 'epoch': 1, 'hidden_size': 460, 'lr': 1.1665248281532248}
2021-05-24 12:44:28,022 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001548 seconds
2021-05-24 12:44:28,022 - hyperopt.tpe - INFO - TPE using 44/44 trials with best loss -0.721682
2021-05-24 12:44:30,331 - HyperTuner_objective - INFO - ObjValue=-0.6914100051 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 483, 'epoch': 3, 'hidden_size': 438, 'lr': 1.0678491668583012}
2021-05-24 12:44:30,333 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001338 seconds
2021-05-24 12:44:30,333 - hyperopt.tpe - INFO - TPE using 45/45 trials with best loss -0.721682
2021-05-24 12:44:32,061 - HyperTuner_objective - INFO - ObjValue=-0.6715058088 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 499, 'epoch': 2, 'hidden_size': 482, 'lr': 1.3311917279897791}
2021-05-24 12:44:32,064 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001582 seconds
2021-05-24 12:44:32,064 - hyperopt.tpe - INFO - TPE using 46/46 trials with best loss -0.721682
2021-05-24 12:44:33,000 - HyperTuner_objective - INFO - ObjValue=-0.6881531477 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 439, 'epoch': 1, 'hidden_size': 478, 'lr': 1.243160327539076}
2021-05-24 12:44:33,003 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001518 seconds
2021-05-24 12:44:33,003 - hyperopt.tpe - INFO - TPE using 47/47 trials with best loss -0.721682
2021-05-24 12:44:36,080 - HyperTuner_objective - INFO - ObjValue=-0.6787760854 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 490, 'epoch': 4, 'hidden_size': 456, 'lr': 0.7738114316390201}
2021-05-24 12:44:36,084 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001897 seconds
2021-05-24 12:44:36,084 - hyperopt.tpe - INFO - TPE using 48/48 trials with best loss -0.721682
2021-05-24 12:44:37,045 - HyperTuner_objective - INFO - ObjValue=-0.6904608011 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 446, 'lr': 0.9475807679253256}
2021-05-24 12:44:37,048 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001684 seconds
2021-05-24 12:44:37,048 - hyperopt.tpe - INFO - TPE using 49/49 trials with best loss -0.721682
2021-05-24 12:44:39,741 - HyperTuner_objective - INFO - ObjValue=-0.6923510432 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 422, 'epoch': 3, 'hidden_size': 447, 'lr': 0.6116357409688968}
2021-05-24 12:44:39,743 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001646 seconds
2021-05-24 12:44:39,744 - hyperopt.tpe - INFO - TPE using 50/50 trials with best loss -0.721682
2021-05-24 12:44:40,743 - HyperTuner_objective - INFO - ObjValue=-0.7107073069 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 442, 'epoch': 1, 'hidden_size': 483, 'lr': 1.1453706731737117}
2021-05-24 12:44:40,745 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001712 seconds
2021-05-24 12:44:40,746 - hyperopt.tpe - INFO - TPE using 51/51 trials with best loss -0.721682
2021-05-24 12:44:42,635 - HyperTuner_objective - INFO - ObjValue=-0.7017959952 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 441, 'epoch': 2, 'hidden_size': 467, 'lr': 0.8612883398255353}
2021-05-24 12:44:42,638 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001587 seconds
2021-05-24 12:44:42,639 - hyperopt.tpe - INFO - TPE using 52/52 trials with best loss -0.721682
2021-05-24 12:44:43,654 - HyperTuner_objective - INFO - ObjValue=-0.6957175732 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 414, 'epoch': 1, 'hidden_size': 471, 'lr': 1.0384919062477806}
2021-05-24 12:44:43,657 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001493 seconds
2021-05-24 12:44:43,657 - hyperopt.tpe - INFO - TPE using 53/53 trials with best loss -0.721682
2021-05-24 12:44:47,291 - HyperTuner_objective - INFO - ObjValue=-0.6615211368 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 412, 'epoch': 4, 'hidden_size': 454, 'lr': 0.6356406631832912}
2021-05-24 12:44:47,293 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001646 seconds
2021-05-24 12:44:47,294 - hyperopt.tpe - INFO - TPE using 54/54 trials with best loss -0.721682
2021-05-24 12:44:48,266 - HyperTuner_objective - INFO - ObjValue=-0.7054558992 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 469, 'epoch': 1, 'hidden_size': 480, 'lr': 0.9865704473842515}
2021-05-24 12:44:48,268 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001724 seconds
2021-05-24 12:44:48,269 - hyperopt.tpe - INFO - TPE using 55/55 trials with best loss -0.721682
2021-05-24 12:44:49,172 - HyperTuner_objective - INFO - ObjValue=-0.7062078118 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 463, 'epoch': 1, 'hidden_size': 449, 'lr': 1.4096732145915054}
2021-05-24 12:44:49,175 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001700 seconds
2021-05-24 12:44:49,175 - hyperopt.tpe - INFO - TPE using 56/56 trials with best loss -0.721682
2021-05-24 12:44:51,928 - HyperTuner_objective - INFO - ObjValue=-0.6840167642 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 500, 'epoch': 3, 'hidden_size': 465, 'lr': 1.0838234622567324}
2021-05-24 12:44:51,931 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001580 seconds
2021-05-24 12:44:51,931 - hyperopt.tpe - INFO - TPE using 57/57 trials with best loss -0.721682
2021-05-24 12:44:52,815 - HyperTuner_objective - INFO - ObjValue=-0.7043922544 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 475, 'epoch': 1, 'hidden_size': 464, 'lr': 1.2389099026265824}
2021-05-24 12:44:52,819 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003075 seconds
2021-05-24 12:44:52,820 - hyperopt.tpe - INFO - TPE using 58/58 trials with best loss -0.721682
2021-05-24 12:44:54,595 - HyperTuner_objective - INFO - ObjValue=-0.7035295367 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 467, 'epoch': 2, 'hidden_size': 436, 'lr': 1.173336550814277}
2021-05-24 12:44:54,598 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001986 seconds
2021-05-24 12:44:54,599 - hyperopt.tpe - INFO - TPE using 59/59 trials with best loss -0.721682
2021-05-24 12:44:55,592 - HyperTuner_objective - INFO - ObjValue=-0.6908098459 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 493, 'epoch': 1, 'hidden_size': 473, 'lr': 0.8260508430525837}
2021-05-24 12:44:55,596 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001909 seconds
2021-05-24 12:44:55,597 - hyperopt.tpe - INFO - TPE using 60/60 trials with best loss -0.721682
2021-05-24 12:44:59,537 - HyperTuner_objective - INFO - ObjValue=-0.6406176686 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 425, 'epoch': 4, 'hidden_size': 457, 'lr': 1.493761663985559}
2021-05-24 12:44:59,540 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001705 seconds
2021-05-24 12:44:59,540 - hyperopt.tpe - INFO - TPE using 61/61 trials with best loss -0.721682
2021-05-24 12:45:00,470 - HyperTuner_objective - INFO - ObjValue=-0.7034497857 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 436, 'epoch': 1, 'hidden_size': 455, 'lr': 0.9014228238995003}
2021-05-24 12:45:00,473 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001759 seconds
2021-05-24 12:45:00,474 - hyperopt.tpe - INFO - TPE using 62/62 trials with best loss -0.721682
2021-05-24 12:45:03,317 - HyperTuner_objective - INFO - ObjValue=-0.6987776756 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 489, 'epoch': 3, 'hidden_size': 467, 'lr': 0.7571989341234355}
2021-05-24 12:45:03,320 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001818 seconds
2021-05-24 12:45:03,320 - hyperopt.tpe - INFO - TPE using 63/63 trials with best loss -0.721682
2021-05-24 12:45:04,275 - HyperTuner_objective - INFO - ObjValue=-0.6699029207 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 476, 'epoch': 1, 'hidden_size': 456, 'lr': 0.7238480038680175}
2021-05-24 12:45:04,278 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001690 seconds
2021-05-24 12:45:04,279 - hyperopt.tpe - INFO - TPE using 64/64 trials with best loss -0.721682
2021-05-24 12:45:05,217 - HyperTuner_objective - INFO - ObjValue=-0.7062186599 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 479, 'epoch': 1, 'hidden_size': 439, 'lr': 1.3587059537975446}
2021-05-24 12:45:05,220 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001875 seconds
2021-05-24 12:45:05,221 - hyperopt.tpe - INFO - TPE using 65/65 trials with best loss -0.721682
2021-05-24 12:45:07,064 - HyperTuner_objective - INFO - ObjValue=-0.7009811401 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 503, 'epoch': 2, 'hidden_size': 445, 'lr': 0.71692789613725}
2021-05-24 12:45:07,067 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001693 seconds
2021-05-24 12:45:07,067 - hyperopt.tpe - INFO - TPE using 66/66 trials with best loss -0.721682
2021-05-24 12:45:09,282 - HyperTuner_objective - INFO - ObjValue=-0.7164823413 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 427, 'epoch': 2, 'hidden_size': 468, 'lr': 0.5449652257030312}
2021-05-24 12:45:09,285 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001761 seconds
2021-05-24 12:45:09,285 - hyperopt.tpe - INFO - TPE using 67/67 trials with best loss -0.721682
2021-05-24 12:45:11,100 - HyperTuner_objective - INFO - ObjValue=-0.7051298022 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 486, 'epoch': 2, 'hidden_size': 461, 'lr': 0.6887754042567774}
2021-05-24 12:45:11,102 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001629 seconds
2021-05-24 12:45:11,103 - hyperopt.tpe - INFO - TPE using 68/68 trials with best loss -0.721682
2021-05-24 12:45:12,927 - HyperTuner_objective - INFO - ObjValue=-0.7051950693 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 455, 'epoch': 2, 'hidden_size': 445, 'lr': 0.6460859842511275}
2021-05-24 12:45:12,930 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001733 seconds
2021-05-24 12:45:12,931 - hyperopt.tpe - INFO - TPE using 69/69 trials with best loss -0.721682
2021-05-24 12:45:14,852 - HyperTuner_objective - INFO - ObjValue=-0.7110090256 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 509, 'epoch': 2, 'hidden_size': 448, 'lr': 0.9604158357153713}
2021-05-24 12:45:14,855 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001699 seconds
2021-05-24 12:45:14,856 - hyperopt.tpe - INFO - TPE using 70/70 trials with best loss -0.721682
2021-05-24 12:45:16,798 - HyperTuner_objective - INFO - ObjValue=-0.7061071396 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 455, 'epoch': 2, 'hidden_size': 466, 'lr': 1.0050358797717454}
2021-05-24 12:45:16,801 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002201 seconds
2021-05-24 12:45:16,802 - hyperopt.tpe - INFO - TPE using 71/71 trials with best loss -0.721682
2021-05-24 12:45:18,759 - HyperTuner_objective - INFO - ObjValue=-0.7082185149 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 495, 'epoch': 2, 'hidden_size': 442, 'lr': 0.7811743339642674}
2021-05-24 12:45:18,762 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002013 seconds
2021-05-24 12:45:18,762 - hyperopt.tpe - INFO - TPE using 72/72 trials with best loss -0.721682
2021-05-24 12:45:20,765 - HyperTuner_objective - INFO - ObjValue=-0.7019637227 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 448, 'epoch': 2, 'hidden_size': 476, 'lr': 1.0643823131350705}
2021-05-24 12:45:20,767 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001599 seconds
2021-05-24 12:45:20,768 - hyperopt.tpe - INFO - TPE using 73/73 trials with best loss -0.721682
2021-05-24 12:45:22,617 - HyperTuner_objective - INFO - ObjValue=-0.7126322985 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 2, 'hidden_size': 472, 'lr': 0.8780579158588461}
2021-05-24 12:45:22,620 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001758 seconds
2021-05-24 12:45:22,621 - hyperopt.tpe - INFO - TPE using 74/74 trials with best loss -0.721682
2021-05-24 12:45:26,156 - HyperTuner_objective - INFO - ObjValue=-0.6688391566 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 508, 'epoch': 4, 'hidden_size': 463, 'lr': 0.8351608137073729}
2021-05-24 12:45:26,159 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002079 seconds
2021-05-24 12:45:26,160 - hyperopt.tpe - INFO - TPE using 75/75 trials with best loss -0.721682
2021-05-24 12:45:27,067 - HyperTuner_objective - INFO - ObjValue=-0.7083680630 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 458, 'epoch': 1, 'hidden_size': 437, 'lr': 1.0181153537031118}
2021-05-24 12:45:27,071 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003485 seconds
2021-05-24 12:45:27,072 - hyperopt.tpe - INFO - TPE using 76/76 trials with best loss -0.721682
2021-05-24 12:45:28,089 - HyperTuner_objective - INFO - ObjValue=-0.7063891888 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 416, 'epoch': 1, 'hidden_size': 445, 'lr': 0.5685785987008308}
2021-05-24 12:45:28,091 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001744 seconds
2021-05-24 12:45:28,092 - hyperopt.tpe - INFO - TPE using 77/77 trials with best loss -0.721682
2021-05-24 12:45:31,076 - HyperTuner_objective - INFO - ObjValue=-0.6888258457 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 468, 'epoch': 3, 'hidden_size': 481, 'lr': 1.1171120032644868}
2021-05-24 12:45:31,079 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001746 seconds
2021-05-24 12:45:31,080 - hyperopt.tpe - INFO - TPE using 78/78 trials with best loss -0.721682
2021-05-24 12:45:32,788 - HyperTuner_objective - INFO - ObjValue=-0.6937097311 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 471, 'epoch': 2, 'hidden_size': 458, 'lr': 0.9197505904601353}
2021-05-24 12:45:32,791 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001719 seconds
2021-05-24 12:45:32,791 - hyperopt.tpe - INFO - TPE using 79/79 trials with best loss -0.721682
2021-05-24 12:45:33,728 - HyperTuner_objective - INFO - ObjValue=-0.6812035441 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 492, 'epoch': 1, 'hidden_size': 485, 'lr': 1.2786895198625052}
2021-05-24 12:45:33,730 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001631 seconds
2021-05-24 12:45:33,731 - hyperopt.tpe - INFO - TPE using 80/80 trials with best loss -0.721682
2021-05-24 12:45:36,855 - HyperTuner_objective - INFO - ObjValue=-0.6680611372 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 4, 'hidden_size': 452, 'lr': 0.7962062167063394}
2021-05-24 12:45:36,858 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001622 seconds
2021-05-24 12:45:36,858 - hyperopt.tpe - INFO - TPE using 81/81 trials with best loss -0.721682
2021-05-24 12:45:37,762 - HyperTuner_objective - INFO - ObjValue=-0.6898159981 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 424, 'epoch': 1, 'hidden_size': 441, 'lr': 0.6559817416231584}
2021-05-24 12:45:37,764 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001591 seconds
2021-05-24 12:45:37,765 - hyperopt.tpe - INFO - TPE using 82/82 trials with best loss -0.721682
2021-05-24 12:45:39,759 - HyperTuner_objective - INFO - ObjValue=-0.7160866261 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 415, 'epoch': 2, 'hidden_size': 475, 'lr': 0.5108055861937733}
2021-05-24 12:45:39,762 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001545 seconds
2021-05-24 12:45:39,762 - hyperopt.tpe - INFO - TPE using 83/83 trials with best loss -0.721682
2021-05-24 12:45:40,585 - HyperTuner_objective - INFO - ObjValue=-0.7055596113 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 480, 'epoch': 1, 'hidden_size': 443, 'lr': 0.7394031295249202}
2021-05-24 12:45:40,588 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001506 seconds
2021-05-24 12:45:40,588 - hyperopt.tpe - INFO - TPE using 84/84 trials with best loss -0.721682
2021-05-24 12:45:43,048 - HyperTuner_objective - INFO - ObjValue=-0.6770069003 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 437, 'epoch': 3, 'hidden_size': 444, 'lr': 1.219966228355125}
2021-05-24 12:45:43,051 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001656 seconds
2021-05-24 12:45:43,051 - hyperopt.tpe - INFO - TPE using 85/85 trials with best loss -0.721682
2021-05-24 12:45:43,949 - HyperTuner_objective - INFO - ObjValue=-0.7227621675 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 474, 'lr': 1.0545282227802755}
2021-05-24 12:45:43,959 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001673 seconds
2021-05-24 12:45:43,960 - hyperopt.tpe - INFO - TPE using 86/86 trials with best loss -0.722762
2021-05-24 12:45:44,873 - HyperTuner_objective - INFO - ObjValue=-0.7160144448 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 450, 'epoch': 1, 'hidden_size': 453, 'lr': 1.1601809964284113}
2021-05-24 12:45:44,876 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001673 seconds
2021-05-24 12:45:44,876 - hyperopt.tpe - INFO - TPE using 87/87 trials with best loss -0.722762
2021-05-24 12:45:45,782 - HyperTuner_objective - INFO - ObjValue=-0.7118345499 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 470, 'lr': 1.3270564786955092}
2021-05-24 12:45:45,785 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001683 seconds
2021-05-24 12:45:45,785 - hyperopt.tpe - INFO - TPE using 88/88 trials with best loss -0.722762
2021-05-24 12:45:46,601 - HyperTuner_objective - INFO - ObjValue=-0.6923381090 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 497, 'epoch': 1, 'hidden_size': 456, 'lr': 1.4645868021022228}
2021-05-24 12:45:46,603 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001576 seconds
2021-05-24 12:45:46,604 - hyperopt.tpe - INFO - TPE using 89/89 trials with best loss -0.722762
2021-05-24 12:45:47,530 - HyperTuner_objective - INFO - ObjValue=-0.6724784970 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 452, 'epoch': 1, 'hidden_size': 474, 'lr': 1.0481360363020324}
2021-05-24 12:45:47,532 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001532 seconds
2021-05-24 12:45:47,533 - hyperopt.tpe - INFO - TPE using 90/90 trials with best loss -0.722762
2021-05-24 12:45:48,464 - HyperTuner_objective - INFO - ObjValue=-0.6905551553 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 449, 'epoch': 1, 'hidden_size': 474, 'lr': 0.9684040399785965}
2021-05-24 12:45:48,467 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001556 seconds
2021-05-24 12:45:48,467 - hyperopt.tpe - INFO - TPE using 91/91 trials with best loss -0.722762
2021-05-24 12:45:49,430 - HyperTuner_objective - INFO - ObjValue=-0.6868329048 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 479, 'lr': 1.1009446803957166}
2021-05-24 12:45:49,433 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001687 seconds
2021-05-24 12:45:49,433 - hyperopt.tpe - INFO - TPE using 92/92 trials with best loss -0.722762
2021-05-24 12:45:50,329 - HyperTuner_objective - INFO - ObjValue=-0.7205526233 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 506, 'epoch': 1, 'hidden_size': 450, 'lr': 1.295296411704475}
2021-05-24 12:45:50,331 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001566 seconds
2021-05-24 12:45:50,332 - hyperopt.tpe - INFO - TPE using 93/93 trials with best loss -0.722762
2021-05-24 12:45:51,215 - HyperTuner_objective - INFO - ObjValue=-0.7159113288 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 506, 'epoch': 1, 'hidden_size': 477, 'lr': 1.3033904203080307}
2021-05-24 12:45:51,218 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001523 seconds
2021-05-24 12:45:51,218 - hyperopt.tpe - INFO - TPE using 94/94 trials with best loss -0.722762
2021-05-24 12:45:51,997 - HyperTuner_objective - INFO - ObjValue=-0.6933819056 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 506, 'epoch': 1, 'hidden_size': 450, 'lr': 1.4291228380729577}
2021-05-24 12:45:52,000 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001350 seconds
2021-05-24 12:45:52,000 - hyperopt.tpe - INFO - TPE using 95/95 trials with best loss -0.722762
2021-05-24 12:45:52,885 - HyperTuner_objective - INFO - ObjValue=-0.6659835577 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 434, 'epoch': 1, 'hidden_size': 450, 'lr': 1.3880807896644043}
2021-05-24 12:45:52,888 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001648 seconds
2021-05-24 12:45:52,888 - hyperopt.tpe - INFO - TPE using 96/96 trials with best loss -0.722762
2021-05-24 12:45:56,254 - HyperTuner_objective - INFO - ObjValue=-0.6486338377 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 484, 'epoch': 4, 'hidden_size': 459, 'lr': 1.2476119992986778}
2021-05-24 12:45:56,257 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001646 seconds
2021-05-24 12:45:56,257 - hyperopt.tpe - INFO - TPE using 97/97 trials with best loss -0.722762
2021-05-24 12:45:57,087 - HyperTuner_objective - INFO - ObjValue=-0.6921175122 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 432, 'epoch': 1, 'hidden_size': 440, 'lr': 0.8843431596510881}
2021-05-24 12:45:57,090 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001527 seconds
2021-05-24 12:45:57,090 - hyperopt.tpe - INFO - TPE using 98/98 trials with best loss -0.722762
2021-05-24 12:45:59,730 - HyperTuner_objective - INFO - ObjValue=-0.6949221492 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 464, 'epoch': 3, 'hidden_size': 451, 'lr': 0.9435237841128297}
2021-05-24 12:45:59,732 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001749 seconds
2021-05-24 12:45:59,733 - hyperopt.tpe - INFO - TPE using 99/99 trials with best loss -0.722762
2021-05-24 12:46:00,646 - HyperTuner_objective - INFO - ObjValue=-0.7158774137 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 491, 'epoch': 1, 'hidden_size': 469, 'lr': 0.9811011405491125}
2021-05-24 12:46:00,648 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001633 seconds
2021-05-24 12:46:00,649 - hyperopt.tpe - INFO - TPE using 100/100 trials with best loss -0.722762
2021-05-24 12:46:01,514 - HyperTuner_objective - INFO - ObjValue=-0.7119066715 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 477, 'epoch': 1, 'hidden_size': 462, 'lr': 1.1369800248355606}
2021-05-24 12:46:01,516 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001625 seconds
2021-05-24 12:46:01,517 - hyperopt.tpe - INFO - TPE using 101/101 trials with best loss -0.722762
2021-05-24 12:46:02,304 - HyperTuner_objective - INFO - ObjValue=-0.7121728063 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 510, 'epoch': 1, 'hidden_size': 438, 'lr': 1.1779412028596457}
2021-05-24 12:46:02,306 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001263 seconds
2021-05-24 12:46:02,306 - hyperopt.tpe - INFO - TPE using 102/102 trials with best loss -0.722762
2021-05-24 12:46:05,486 - HyperTuner_objective - INFO - ObjValue=-0.6637720466 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 459, 'epoch': 4, 'hidden_size': 446, 'lr': 1.2190132489618133}
2021-05-24 12:46:05,491 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001963 seconds
2021-05-24 12:46:05,491 - hyperopt.tpe - INFO - TPE using 103/103 trials with best loss -0.722762
2021-05-24 12:46:06,548 - HyperTuner_objective - INFO - ObjValue=-0.6974548697 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 431, 'epoch': 1, 'hidden_size': 478, 'lr': 1.3398733170582688}
2021-05-24 12:46:06,552 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002125 seconds
2021-05-24 12:46:06,552 - hyperopt.tpe - INFO - TPE using 104/104 trials with best loss -0.722762
2021-05-24 12:46:09,084 - HyperTuner_objective - INFO - ObjValue=-0.6838926077 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 487, 'epoch': 3, 'hidden_size': 460, 'lr': 1.1953277611576762}
2021-05-24 12:46:09,087 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001794 seconds
2021-05-24 12:46:09,087 - hyperopt.tpe - INFO - TPE using 105/105 trials with best loss -0.722762
2021-05-24 12:46:10,051 - HyperTuner_objective - INFO - ObjValue=-0.6644111276 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 454, 'epoch': 1, 'hidden_size': 482, 'lr': 1.2674436855567817}
2021-05-24 12:46:10,054 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001562 seconds
2021-05-24 12:46:10,054 - hyperopt.tpe - INFO - TPE using 106/106 trials with best loss -0.722762
2021-05-24 12:46:11,086 - HyperTuner_objective - INFO - ObjValue=-0.7030072212 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 435, 'epoch': 1, 'hidden_size': 484, 'lr': 1.066449990852725}
2021-05-24 12:46:11,089 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001620 seconds
2021-05-24 12:46:11,090 - hyperopt.tpe - INFO - TPE using 107/107 trials with best loss -0.722762
2021-05-24 12:46:14,598 - HyperTuner_objective - INFO - ObjValue=-0.6532319784 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 472, 'epoch': 4, 'hidden_size': 474, 'lr': 1.1081595446840287}
2021-05-24 12:46:14,601 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001806 seconds
2021-05-24 12:46:14,601 - hyperopt.tpe - INFO - TPE using 108/108 trials with best loss -0.722762
2021-05-24 12:46:15,522 - HyperTuner_objective - INFO - ObjValue=-0.7089641690 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 483, 'lr': 0.9312632443562302}
2021-05-24 12:46:15,525 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001564 seconds
2021-05-24 12:46:15,525 - hyperopt.tpe - INFO - TPE using 109/109 trials with best loss -0.722762
2021-05-24 12:46:16,399 - HyperTuner_objective - INFO - ObjValue=-0.6923848391 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 440, 'epoch': 1, 'hidden_size': 449, 'lr': 1.0097580837778095}
2021-05-24 12:46:16,403 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002060 seconds
2021-05-24 12:46:16,403 - hyperopt.tpe - INFO - TPE using 110/110 trials with best loss -0.722762
2021-05-24 12:46:19,053 - HyperTuner_objective - INFO - ObjValue=-0.6875953078 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 421, 'epoch': 3, 'hidden_size': 447, 'lr': 0.8367005415817996}
2021-05-24 12:46:19,056 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001534 seconds
2021-05-24 12:46:19,056 - hyperopt.tpe - INFO - TPE using 111/111 trials with best loss -0.722762
2021-05-24 12:46:20,026 - HyperTuner_objective - INFO - ObjValue=-0.7143997550 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 1, 'hidden_size': 471, 'lr': 0.9023120018306491}
2021-05-24 12:46:20,029 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001576 seconds
2021-05-24 12:46:20,029 - hyperopt.tpe - INFO - TPE using 112/112 trials with best loss -0.722762
2021-05-24 12:46:20,904 - HyperTuner_objective - INFO - ObjValue=-0.7010339499 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 473, 'epoch': 1, 'hidden_size': 465, 'lr': 1.1475238499624687}
2021-05-24 12:46:20,908 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001900 seconds
2021-05-24 12:46:20,908 - hyperopt.tpe - INFO - TPE using 113/113 trials with best loss -0.722762
2021-05-24 12:46:24,410 - HyperTuner_objective - INFO - ObjValue=-0.6541796923 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 447, 'epoch': 4, 'hidden_size': 480, 'lr': 1.3756127828670492}
2021-05-24 12:46:24,413 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001593 seconds
2021-05-24 12:46:24,413 - hyperopt.tpe - INFO - TPE using 114/114 trials with best loss -0.722762
2021-05-24 12:46:25,415 - HyperTuner_objective - INFO - ObjValue=-0.7071075439 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 494, 'epoch': 1, 'hidden_size': 473, 'lr': 1.079421541773311}
2021-05-24 12:46:25,418 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001623 seconds
2021-05-24 12:46:25,419 - hyperopt.tpe - INFO - TPE using 115/115 trials with best loss -0.722762
2021-05-24 12:46:26,255 - HyperTuner_objective - INFO - ObjValue=-0.7033520937 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 417, 'epoch': 1, 'hidden_size': 436, 'lr': 0.8104734230897437}
2021-05-24 12:46:26,258 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001662 seconds
2021-05-24 12:46:26,259 - hyperopt.tpe - INFO - TPE using 116/116 trials with best loss -0.722762
2021-05-24 12:46:28,660 - HyperTuner_objective - INFO - ObjValue=-0.6858824492 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 501, 'epoch': 3, 'hidden_size': 464, 'lr': 1.4140173320695935}
2021-05-24 12:46:28,663 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001672 seconds
2021-05-24 12:46:28,663 - hyperopt.tpe - INFO - TPE using 117/117 trials with best loss -0.722762
2021-05-24 12:46:29,546 - HyperTuner_objective - INFO - ObjValue=-0.6954829097 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 485, 'epoch': 1, 'hidden_size': 454, 'lr': 1.0288541120164503}
2021-05-24 12:46:29,549 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001614 seconds
2021-05-24 12:46:29,549 - hyperopt.tpe - INFO - TPE using 118/118 trials with best loss -0.722762
2021-05-24 12:46:30,462 - HyperTuner_objective - INFO - ObjValue=-0.6909025908 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 457, 'epoch': 1, 'hidden_size': 456, 'lr': 0.8488914903444464}
2021-05-24 12:46:30,465 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001691 seconds
2021-05-24 12:46:30,465 - hyperopt.tpe - INFO - TPE using 119/119 trials with best loss -0.722762
2021-05-24 12:46:33,873 - HyperTuner_objective - INFO - ObjValue=-0.6539734602 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 488, 'epoch': 4, 'hidden_size': 439, 'lr': 1.4946325827143339}
2021-05-24 12:46:33,877 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001953 seconds
2021-05-24 12:46:33,877 - hyperopt.tpe - INFO - TPE using 120/120 trials with best loss -0.722762
2021-05-24 12:46:34,837 - HyperTuner_objective - INFO - ObjValue=-0.6978847980 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 465, 'epoch': 1, 'hidden_size': 457, 'lr': 1.286234272173897}
2021-05-24 12:46:34,841 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001770 seconds
2021-05-24 12:46:34,841 - hyperopt.tpe - INFO - TPE using 121/121 trials with best loss -0.722762
2021-05-24 12:46:37,741 - HyperTuner_objective - INFO - ObjValue=-0.6886227131 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 420, 'epoch': 3, 'hidden_size': 450, 'lr': 1.0517810636364433}
2021-05-24 12:46:37,745 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001971 seconds
2021-05-24 12:46:37,745 - hyperopt.tpe - INFO - TPE using 122/122 trials with best loss -0.722762
2021-05-24 12:46:38,767 - HyperTuner_objective - INFO - ObjValue=-0.6939750314 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 433, 'epoch': 1, 'hidden_size': 468, 'lr': 1.448432414456087}
2021-05-24 12:46:38,771 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001977 seconds
2021-05-24 12:46:38,771 - hyperopt.tpe - INFO - TPE using 123/123 trials with best loss -0.722762
2021-05-24 12:46:39,811 - HyperTuner_objective - INFO - ObjValue=-0.6672097445 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 453, 'epoch': 1, 'hidden_size': 466, 'lr': 1.1252590971126208}
2021-05-24 12:46:39,815 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002204 seconds
2021-05-24 12:46:39,816 - hyperopt.tpe - INFO - TPE using 124/124 trials with best loss -0.722762
2021-05-24 12:46:40,836 - HyperTuner_objective - INFO - ObjValue=-0.7181343436 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 476, 'lr': 0.9888447256474304}
2021-05-24 12:46:40,839 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001733 seconds
2021-05-24 12:46:40,839 - hyperopt.tpe - INFO - TPE using 125/125 trials with best loss -0.722762
2021-05-24 12:46:44,517 - HyperTuner_objective - INFO - ObjValue=-0.6640048027 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 498, 'epoch': 4, 'hidden_size': 461, 'lr': 1.314058517690313}
2021-05-24 12:46:44,520 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001692 seconds
2021-05-24 12:46:44,521 - hyperopt.tpe - INFO - TPE using 126/126 trials with best loss -0.722762
2021-05-24 12:46:45,536 - HyperTuner_objective - INFO - ObjValue=-0.6929544210 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 413, 'epoch': 1, 'hidden_size': 448, 'lr': 0.7000205046270371}
2021-05-24 12:46:45,539 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001656 seconds
2021-05-24 12:46:45,540 - hyperopt.tpe - INFO - TPE using 127/127 trials with best loss -0.722762
2021-05-24 12:46:46,457 - HyperTuner_objective - INFO - ObjValue=-0.7121016383 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 504, 'epoch': 1, 'hidden_size': 455, 'lr': 0.9312057720093454}
2021-05-24 12:46:46,461 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002000 seconds
2021-05-24 12:46:46,462 - hyperopt.tpe - INFO - TPE using 128/128 trials with best loss -0.722762
2021-05-24 12:46:49,277 - HyperTuner_objective - INFO - ObjValue=-0.6984944344 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 482, 'epoch': 3, 'hidden_size': 472, 'lr': 0.6163525216259904}
2021-05-24 12:46:49,280 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001716 seconds
2021-05-24 12:46:49,281 - hyperopt.tpe - INFO - TPE using 129/129 trials with best loss -0.722762
2021-05-24 12:46:50,463 - HyperTuner_objective - INFO - ObjValue=-0.6966114044 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 429, 'epoch': 1, 'hidden_size': 481, 'lr': 0.7601499422467816}
2021-05-24 12:46:50,466 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001748 seconds
2021-05-24 12:46:50,466 - hyperopt.tpe - INFO - TPE using 130/130 trials with best loss -0.722762
2021-05-24 12:46:51,405 - HyperTuner_objective - INFO - ObjValue=-0.6894598007 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 426, 'epoch': 1, 'hidden_size': 442, 'lr': 0.671912795572023}
2021-05-24 12:46:51,408 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001815 seconds
2021-05-24 12:46:51,409 - hyperopt.tpe - INFO - TPE using 131/131 trials with best loss -0.722762
2021-05-24 12:46:55,640 - HyperTuner_objective - INFO - ObjValue=-0.6619301438 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 444, 'epoch': 4, 'hidden_size': 463, 'lr': 0.7869721522708051}
2021-05-24 12:46:55,650 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.004898 seconds
2021-05-24 12:46:55,650 - hyperopt.tpe - INFO - TPE using 132/132 trials with best loss -0.722762
2021-05-24 12:46:57,342 - HyperTuner_objective - INFO - ObjValue=-0.7025220394 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 2, 'hidden_size': 437, 'lr': 1.344400144353172}
2021-05-24 12:46:57,345 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001456 seconds
2021-05-24 12:46:57,346 - hyperopt.tpe - INFO - TPE using 133/133 trials with best loss -0.722762
2021-05-24 12:46:58,156 - HyperTuner_objective - INFO - ObjValue=-0.6986895800 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 446, 'epoch': 1, 'hidden_size': 441, 'lr': 1.2360934798442813}
2021-05-24 12:46:58,159 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001324 seconds
2021-05-24 12:46:58,159 - hyperopt.tpe - INFO - TPE using 134/134 trials with best loss -0.722762
2021-05-24 12:46:58,980 - HyperTuner_objective - INFO - ObjValue=-0.7047973275 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 470, 'epoch': 1, 'hidden_size': 458, 'lr': 1.1886117574156858}
2021-05-24 12:46:58,984 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001734 seconds
2021-05-24 12:46:58,984 - hyperopt.tpe - INFO - TPE using 135/135 trials with best loss -0.722762
2021-05-24 12:47:01,733 - HyperTuner_objective - INFO - ObjValue=-0.6868252158 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 456, 'epoch': 3, 'hidden_size': 474, 'lr': 0.8716987822901138}
2021-05-24 12:47:01,736 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001682 seconds
2021-05-24 12:47:01,737 - hyperopt.tpe - INFO - TPE using 136/136 trials with best loss -0.722762
2021-05-24 12:47:02,732 - HyperTuner_objective - INFO - ObjValue=-0.7171047330 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 505, 'epoch': 1, 'hidden_size': 485, 'lr': 0.9695146579910948}
2021-05-24 12:47:02,734 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001317 seconds
2021-05-24 12:47:02,735 - hyperopt.tpe - INFO - TPE using 137/137 trials with best loss -0.722762
2021-05-24 12:47:03,750 - HyperTuner_objective - INFO - ObjValue=-0.7206099033 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 428, 'epoch': 1, 'hidden_size': 450, 'lr': 0.7367563181300989}
2021-05-24 12:47:03,753 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001715 seconds
2021-05-24 12:47:03,754 - hyperopt.tpe - INFO - TPE using 138/138 trials with best loss -0.722762
2021-05-24 12:47:05,966 - HyperTuner_objective - INFO - ObjValue=-0.7140772343 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 428, 'epoch': 2, 'hidden_size': 475, 'lr': 0.5820496658589935}
2021-05-24 12:47:05,969 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001848 seconds
2021-05-24 12:47:05,970 - hyperopt.tpe - INFO - TPE using 139/139 trials with best loss -0.722762
2021-05-24 12:47:09,739 - HyperTuner_objective - INFO - ObjValue=-0.6692433357 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 428, 'epoch': 4, 'hidden_size': 456, 'lr': 0.7337645898111469}
2021-05-24 12:47:09,742 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001566 seconds
2021-05-24 12:47:09,742 - hyperopt.tpe - INFO - TPE using 140/140 trials with best loss -0.722762
2021-05-24 12:47:10,576 - HyperTuner_objective - INFO - ObjValue=-0.6914508343 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 444, 'lr': 0.8850336988903827}
2021-05-24 12:47:10,579 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001686 seconds
2021-05-24 12:47:10,580 - hyperopt.tpe - INFO - TPE using 141/141 trials with best loss -0.722762
2021-05-24 12:47:11,455 - HyperTuner_objective - INFO - ObjValue=-0.6872492433 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 474, 'epoch': 1, 'hidden_size': 443, 'lr': 0.5290092590586047}
2021-05-24 12:47:11,458 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001649 seconds
2021-05-24 12:47:11,458 - hyperopt.tpe - INFO - TPE using 142/142 trials with best loss -0.722762
2021-05-24 12:47:14,327 - HyperTuner_objective - INFO - ObjValue=-0.6955391169 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 423, 'epoch': 3, 'hidden_size': 452, 'lr': 0.753710246187772}
2021-05-24 12:47:14,330 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001727 seconds
2021-05-24 12:47:14,330 - hyperopt.tpe - INFO - TPE using 143/143 trials with best loss -0.722762
2021-05-24 12:47:15,244 - HyperTuner_objective - INFO - ObjValue=-0.6957650185 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 496, 'epoch': 1, 'hidden_size': 479, 'lr': 0.6607103320523249}
2021-05-24 12:47:15,247 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001700 seconds
2021-05-24 12:47:15,248 - hyperopt.tpe - INFO - TPE using 144/144 trials with best loss -0.722762
2021-05-24 12:47:17,254 - HyperTuner_objective - INFO - ObjValue=-0.6970055103 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 461, 'epoch': 2, 'hidden_size': 477, 'lr': 0.8241460983791592}
2021-05-24 12:47:17,257 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001737 seconds
2021-05-24 12:47:17,257 - hyperopt.tpe - INFO - TPE using 145/145 trials with best loss -0.722762
2021-05-24 12:47:18,299 - HyperTuner_objective - INFO - ObjValue=-0.6926195621 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 506, 'epoch': 1, 'hidden_size': 450, 'lr': 0.7037173933235277}
2021-05-24 12:47:18,303 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001833 seconds
2021-05-24 12:47:18,303 - hyperopt.tpe - INFO - TPE using 146/146 trials with best loss -0.722762
2021-05-24 12:47:19,253 - HyperTuner_objective - INFO - ObjValue=-0.6850430369 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 511, 'epoch': 1, 'hidden_size': 451, 'lr': 0.5541501694710056}
2021-05-24 12:47:19,256 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001849 seconds
2021-05-24 12:47:19,257 - hyperopt.tpe - INFO - TPE using 147/147 trials with best loss -0.722762
2021-05-24 12:47:20,282 - HyperTuner_objective - INFO - ObjValue=-0.6894742250 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 450, 'lr': 0.6010084229353733}
2021-05-24 12:47:20,285 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002010 seconds
2021-05-24 12:47:20,286 - hyperopt.tpe - INFO - TPE using 148/148 trials with best loss -0.722762
2021-05-24 12:47:21,297 - HyperTuner_objective - INFO - ObjValue=-0.7023953199 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 430, 'epoch': 1, 'hidden_size': 450, 'lr': 0.8612396894648013}
2021-05-24 12:47:21,300 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002015 seconds
2021-05-24 12:47:21,301 - hyperopt.tpe - INFO - TPE using 149/149 trials with best loss -0.722762
2021-05-24 12:47:22,320 - HyperTuner_objective - INFO - ObjValue=-0.6957052350 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 499, 'epoch': 1, 'hidden_size': 459, 'lr': 0.6370496778903447}
2021-05-24 12:47:22,323 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001752 seconds
2021-05-24 12:47:22,324 - hyperopt.tpe - INFO - TPE using 150/150 trials with best loss -0.722762
2021-05-24 12:47:23,276 - HyperTuner_objective - INFO - ObjValue=-0.6973081231 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 490, 'epoch': 1, 'hidden_size': 453, 'lr': 0.9409330292642424}
2021-05-24 12:47:23,279 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001891 seconds
2021-05-24 12:47:23,280 - hyperopt.tpe - INFO - TPE using 151/151 trials with best loss -0.722762
2021-05-24 12:47:24,261 - HyperTuner_objective - INFO - ObjValue=-0.7079928517 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 507, 'epoch': 1, 'hidden_size': 470, 'lr': 0.9040014217278195}
2021-05-24 12:47:24,264 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001677 seconds
2021-05-24 12:47:24,265 - hyperopt.tpe - INFO - TPE using 152/152 trials with best loss -0.722762
2021-05-24 12:47:25,299 - HyperTuner_objective - INFO - ObjValue=-0.6975682378 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 418, 'epoch': 1, 'hidden_size': 440, 'lr': 0.8025005978853249}
2021-05-24 12:47:25,302 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001963 seconds
2021-05-24 12:47:25,303 - hyperopt.tpe - INFO - TPE using 153/153 trials with best loss -0.722762
2021-05-24 12:47:26,452 - HyperTuner_objective - INFO - ObjValue=-0.7092368603 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 443, 'epoch': 1, 'hidden_size': 482, 'lr': 1.000693348696546}
2021-05-24 12:47:26,456 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002390 seconds
2021-05-24 12:47:26,457 - hyperopt.tpe - INFO - TPE using 154/154 trials with best loss -0.722762
2021-05-24 12:47:27,496 - HyperTuner_objective - INFO - ObjValue=-0.7308292389 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 438, 'lr': 1.0802929453442454}
2021-05-24 12:47:27,500 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001797 seconds
2021-05-24 12:47:27,500 - hyperopt.tpe - INFO - TPE using 155/155 trials with best loss -0.730829
2021-05-24 12:47:28,470 - HyperTuner_objective - INFO - ObjValue=-0.6981477141 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 438, 'lr': 1.0318554595119473}
2021-05-24 12:47:28,474 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001988 seconds
2021-05-24 12:47:28,475 - hyperopt.tpe - INFO - TPE using 156/156 trials with best loss -0.730829
2021-05-24 12:47:29,437 - HyperTuner_objective - INFO - ObjValue=-0.7158069015 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 412, 'epoch': 1, 'hidden_size': 438, 'lr': 1.0591694564403358}
2021-05-24 12:47:29,440 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001556 seconds
2021-05-24 12:47:29,441 - hyperopt.tpe - INFO - TPE using 157/157 trials with best loss -0.730829
2021-05-24 12:47:30,446 - HyperTuner_objective - INFO - ObjValue=-0.6905323863 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 462, 'lr': 1.0972510389699295}
2021-05-24 12:47:30,449 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001647 seconds
2021-05-24 12:47:30,450 - hyperopt.tpe - INFO - TPE using 158/158 trials with best loss -0.730829
2021-05-24 12:47:31,574 - HyperTuner_objective - INFO - ObjValue=-0.7125896811 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 439, 'epoch': 1, 'hidden_size': 484, 'lr': 0.9591057285048983}
2021-05-24 12:47:31,578 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002036 seconds
2021-05-24 12:47:31,578 - hyperopt.tpe - INFO - TPE using 159/159 trials with best loss -0.730829
2021-05-24 12:47:32,503 - HyperTuner_objective - INFO - ObjValue=-0.6773634553 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 476, 'epoch': 1, 'hidden_size': 438, 'lr': 1.082262580114369}
2021-05-24 12:47:32,507 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002398 seconds
2021-05-24 12:47:32,508 - hyperopt.tpe - INFO - TPE using 160/160 trials with best loss -0.730829
2021-05-24 12:47:36,294 - HyperTuner_objective - INFO - ObjValue=-0.6576983333 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 481, 'epoch': 4, 'hidden_size': 460, 'lr': 1.1357598431359066}
2021-05-24 12:47:36,298 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001902 seconds
2021-05-24 12:47:36,298 - hyperopt.tpe - INFO - TPE using 161/161 trials with best loss -0.730829
2021-05-24 12:47:37,357 - HyperTuner_objective - INFO - ObjValue=-0.6988943815 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 422, 'epoch': 1, 'hidden_size': 478, 'lr': 1.1657468598404213}
2021-05-24 12:47:37,361 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002247 seconds
2021-05-24 12:47:37,362 - hyperopt.tpe - INFO - TPE using 162/162 trials with best loss -0.730829
2021-05-24 12:47:40,337 - HyperTuner_objective - INFO - ObjValue=-0.6845332384 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 469, 'epoch': 3, 'hidden_size': 471, 'lr': 0.9785619716536184}
2021-05-24 12:47:40,340 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001758 seconds
2021-05-24 12:47:40,341 - hyperopt.tpe - INFO - TPE using 163/163 trials with best loss -0.730829
2021-05-24 12:47:41,260 - HyperTuner_objective - INFO - ObjValue=-0.7207246423 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 442, 'epoch': 1, 'hidden_size': 446, 'lr': 1.0133502776907215}
2021-05-24 12:47:41,263 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001713 seconds
2021-05-24 12:47:41,264 - hyperopt.tpe - INFO - TPE using 164/164 trials with best loss -0.730829
2021-05-24 12:47:42,259 - HyperTuner_objective - INFO - ObjValue=-0.7056639194 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 414, 'epoch': 1, 'hidden_size': 446, 'lr': 1.0210072963382237}
2021-05-24 12:47:42,262 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001863 seconds
2021-05-24 12:47:42,263 - hyperopt.tpe - INFO - TPE using 165/165 trials with best loss -0.730829
2021-05-24 12:47:44,144 - HyperTuner_objective - INFO - ObjValue=-0.6983954906 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 442, 'epoch': 2, 'hidden_size': 446, 'lr': 0.9163348740235947}
2021-05-24 12:47:44,147 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001609 seconds
2021-05-24 12:47:44,148 - hyperopt.tpe - INFO - TPE using 166/166 trials with best loss -0.730829
2021-05-24 12:47:45,065 - HyperTuner_objective - INFO - ObjValue=-0.6974415183 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 467, 'epoch': 1, 'hidden_size': 474, 'lr': 1.1142999818586343}
2021-05-24 12:47:45,068 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001663 seconds
2021-05-24 12:47:45,068 - hyperopt.tpe - INFO - TPE using 167/167 trials with best loss -0.730829
2021-05-24 12:47:50,548 - HyperTuner_objective - INFO - ObjValue=-0.6568406820 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 442, 'epoch': 4, 'hidden_size': 446, 'lr': 1.0418940772564154}
2021-05-24 12:47:50,552 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002262 seconds
2021-05-24 12:47:50,553 - hyperopt.tpe - INFO - TPE using 168/168 trials with best loss -0.730829
2021-05-24 12:47:51,584 - HyperTuner_objective - INFO - ObjValue=-0.7059531212 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 493, 'epoch': 1, 'hidden_size': 469, 'lr': 1.2277074782104016}
2021-05-24 12:47:51,588 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002348 seconds
2021-05-24 12:47:51,589 - hyperopt.tpe - INFO - TPE using 169/169 trials with best loss -0.730829
2021-05-24 12:47:52,786 - HyperTuner_objective - INFO - ObjValue=-0.7205066085 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 479, 'epoch': 1, 'hidden_size': 483, 'lr': 1.1502312679934854}
2021-05-24 12:47:52,789 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001606 seconds
2021-05-24 12:47:52,790 - hyperopt.tpe - INFO - TPE using 170/170 trials with best loss -0.730829
2021-05-24 12:47:55,649 - HyperTuner_objective - INFO - ObjValue=-0.6795713305 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 441, 'epoch': 3, 'hidden_size': 480, 'lr': 1.0731601044182413}
2021-05-24 12:47:55,651 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001508 seconds
2021-05-24 12:47:55,652 - hyperopt.tpe - INFO - TPE using 171/171 trials with best loss -0.730829
2021-05-24 12:47:56,591 - HyperTuner_objective - INFO - ObjValue=-0.7150453329 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 489, 'epoch': 1, 'hidden_size': 449, 'lr': 0.9947733559862953}
2021-05-24 12:47:56,595 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002170 seconds
2021-05-24 12:47:56,595 - hyperopt.tpe - INFO - TPE using 172/172 trials with best loss -0.730829
2021-05-24 12:47:58,453 - HyperTuner_objective - INFO - ObjValue=-0.6898026466 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 475, 'epoch': 2, 'hidden_size': 454, 'lr': 1.2087959200209473}
2021-05-24 12:47:58,457 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001893 seconds
2021-05-24 12:47:58,457 - hyperopt.tpe - INFO - TPE using 173/173 trials with best loss -0.730829
2021-05-24 12:47:59,358 - HyperTuner_objective - INFO - ObjValue=-0.7185499668 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 500, 'epoch': 1, 'hidden_size': 456, 'lr': 1.094987989803614}
2021-05-24 12:47:59,362 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001879 seconds
2021-05-24 12:47:59,362 - hyperopt.tpe - INFO - TPE using 174/174 trials with best loss -0.730829
2021-05-24 12:48:00,312 - HyperTuner_objective - INFO - ObjValue=-0.7133343816 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 436, 'epoch': 1, 'hidden_size': 447, 'lr': 1.1792654921852306}
2021-05-24 12:48:00,315 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001730 seconds
2021-05-24 12:48:00,315 - hyperopt.tpe - INFO - TPE using 175/175 trials with best loss -0.730829
2021-05-24 12:48:03,837 - HyperTuner_objective - INFO - ObjValue=-0.6627714634 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 503, 'epoch': 4, 'hidden_size': 467, 'lr': 0.9569721393409246}
2021-05-24 12:48:03,839 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001269 seconds
2021-05-24 12:48:03,839 - hyperopt.tpe - INFO - TPE using 176/176 trials with best loss -0.730829
2021-05-24 12:48:05,311 - HyperTuner_objective - INFO - ObjValue=-0.6891735196 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 471, 'epoch': 1, 'hidden_size': 465, 'lr': 0.8463733784712534}
2021-05-24 12:48:05,315 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001893 seconds
2021-05-24 12:48:05,316 - hyperopt.tpe - INFO - TPE using 177/177 trials with best loss -0.730829
2021-05-24 12:48:09,530 - HyperTuner_objective - INFO - ObjValue=-0.6905300021 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 425, 'epoch': 3, 'hidden_size': 473, 'lr': 1.0155722681281834}
2021-05-24 12:48:09,534 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002159 seconds
2021-05-24 12:48:09,534 - hyperopt.tpe - INFO - TPE using 178/178 trials with best loss -0.730829
2021-05-24 12:48:10,451 - HyperTuner_objective - INFO - ObjValue=-0.7053445578 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 451, 'epoch': 1, 'hidden_size': 448, 'lr': 1.2573865221054723}
2021-05-24 12:48:10,455 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001930 seconds
2021-05-24 12:48:10,456 - hyperopt.tpe - INFO - TPE using 179/179 trials with best loss -0.730829
2021-05-24 12:48:11,350 - HyperTuner_objective - INFO - ObjValue=-0.6935705543 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 483, 'epoch': 1, 'hidden_size': 436, 'lr': 1.0484793809679025}
2021-05-24 12:48:11,354 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001780 seconds
2021-05-24 12:48:11,354 - hyperopt.tpe - INFO - TPE using 180/180 trials with best loss -0.730829
2021-05-24 12:48:13,210 - HyperTuner_objective - INFO - ObjValue=-0.6948630214 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 486, 'epoch': 2, 'hidden_size': 461, 'lr': 0.8929170913474095}
2021-05-24 12:48:13,213 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001839 seconds
2021-05-24 12:48:13,214 - hyperopt.tpe - INFO - TPE using 181/181 trials with best loss -0.730829
2021-05-24 12:48:14,152 - HyperTuner_objective - INFO - ObjValue=-0.7020800710 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 463, 'epoch': 1, 'hidden_size': 457, 'lr': 1.118883992698703}
2021-05-24 12:48:14,156 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001798 seconds
2021-05-24 12:48:14,156 - hyperopt.tpe - INFO - TPE using 182/182 trials with best loss -0.730829
2021-05-24 12:48:17,803 - HyperTuner_objective - INFO - ObjValue=-0.6613817215 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 448, 'epoch': 4, 'hidden_size': 464, 'lr': 0.9407755476945919}
2021-05-24 12:48:17,807 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002785 seconds
2021-05-24 12:48:17,808 - hyperopt.tpe - INFO - TPE using 183/183 trials with best loss -0.730829
2021-05-24 12:48:18,680 - HyperTuner_objective - INFO - ObjValue=-0.7083825469 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 509, 'epoch': 1, 'hidden_size': 468, 'lr': 1.00327021819886}
2021-05-24 12:48:18,682 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001290 seconds
2021-05-24 12:48:18,683 - hyperopt.tpe - INFO - TPE using 184/184 trials with best loss -0.730829
2021-05-24 12:48:19,574 - HyperTuner_objective - INFO - ObjValue=-0.7043333650 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 495, 'epoch': 1, 'hidden_size': 466, 'lr': 0.9274447073924101}
2021-05-24 12:48:19,577 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001697 seconds
2021-05-24 12:48:19,578 - hyperopt.tpe - INFO - TPE using 185/185 trials with best loss -0.730829
2021-05-24 12:48:22,319 - HyperTuner_objective - INFO - ObjValue=-0.6869739294 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 508, 'epoch': 3, 'hidden_size': 455, 'lr': 0.823272434939152}
2021-05-24 12:48:22,322 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001759 seconds
2021-05-24 12:48:22,323 - hyperopt.tpe - INFO - TPE using 186/186 trials with best loss -0.730829
2021-05-24 12:48:23,266 - HyperTuner_objective - INFO - ObjValue=-0.7035380602 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 427, 'epoch': 1, 'hidden_size': 439, 'lr': 0.9800944396234311}
2021-05-24 12:48:23,269 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001735 seconds
2021-05-24 12:48:23,270 - hyperopt.tpe - INFO - TPE using 187/187 trials with best loss -0.730829
2021-05-24 12:48:24,140 - HyperTuner_objective - INFO - ObjValue=-0.7156472206 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 1, 'hidden_size': 472, 'lr': 1.1553828608865488}
2021-05-24 12:48:24,143 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001959 seconds
2021-05-24 12:48:24,144 - hyperopt.tpe - INFO - TPE using 188/188 trials with best loss -0.730829
2021-05-24 12:48:26,355 - HyperTuner_objective - INFO - ObjValue=-0.6835224032 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 416, 'epoch': 2, 'hidden_size': 474, 'lr': 1.0730341998452677}
2021-05-24 12:48:26,358 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001852 seconds
2021-05-24 12:48:26,359 - hyperopt.tpe - INFO - TPE using 189/189 trials with best loss -0.730829
2021-05-24 12:48:27,305 - HyperTuner_objective - INFO - ObjValue=-0.7207611799 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 484, 'epoch': 1, 'hidden_size': 463, 'lr': 0.86777134972721}
2021-05-24 12:48:27,308 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001736 seconds
2021-05-24 12:48:27,309 - hyperopt.tpe - INFO - TPE using 190/190 trials with best loss -0.730829
2021-05-24 12:48:28,226 - HyperTuner_objective - INFO - ObjValue=-0.7092953920 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 458, 'epoch': 1, 'hidden_size': 463, 'lr': 0.8718930954023999}
2021-05-24 12:48:28,229 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001879 seconds
2021-05-24 12:48:28,230 - hyperopt.tpe - INFO - TPE using 191/191 trials with best loss -0.730829
2021-05-24 12:48:31,605 - HyperTuner_objective - INFO - ObjValue=-0.6630262733 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 484, 'epoch': 4, 'hidden_size': 458, 'lr': 0.9573295230433915}
2021-05-24 12:48:31,608 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001659 seconds
2021-05-24 12:48:31,608 - hyperopt.tpe - INFO - TPE using 192/192 trials with best loss -0.730829
2021-05-24 12:48:32,609 - HyperTuner_objective - INFO - ObjValue=-0.7130435705 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 450, 'epoch': 1, 'hidden_size': 463, 'lr': 0.793163802813}
2021-05-24 12:48:32,613 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002518 seconds
2021-05-24 12:48:32,613 - hyperopt.tpe - INFO - TPE using 193/193 trials with best loss -0.730829
2021-05-24 12:48:33,617 - HyperTuner_objective - INFO - ObjValue=-0.7155025601 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 442, 'lr': 0.7669185634655401}
2021-05-24 12:48:33,622 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002871 seconds
2021-05-24 12:48:33,623 - hyperopt.tpe - INFO - TPE using 194/194 trials with best loss -0.730829
2021-05-24 12:48:36,296 - HyperTuner_objective - INFO - ObjValue=-0.6859512329 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 492, 'epoch': 3, 'hidden_size': 437, 'lr': 0.9076921772300341}
2021-05-24 12:48:36,298 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001355 seconds
2021-05-24 12:48:36,299 - hyperopt.tpe - INFO - TPE using 195/195 trials with best loss -0.730829
2021-05-24 12:48:37,291 - HyperTuner_objective - INFO - ObjValue=-0.7048695683 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 424, 'epoch': 1, 'hidden_size': 463, 'lr': 0.8458087806574118}
2021-05-24 12:48:37,294 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001698 seconds
2021-05-24 12:48:37,294 - hyperopt.tpe - INFO - TPE using 196/196 trials with best loss -0.730829
2021-05-24 12:48:39,072 - HyperTuner_objective - INFO - ObjValue=-0.7108705044 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 468, 'epoch': 2, 'hidden_size': 476, 'lr': 0.820757990242635}
2021-05-24 12:48:39,075 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001656 seconds
2021-05-24 12:48:39,076 - hyperopt.tpe - INFO - TPE using 197/197 trials with best loss -0.730829
2021-05-24 12:48:39,975 - HyperTuner_objective - INFO - ObjValue=-0.7063215971 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 484, 'epoch': 1, 'hidden_size': 481, 'lr': 0.8859765358725095}
2021-05-24 12:48:39,978 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001724 seconds
2021-05-24 12:48:39,979 - hyperopt.tpe - INFO - TPE using 198/198 trials with best loss -0.730829
2021-05-24 12:48:40,842 - HyperTuner_objective - INFO - ObjValue=-0.6895875931 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 437, 'epoch': 1, 'hidden_size': 456, 'lr': 0.8604659965087759}
2021-05-24 12:48:40,845 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001549 seconds
2021-05-24 12:48:40,846 - hyperopt.tpe - INFO - TPE using 199/199 trials with best loss -0.730829
2021-05-24 12:48:44,458 - HyperTuner_objective - INFO - ObjValue=-0.6620985866 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 432, 'epoch': 4, 'hidden_size': 441, 'lr': 1.2004627088806608}
2021-05-24 12:48:44,461 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001729 seconds
2021-05-24 12:48:44,462 - hyperopt.tpe - INFO - TPE using 200/200 trials with best loss -0.730829
2021-05-24 12:48:45,394 - HyperTuner_objective - INFO - ObjValue=-0.7100207806 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 438, 'lr': 0.9177873383812245}
2021-05-24 12:48:45,398 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001722 seconds
2021-05-24 12:48:45,398 - hyperopt.tpe - INFO - TPE using 201/201 trials with best loss -0.730829
2021-05-24 12:48:46,322 - HyperTuner_objective - INFO - ObjValue=-0.7040952444 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 480, 'epoch': 1, 'hidden_size': 452, 'lr': 0.685950571360893}
2021-05-24 12:48:46,325 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001711 seconds
2021-05-24 12:48:46,325 - hyperopt.tpe - INFO - TPE using 202/202 trials with best loss -0.730829
2021-05-24 12:48:49,282 - HyperTuner_objective - INFO - ObjValue=-0.6891822219 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 449, 'epoch': 3, 'hidden_size': 445, 'lr': 1.0315731275730298}
2021-05-24 12:48:49,285 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001889 seconds
2021-05-24 12:48:49,286 - hyperopt.tpe - INFO - TPE using 203/203 trials with best loss -0.730829
2021-05-24 12:48:50,369 - HyperTuner_objective - INFO - ObjValue=-0.7079426050 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 475, 'lr': 0.9710047551930119}
2021-05-24 12:48:50,372 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001664 seconds
2021-05-24 12:48:50,373 - hyperopt.tpe - INFO - TPE using 204/204 trials with best loss -0.730829
2021-05-24 12:48:52,383 - HyperTuner_objective - INFO - ObjValue=-0.7200597525 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 435, 'epoch': 2, 'hidden_size': 485, 'lr': 1.1353411959961692}
2021-05-24 12:48:52,387 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001804 seconds
2021-05-24 12:48:52,387 - hyperopt.tpe - INFO - TPE using 205/205 trials with best loss -0.730829
2021-05-24 12:48:53,560 - HyperTuner_objective - INFO - ObjValue=-0.7045677900 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 434, 'epoch': 1, 'hidden_size': 477, 'lr': 1.098256534751347}
2021-05-24 12:48:53,566 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003748 seconds
2021-05-24 12:48:53,567 - hyperopt.tpe - INFO - TPE using 206/206 trials with best loss -0.730829
2021-05-24 12:48:54,631 - HyperTuner_objective - INFO - ObjValue=-0.7071500421 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 494, 'epoch': 1, 'hidden_size': 444, 'lr': 0.7131506716597817}
2021-05-24 12:48:54,637 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003345 seconds
2021-05-24 12:48:54,638 - hyperopt.tpe - INFO - TPE using 207/207 trials with best loss -0.730829
2021-05-24 12:48:58,959 - HyperTuner_objective - INFO - ObjValue=-0.6684733629 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 491, 'epoch': 4, 'hidden_size': 443, 'lr': 0.7811288291055493}
2021-05-24 12:48:58,963 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002207 seconds
2021-05-24 12:48:58,964 - hyperopt.tpe - INFO - TPE using 208/208 trials with best loss -0.730829
2021-05-24 12:49:00,202 - HyperTuner_objective - INFO - ObjValue=-0.6987309456 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 415, 'epoch': 1, 'hidden_size': 453, 'lr': 0.8065960784959351}
2021-05-24 12:49:00,205 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001876 seconds
2021-05-24 12:49:00,206 - hyperopt.tpe - INFO - TPE using 209/209 trials with best loss -0.730829
2021-05-24 12:49:01,171 - HyperTuner_objective - INFO - ObjValue=-0.7029366493 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 487, 'epoch': 1, 'hidden_size': 459, 'lr': 1.0500160056453032}
2021-05-24 12:49:01,174 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002006 seconds
2021-05-24 12:49:01,175 - hyperopt.tpe - INFO - TPE using 210/210 trials with best loss -0.730829
2021-05-24 12:49:02,143 - HyperTuner_objective - INFO - ObjValue=-0.6914570332 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 497, 'epoch': 1, 'hidden_size': 462, 'lr': 0.9399936968096307}
2021-05-24 12:49:02,146 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001785 seconds
2021-05-24 12:49:02,147 - hyperopt.tpe - INFO - TPE using 211/211 trials with best loss -0.730829
2021-05-24 12:49:05,092 - HyperTuner_objective - INFO - ObjValue=-0.7064155340 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 452, 'epoch': 3, 'hidden_size': 463, 'lr': 0.9987963037187294}
2021-05-24 12:49:05,095 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001628 seconds
2021-05-24 12:49:05,096 - hyperopt.tpe - INFO - TPE using 212/212 trials with best loss -0.730829
2021-05-24 12:49:07,182 - HyperTuner_objective - INFO - ObjValue=-0.7072979212 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 510, 'epoch': 2, 'hidden_size': 479, 'lr': 1.0602577134896054}
2021-05-24 12:49:07,185 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001752 seconds
2021-05-24 12:49:07,186 - hyperopt.tpe - INFO - TPE using 213/213 trials with best loss -0.730829
2021-05-24 12:49:08,132 - HyperTuner_objective - INFO - ObjValue=-0.7117223144 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 459, 'epoch': 1, 'hidden_size': 440, 'lr': 1.2667260373113771}
2021-05-24 12:49:08,135 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001699 seconds
2021-05-24 12:49:08,136 - hyperopt.tpe - INFO - TPE using 214/214 trials with best loss -0.730829
2021-05-24 12:49:09,072 - HyperTuner_objective - INFO - ObjValue=-0.6727732420 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 454, 'epoch': 1, 'hidden_size': 451, 'lr': 1.1714912082602082}
2021-05-24 12:49:09,075 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001601 seconds
2021-05-24 12:49:09,076 - hyperopt.tpe - INFO - TPE using 215/215 trials with best loss -0.730829
2021-05-24 12:49:12,794 - HyperTuner_objective - INFO - ObjValue=-0.6600267887 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 472, 'epoch': 4, 'hidden_size': 469, 'lr': 1.1116291225525181}
2021-05-24 12:49:12,797 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001726 seconds
2021-05-24 12:49:12,798 - hyperopt.tpe - INFO - TPE using 216/216 trials with best loss -0.730829
2021-05-24 12:49:13,841 - HyperTuner_objective - INFO - ObjValue=-0.7026967406 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 440, 'epoch': 1, 'hidden_size': 484, 'lr': 0.7505319799296417}
2021-05-24 12:49:13,845 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001876 seconds
2021-05-24 12:49:13,845 - hyperopt.tpe - INFO - TPE using 217/217 trials with best loss -0.730829
2021-05-24 12:49:14,845 - HyperTuner_objective - INFO - ObjValue=-0.6938753724 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 431, 'epoch': 1, 'hidden_size': 470, 'lr': 0.8959530336103284}
2021-05-24 12:49:14,848 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001761 seconds
2021-05-24 12:49:14,848 - hyperopt.tpe - INFO - TPE using 218/218 trials with best loss -0.730829
2021-05-24 12:49:17,591 - HyperTuner_objective - INFO - ObjValue=-0.6921312213 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 464, 'epoch': 3, 'hidden_size': 474, 'lr': 0.8682577977807885}
2021-05-24 12:49:17,608 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001757 seconds
2021-05-24 12:49:17,609 - hyperopt.tpe - INFO - TPE using 219/219 trials with best loss -0.730829
2021-05-24 12:49:18,637 - HyperTuner_objective - INFO - ObjValue=-0.7241933942 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 1, 'hidden_size': 482, 'lr': 0.9227655431031734}
2021-05-24 12:49:18,641 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001696 seconds
2021-05-24 12:49:18,641 - hyperopt.tpe - INFO - TPE using 220/220 trials with best loss -0.730829
2021-05-24 12:49:20,575 - HyperTuner_objective - INFO - ObjValue=-0.7023473382 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 447, 'epoch': 2, 'hidden_size': 482, 'lr': 1.0788379235785266}
2021-05-24 12:49:20,579 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001651 seconds
2021-05-24 12:49:20,579 - hyperopt.tpe - INFO - TPE using 221/221 trials with best loss -0.730829
2021-05-24 12:49:21,508 - HyperTuner_objective - INFO - ObjValue=-0.6956319809 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 421, 'epoch': 1, 'hidden_size': 460, 'lr': 0.9814898652166848}
2021-05-24 12:49:21,511 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001712 seconds
2021-05-24 12:49:21,512 - hyperopt.tpe - INFO - TPE using 222/222 trials with best loss -0.730829
2021-05-24 12:49:22,332 - HyperTuner_objective - INFO - ObjValue=-0.7218713164 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 438, 'lr': 1.2161045859444983}
2021-05-24 12:49:22,336 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001720 seconds
2021-05-24 12:49:22,336 - hyperopt.tpe - INFO - TPE using 223/223 trials with best loss -0.730829
2021-05-24 12:49:23,164 - HyperTuner_objective - INFO - ObjValue=-0.7083632350 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 485, 'epoch': 1, 'hidden_size': 438, 'lr': 1.3652635802702444}
2021-05-24 12:49:23,168 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001755 seconds
2021-05-24 12:49:23,168 - hyperopt.tpe - INFO - TPE using 224/224 trials with best loss -0.730829
2021-05-24 12:49:27,282 - HyperTuner_objective - INFO - ObjValue=-0.6555815935 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 433, 'epoch': 4, 'hidden_size': 482, 'lr': 1.3218724219069955}
2021-05-24 12:49:27,285 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001701 seconds
2021-05-24 12:49:27,286 - hyperopt.tpe - INFO - TPE using 225/225 trials with best loss -0.730829
2021-05-24 12:49:28,174 - HyperTuner_objective - INFO - ObjValue=-0.7098908424 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 438, 'lr': 1.23389828603351}
2021-05-24 12:49:28,178 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001694 seconds
2021-05-24 12:49:28,178 - hyperopt.tpe - INFO - TPE using 226/226 trials with best loss -0.730829
2021-05-24 12:49:29,302 - HyperTuner_objective - INFO - ObjValue=-0.6985939741 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 1, 'hidden_size': 438, 'lr': 1.210204538237837}
2021-05-24 12:49:29,306 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001732 seconds
2021-05-24 12:49:29,306 - hyperopt.tpe - INFO - TPE using 227/227 trials with best loss -0.730829
2021-05-24 12:49:32,365 - HyperTuner_objective - INFO - ObjValue=-0.6756300926 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 3, 'hidden_size': 482, 'lr': 1.473568296555622}
2021-05-24 12:49:32,368 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001773 seconds
2021-05-24 12:49:32,369 - hyperopt.tpe - INFO - TPE using 228/228 trials with best loss -0.730829
2021-05-24 12:49:33,278 - HyperTuner_objective - INFO - ObjValue=-0.7357799411 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 447, 'lr': 1.3904031481028276}
2021-05-24 12:49:33,282 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001759 seconds
2021-05-24 12:49:33,283 - hyperopt.tpe - INFO - TPE using 229/229 trials with best loss -0.735780
2021-05-24 12:49:34,308 - HyperTuner_objective - INFO - ObjValue=-0.6417374015 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 417, 'epoch': 1, 'hidden_size': 483, 'lr': 1.4965929185286722}
2021-05-24 12:49:34,311 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001760 seconds
2021-05-24 12:49:34,311 - hyperopt.tpe - INFO - TPE using 230/230 trials with best loss -0.735780
2021-05-24 12:49:36,121 - HyperTuner_objective - INFO - ObjValue=-0.6948399544 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 453, 'epoch': 2, 'hidden_size': 447, 'lr': 1.397742564781383}
2021-05-24 12:49:36,124 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001545 seconds
2021-05-24 12:49:36,125 - hyperopt.tpe - INFO - TPE using 231/231 trials with best loss -0.735780
2021-05-24 12:49:37,013 - HyperTuner_objective - INFO - ObjValue=-0.7135517597 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 447, 'lr': 1.2808431743060862}
2021-05-24 12:49:37,016 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001687 seconds
2021-05-24 12:49:37,016 - hyperopt.tpe - INFO - TPE using 232/232 trials with best loss -0.735780
2021-05-24 12:49:40,446 - HyperTuner_objective - INFO - ObjValue=-0.6497814655 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 4, 'hidden_size': 447, 'lr': 1.4374698975421285}
2021-05-24 12:49:40,450 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001784 seconds
2021-05-24 12:49:40,450 - hyperopt.tpe - INFO - TPE using 233/233 trials with best loss -0.735780
2021-05-24 12:49:41,295 - HyperTuner_objective - INFO - ObjValue=-0.6968026757 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 498, 'epoch': 1, 'hidden_size': 449, 'lr': 1.3678839478831866}
2021-05-24 12:49:41,298 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001589 seconds
2021-05-24 12:49:41,298 - hyperopt.tpe - INFO - TPE using 234/234 trials with best loss -0.735780
2021-05-24 12:49:42,202 - HyperTuner_objective - INFO - ObjValue=-0.6936734915 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 457, 'epoch': 1, 'hidden_size': 465, 'lr': 1.423867488643555}
2021-05-24 12:49:42,206 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001727 seconds
2021-05-24 12:49:42,207 - hyperopt.tpe - INFO - TPE using 235/235 trials with best loss -0.735780
2021-05-24 12:49:45,115 - HyperTuner_objective - INFO - ObjValue=-0.6608072519 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 429, 'epoch': 3, 'hidden_size': 478, 'lr': 1.4589447652750598}
2021-05-24 12:49:45,118 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001684 seconds
2021-05-24 12:49:45,118 - hyperopt.tpe - INFO - TPE using 236/236 trials with best loss -0.735780
2021-05-24 12:49:45,987 - HyperTuner_objective - INFO - ObjValue=-0.7107601762 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 501, 'epoch': 1, 'hidden_size': 467, 'lr': 1.2465755251024917}
2021-05-24 12:49:45,990 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001531 seconds
2021-05-24 12:49:45,991 - hyperopt.tpe - INFO - TPE using 237/237 trials with best loss -0.735780
2021-05-24 12:49:46,963 - HyperTuner_objective - INFO - ObjValue=-0.7187131643 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 477, 'epoch': 1, 'hidden_size': 480, 'lr': 1.288137578786735}
2021-05-24 12:49:46,966 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001590 seconds
2021-05-24 12:49:46,966 - hyperopt.tpe - INFO - TPE using 238/238 trials with best loss -0.735780
2021-05-24 12:49:48,959 - HyperTuner_objective - INFO - ObjValue=-0.6836341619 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 413, 'epoch': 2, 'hidden_size': 471, 'lr': 1.4026731487218282}
2021-05-24 12:49:48,962 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001567 seconds
2021-05-24 12:49:48,962 - hyperopt.tpe - INFO - TPE using 239/239 trials with best loss -0.735780
2021-05-24 12:49:49,811 - HyperTuner_objective - INFO - ObjValue=-0.7159719467 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 488, 'epoch': 1, 'hidden_size': 454, 'lr': 1.1884856762631748}
2021-05-24 12:49:49,814 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001739 seconds
2021-05-24 12:49:49,815 - hyperopt.tpe - INFO - TPE using 240/240 trials with best loss -0.735780
2021-05-24 12:49:53,582 - HyperTuner_objective - INFO - ObjValue=-0.6611325145 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 444, 'epoch': 4, 'hidden_size': 482, 'lr': 1.3378593380537733}
2021-05-24 12:49:53,585 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001673 seconds
2021-05-24 12:49:53,586 - hyperopt.tpe - INFO - TPE using 241/241 trials with best loss -0.735780
2021-05-24 12:49:54,498 - HyperTuner_objective - INFO - ObjValue=-0.6836602092 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 446, 'epoch': 1, 'hidden_size': 447, 'lr': 1.3025077404080339}
2021-05-24 12:49:54,502 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001760 seconds
2021-05-24 12:49:54,502 - hyperopt.tpe - INFO - TPE using 242/242 trials with best loss -0.735780
2021-05-24 12:49:55,458 - HyperTuner_objective - INFO - ObjValue=-0.6876533628 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 455, 'lr': 1.3852237974950472}
2021-05-24 12:49:55,461 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001644 seconds
2021-05-24 12:49:55,462 - hyperopt.tpe - INFO - TPE using 243/243 trials with best loss -0.735780
2021-05-24 12:49:57,989 - HyperTuner_objective - INFO - ObjValue=-0.6877330542 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 473, 'epoch': 3, 'hidden_size': 439, 'lr': 1.1310711614790363}
2021-05-24 12:49:57,992 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001715 seconds
2021-05-24 12:49:57,993 - hyperopt.tpe - INFO - TPE using 244/244 trials with best loss -0.735780
2021-05-24 12:49:58,873 - HyperTuner_objective - INFO - ObjValue=-0.7066389322 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 465, 'epoch': 1, 'hidden_size': 457, 'lr': 1.1496259004247706}
2021-05-24 12:49:58,876 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001698 seconds
2021-05-24 12:49:58,877 - hyperopt.tpe - INFO - TPE using 245/245 trials with best loss -0.735780
2021-05-24 12:49:59,762 - HyperTuner_objective - INFO - ObjValue=-0.7090593576 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 456, 'epoch': 1, 'hidden_size': 468, 'lr': 1.0238883953950417}
2021-05-24 12:49:59,765 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001657 seconds
2021-05-24 12:49:59,766 - hyperopt.tpe - INFO - TPE using 246/246 trials with best loss -0.735780
2021-05-24 12:50:01,559 - HyperTuner_objective - INFO - ObjValue=-0.6952304840 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 2, 'hidden_size': 476, 'lr': 1.3526322588910866}
2021-05-24 12:50:01,563 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001702 seconds
2021-05-24 12:50:01,563 - hyperopt.tpe - INFO - TPE using 247/247 trials with best loss -0.735780
2021-05-24 12:50:02,396 - HyperTuner_objective - INFO - ObjValue=-0.7119696140 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 430, 'epoch': 1, 'hidden_size': 436, 'lr': 0.5035323302107861}
2021-05-24 12:50:02,398 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001251 seconds
2021-05-24 12:50:02,398 - hyperopt.tpe - INFO - TPE using 248/248 trials with best loss -0.735780
2021-05-24 12:50:06,378 - HyperTuner_objective - INFO - ObjValue=-0.6566240191 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 426, 'epoch': 4, 'hidden_size': 481, 'lr': 0.83363549994912}
2021-05-24 12:50:06,382 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002184 seconds
2021-05-24 12:50:06,383 - hyperopt.tpe - INFO - TPE using 249/249 trials with best loss -0.735780
2021-05-24 12:50:07,365 - HyperTuner_objective - INFO - ObjValue=-0.7058153152 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 1, 'hidden_size': 464, 'lr': 1.0921257006501144}
2021-05-24 12:50:07,368 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001826 seconds
2021-05-24 12:50:07,369 - hyperopt.tpe - INFO - TPE using 250/250 trials with best loss -0.735780
2021-05-24 12:50:08,441 - HyperTuner_objective - INFO - ObjValue=-0.7233397961 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 1, 'hidden_size': 473, 'lr': 1.2645967819166404}
2021-05-24 12:50:08,445 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001756 seconds
2021-05-24 12:50:08,445 - hyperopt.tpe - INFO - TPE using 251/251 trials with best loss -0.735780
2021-05-24 12:50:09,256 - HyperTuner_objective - INFO - ObjValue=-0.7121622562 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 482, 'epoch': 1, 'hidden_size': 448, 'lr': 1.2538037770803754}
2021-05-24 12:50:09,260 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001665 seconds
2021-05-24 12:50:09,260 - hyperopt.tpe - INFO - TPE using 252/252 trials with best loss -0.735780
2021-05-24 12:50:11,905 - HyperTuner_objective - INFO - ObjValue=-0.6712614894 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 3, 'hidden_size': 461, 'lr': 1.4556872665186713}
2021-05-24 12:50:11,909 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002117 seconds
2021-05-24 12:50:11,910 - hyperopt.tpe - INFO - TPE using 253/253 trials with best loss -0.735780
2021-05-24 12:50:12,857 - HyperTuner_objective - INFO - ObjValue=-0.7074553370 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 1, 'hidden_size': 473, 'lr': 1.3150456472871728}
2021-05-24 12:50:12,860 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001840 seconds
2021-05-24 12:50:12,861 - hyperopt.tpe - INFO - TPE using 254/254 trials with best loss -0.735780
2021-05-24 12:50:14,624 - HyperTuner_objective - INFO - ObjValue=-0.6790113449 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 423, 'epoch': 2, 'hidden_size': 437, 'lr': 1.4844443288620643}
2021-05-24 12:50:14,627 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001585 seconds
2021-05-24 12:50:14,628 - hyperopt.tpe - INFO - TPE using 255/255 trials with best loss -0.735780
2021-05-24 12:50:15,467 - HyperTuner_objective - INFO - ObjValue=-0.6896211505 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 504, 'epoch': 1, 'hidden_size': 472, 'lr': 1.4238075519379612}
2021-05-24 12:50:15,470 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001574 seconds
2021-05-24 12:50:15,470 - hyperopt.tpe - INFO - TPE using 256/256 trials with best loss -0.735780
2021-05-24 12:50:16,363 - HyperTuner_objective - INFO - ObjValue=-0.6970243454 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 461, 'epoch': 1, 'hidden_size': 458, 'lr': 1.3320642333068153}
2021-05-24 12:50:16,368 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002308 seconds
2021-05-24 12:50:16,368 - hyperopt.tpe - INFO - TPE using 257/257 trials with best loss -0.735780
2021-05-24 12:50:17,224 - HyperTuner_objective - INFO - ObjValue=-0.7021501660 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 505, 'epoch': 1, 'hidden_size': 466, 'lr': 1.382087743681865}
2021-05-24 12:50:17,227 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001517 seconds
2021-05-24 12:50:17,228 - hyperopt.tpe - INFO - TPE using 258/258 trials with best loss -0.735780
2021-05-24 12:50:18,221 - HyperTuner_objective - INFO - ObjValue=-0.7066005468 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 420, 'epoch': 1, 'hidden_size': 474, 'lr': 1.1787454480498298}
2021-05-24 12:50:18,224 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001686 seconds
2021-05-24 12:50:18,225 - hyperopt.tpe - INFO - TPE using 259/259 trials with best loss -0.735780
2021-05-24 12:50:19,124 - HyperTuner_objective - INFO - ObjValue=-0.6913542151 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 496, 'epoch': 1, 'hidden_size': 473, 'lr': 1.2784626404734398}
2021-05-24 12:50:19,128 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001649 seconds
2021-05-24 12:50:19,128 - hyperopt.tpe - INFO - TPE using 260/260 trials with best loss -0.735780
2021-05-24 12:50:19,992 - HyperTuner_objective - INFO - ObjValue=-0.6981468797 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 511, 'epoch': 1, 'hidden_size': 473, 'lr': 1.3511377701609184}
2021-05-24 12:50:19,995 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001390 seconds
2021-05-24 12:50:19,995 - hyperopt.tpe - INFO - TPE using 261/261 trials with best loss -0.735780
2021-05-24 12:50:20,919 - HyperTuner_objective - INFO - ObjValue=-0.7043831944 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 455, 'epoch': 1, 'hidden_size': 473, 'lr': 1.1989468074438996}
2021-05-24 12:50:20,922 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001680 seconds
2021-05-24 12:50:20,923 - hyperopt.tpe - INFO - TPE using 262/262 trials with best loss -0.735780
2021-05-24 12:50:21,889 - HyperTuner_objective - INFO - ObjValue=-0.6628117561 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 442, 'lr': 1.4073081842228146}
2021-05-24 12:50:21,893 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002142 seconds
2021-05-24 12:50:21,894 - hyperopt.tpe - INFO - TPE using 263/263 trials with best loss -0.735780
2021-05-24 12:50:22,874 - HyperTuner_objective - INFO - ObjValue=-0.6930973530 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 470, 'epoch': 1, 'hidden_size': 485, 'lr': 1.2655680337352566}
2021-05-24 12:50:22,878 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001803 seconds
2021-05-24 12:50:22,879 - hyperopt.tpe - INFO - TPE using 264/264 trials with best loss -0.735780
2021-05-24 12:50:23,844 - HyperTuner_objective - INFO - ObjValue=-0.7022457719 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 418, 'epoch': 1, 'hidden_size': 441, 'lr': 1.2989916757924396}
2021-05-24 12:50:23,848 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001710 seconds
2021-05-24 12:50:23,848 - hyperopt.tpe - INFO - TPE using 265/265 trials with best loss -0.735780
2021-05-24 12:50:24,773 - HyperTuner_objective - INFO - ObjValue=-0.6966767311 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 443, 'epoch': 1, 'hidden_size': 445, 'lr': 1.232489100349177}
2021-05-24 12:50:24,776 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001773 seconds
2021-05-24 12:50:24,777 - hyperopt.tpe - INFO - TPE using 266/266 trials with best loss -0.735780
2021-05-24 12:50:25,753 - HyperTuner_objective - INFO - ObjValue=-0.7028501630 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 439, 'epoch': 1, 'hidden_size': 475, 'lr': 1.1168510838381525}
2021-05-24 12:50:25,757 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001662 seconds
2021-05-24 12:50:25,758 - hyperopt.tpe - INFO - TPE using 267/267 trials with best loss -0.735780
2021-05-24 12:50:26,701 - HyperTuner_objective - INFO - ObjValue=-0.7094480395 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 474, 'epoch': 1, 'hidden_size': 482, 'lr': 1.1655930441394393}
2021-05-24 12:50:26,704 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001731 seconds
2021-05-24 12:50:26,705 - hyperopt.tpe - INFO - TPE using 268/268 trials with best loss -0.735780
2021-05-24 12:50:27,562 - HyperTuner_objective - INFO - ObjValue=-0.6979385018 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 1, 'hidden_size': 452, 'lr': 1.4407135710832728}
2021-05-24 12:50:27,566 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001702 seconds
2021-05-24 12:50:27,566 - hyperopt.tpe - INFO - TPE using 269/269 trials with best loss -0.735780
2021-05-24 12:50:28,533 - HyperTuner_objective - INFO - ObjValue=-0.6942235827 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 414, 'epoch': 1, 'hidden_size': 447, 'lr': 1.0495385049007186}
2021-05-24 12:50:28,536 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001512 seconds
2021-05-24 12:50:28,536 - hyperopt.tpe - INFO - TPE using 270/270 trials with best loss -0.735780
2021-05-24 12:50:29,427 - HyperTuner_objective - INFO - ObjValue=-0.6950719357 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 507, 'epoch': 1, 'hidden_size': 477, 'lr': 0.9518330442107893}
2021-05-24 12:50:29,430 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001425 seconds
2021-05-24 12:50:29,430 - hyperopt.tpe - INFO - TPE using 271/271 trials with best loss -0.735780
2021-05-24 12:50:30,265 - HyperTuner_objective - INFO - ObjValue=-0.6997593045 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 481, 'epoch': 1, 'hidden_size': 443, 'lr': 0.9219268184873379}
2021-05-24 12:50:30,268 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001588 seconds
2021-05-24 12:50:30,269 - hyperopt.tpe - INFO - TPE using 272/272 trials with best loss -0.735780
2021-05-24 12:50:31,234 - HyperTuner_objective - INFO - ObjValue=-0.7014894485 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 451, 'epoch': 1, 'hidden_size': 470, 'lr': 1.3181090172707988}
2021-05-24 12:50:31,238 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001797 seconds
2021-05-24 12:50:31,238 - hyperopt.tpe - INFO - TPE using 273/273 trials with best loss -0.735780
2021-05-24 12:50:32,138 - HyperTuner_objective - INFO - ObjValue=-0.6799769402 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 469, 'epoch': 1, 'hidden_size': 453, 'lr': 1.1400766771578836}
2021-05-24 12:50:32,142 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001808 seconds
2021-05-24 12:50:32,143 - hyperopt.tpe - INFO - TPE using 274/274 trials with best loss -0.735780
2021-05-24 12:50:35,987 - HyperTuner_objective - INFO - ObjValue=-0.4840583503 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 476, 'epoch': 4, 'hidden_size': 462, 'lr': 1.010385095663162}
2021-05-24 12:50:35,991 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001814 seconds
2021-05-24 12:50:35,991 - hyperopt.tpe - INFO - TPE using 275/275 trials with best loss -0.735780
2021-05-24 12:50:37,068 - HyperTuner_objective - INFO - ObjValue=-0.6972030401 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 412, 'epoch': 1, 'hidden_size': 451, 'lr': 1.0324255067501609}
2021-05-24 12:50:37,071 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001582 seconds
2021-05-24 12:50:37,071 - hyperopt.tpe - INFO - TPE using 276/276 trials with best loss -0.735780
2021-05-24 12:50:37,894 - HyperTuner_objective - INFO - ObjValue=-0.7141360641 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 490, 'epoch': 1, 'hidden_size': 444, 'lr': 1.498726105807325}
2021-05-24 12:50:37,897 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001786 seconds
2021-05-24 12:50:37,898 - hyperopt.tpe - INFO - TPE using 277/277 trials with best loss -0.735780
2021-05-24 12:50:40,760 - HyperTuner_objective - INFO - ObjValue=-0.6790199280 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 422, 'epoch': 3, 'hidden_size': 474, 'lr': 1.0709619575471445}
2021-05-24 12:50:40,763 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001729 seconds
2021-05-24 12:50:40,764 - hyperopt.tpe - INFO - TPE using 278/278 trials with best loss -0.735780
2021-05-24 12:50:41,687 - HyperTuner_objective - INFO - ObjValue=-0.7129461765 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 483, 'epoch': 1, 'hidden_size': 478, 'lr': 0.9852604265968022}
2021-05-24 12:50:41,691 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001647 seconds
2021-05-24 12:50:41,691 - hyperopt.tpe - INFO - TPE using 279/279 trials with best loss -0.735780
2021-05-24 12:50:42,639 - HyperTuner_objective - INFO - ObjValue=-0.6962631345 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 475, 'epoch': 1, 'hidden_size': 479, 'lr': 1.0869940613948075}
2021-05-24 12:50:42,643 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001710 seconds
2021-05-24 12:50:42,644 - hyperopt.tpe - INFO - TPE using 280/280 trials with best loss -0.735780
2021-05-24 12:50:44,173 - HyperTuner_objective - INFO - ObjValue=-0.6921749711 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 500, 'epoch': 2, 'hidden_size': 440, 'lr': 1.2258489210592243}
2021-05-24 12:50:44,176 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001699 seconds
2021-05-24 12:50:44,177 - hyperopt.tpe - INFO - TPE using 281/281 trials with best loss -0.735780
2021-05-24 12:50:45,146 - HyperTuner_objective - INFO - ObjValue=-0.6846320033 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 467, 'epoch': 1, 'hidden_size': 483, 'lr': 1.4722511458646026}
2021-05-24 12:50:45,149 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001700 seconds
2021-05-24 12:50:45,150 - hyperopt.tpe - INFO - TPE using 282/282 trials with best loss -0.735780
2021-05-24 12:50:46,074 - HyperTuner_objective - INFO - ObjValue=-0.7003959417 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 441, 'epoch': 1, 'hidden_size': 459, 'lr': 1.2504609295053253}
2021-05-24 12:50:46,078 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001699 seconds
2021-05-24 12:50:46,078 - hyperopt.tpe - INFO - TPE using 283/283 trials with best loss -0.735780
2021-05-24 12:50:49,537 - HyperTuner_objective - INFO - ObjValue=-0.6535757780 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 493, 'epoch': 4, 'hidden_size': 484, 'lr': 1.3925529920823858}
2021-05-24 12:50:49,541 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001711 seconds
2021-05-24 12:50:49,542 - hyperopt.tpe - INFO - TPE using 284/284 trials with best loss -0.735780
2021-05-24 12:50:50,391 - HyperTuner_objective - INFO - ObjValue=-0.7095946074 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 499, 'epoch': 1, 'hidden_size': 460, 'lr': 1.3656649469998265}
2021-05-24 12:50:50,395 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001699 seconds
2021-05-24 12:50:50,395 - hyperopt.tpe - INFO - TPE using 285/285 trials with best loss -0.735780
2021-05-24 12:50:51,248 - HyperTuner_objective - INFO - ObjValue=-0.6950130463 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 509, 'epoch': 1, 'hidden_size': 473, 'lr': 1.1503651805959325}
2021-05-24 12:50:51,251 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001373 seconds
2021-05-24 12:50:51,251 - hyperopt.tpe - INFO - TPE using 286/286 trials with best loss -0.735780
2021-05-24 12:50:54,243 - HyperTuner_objective - INFO - ObjValue=-0.6733239889 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 416, 'epoch': 3, 'hidden_size': 467, 'lr': 1.1887802654056991}
2021-05-24 12:50:54,246 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001559 seconds
2021-05-24 12:50:54,246 - hyperopt.tpe - INFO - TPE using 287/287 trials with best loss -0.735780
2021-05-24 12:50:55,153 - HyperTuner_objective - INFO - ObjValue=-0.7122310400 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 489, 'epoch': 1, 'hidden_size': 465, 'lr': 1.126726797731635}
2021-05-24 12:50:55,157 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001980 seconds
2021-05-24 12:50:55,158 - hyperopt.tpe - INFO - TPE using 288/288 trials with best loss -0.735780
2021-05-24 12:50:56,160 - HyperTuner_objective - INFO - ObjValue=-0.7028566003 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 503, 'epoch': 1, 'hidden_size': 469, 'lr': 1.0572106570410895}
2021-05-24 12:50:56,163 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001645 seconds
2021-05-24 12:50:56,164 - hyperopt.tpe - INFO - TPE using 289/289 trials with best loss -0.735780
2021-05-24 12:50:57,887 - HyperTuner_objective - INFO - ObjValue=-0.6985636950 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 479, 'epoch': 2, 'hidden_size': 480, 'lr': 0.9657060076339927}
2021-05-24 12:50:57,892 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001876 seconds
2021-05-24 12:50:57,892 - hyperopt.tpe - INFO - TPE using 290/290 trials with best loss -0.735780
2021-05-24 12:50:58,841 - HyperTuner_objective - INFO - ObjValue=-0.7028627396 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 463, 'epoch': 1, 'hidden_size': 471, 'lr': 1.1004049509815959}
2021-05-24 12:50:58,845 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001679 seconds
2021-05-24 12:50:58,845 - hyperopt.tpe - INFO - TPE using 291/291 trials with best loss -0.735780
2021-05-24 12:50:59,769 - HyperTuner_objective - INFO - ObjValue=-0.6674391627 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 427, 'epoch': 1, 'hidden_size': 449, 'lr': 1.2958753331881476}
2021-05-24 12:50:59,772 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001781 seconds
2021-05-24 12:50:59,773 - hyperopt.tpe - INFO - TPE using 292/292 trials with best loss -0.735780
2021-05-24 12:51:03,382 - HyperTuner_objective - INFO - ObjValue=-0.6494238377 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 425, 'epoch': 4, 'hidden_size': 436, 'lr': 1.3401848797390468}
2021-05-24 12:51:03,386 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002246 seconds
2021-05-24 12:51:03,387 - hyperopt.tpe - INFO - TPE using 293/293 trials with best loss -0.735780
2021-05-24 12:51:04,481 - HyperTuner_objective - INFO - ObjValue=-0.6983124018 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 471, 'epoch': 1, 'hidden_size': 482, 'lr': 0.908324893130006}
2021-05-24 12:51:04,486 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001863 seconds
2021-05-24 12:51:04,487 - hyperopt.tpe - INFO - TPE using 294/294 trials with best loss -0.735780
2021-05-24 12:51:05,412 - HyperTuner_objective - INFO - ObjValue=-0.7073912024 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 464, 'lr': 1.275313431950581}
2021-05-24 12:51:05,415 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001717 seconds
2021-05-24 12:51:05,416 - hyperopt.tpe - INFO - TPE using 295/295 trials with best loss -0.735780
2021-05-24 12:51:07,980 - HyperTuner_objective - INFO - ObjValue=-0.6875247955 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 486, 'epoch': 3, 'hidden_size': 468, 'lr': 0.9459416942326457}
2021-05-24 12:51:07,983 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001702 seconds
2021-05-24 12:51:07,984 - hyperopt.tpe - INFO - TPE using 296/296 trials with best loss -0.735780
2021-05-24 12:51:08,874 - HyperTuner_objective - INFO - ObjValue=-0.7047670484 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 458, 'epoch': 1, 'hidden_size': 454, 'lr': 1.1667093340385455}
2021-05-24 12:51:08,877 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001879 seconds
2021-05-24 12:51:08,878 - hyperopt.tpe - INFO - TPE using 297/297 trials with best loss -0.735780
2021-05-24 12:51:10,701 - HyperTuner_objective - INFO - ObjValue=-0.7124933004 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 2, 'hidden_size': 457, 'lr': 1.2139053183171282}
2021-05-24 12:51:10,704 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001552 seconds
2021-05-24 12:51:10,705 - hyperopt.tpe - INFO - TPE using 298/298 trials with best loss -0.735780
2021-05-24 12:51:11,571 - HyperTuner_objective - INFO - ObjValue=-0.7033368945 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 508, 'epoch': 1, 'hidden_size': 447, 'lr': 1.009658182581599}
2021-05-24 12:51:11,574 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001283 seconds
2021-05-24 12:51:11,575 - hyperopt.tpe - INFO - TPE using 299/299 trials with best loss -0.735780
2021-05-24 12:51:12,567 - HyperTuner_objective - INFO - ObjValue=-0.6740700006 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 432, 'epoch': 1, 'hidden_size': 455, 'lr': 1.4163139536599252}
2021-05-24 12:51:12,570 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001694 seconds
2021-05-24 12:51:12,571 - hyperopt.tpe - INFO - TPE using 300/300 trials with best loss -0.735780
2021-05-24 12:51:13,535 - HyperTuner_objective - INFO - ObjValue=-0.7117674351 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 436, 'epoch': 1, 'hidden_size': 461, 'lr': 0.9911444913344744}
2021-05-24 12:51:13,539 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001550 seconds
2021-05-24 12:51:13,539 - hyperopt.tpe - INFO - TPE using 301/301 trials with best loss -0.735780
2021-05-24 12:51:14,395 - HyperTuner_objective - INFO - ObjValue=-0.7038927078 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 480, 'epoch': 1, 'hidden_size': 439, 'lr': 1.0333675444398138}
2021-05-24 12:51:14,399 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001670 seconds
2021-05-24 12:51:14,399 - hyperopt.tpe - INFO - TPE using 302/302 trials with best loss -0.735780
2021-05-24 12:51:18,388 - HyperTuner_objective - INFO - ObjValue=-0.6469608545 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 4, 'hidden_size': 474, 'lr': 1.454921184126534}
2021-05-24 12:51:18,391 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001716 seconds
2021-05-24 12:51:18,392 - hyperopt.tpe - INFO - TPE using 303/303 trials with best loss -0.735780
2021-05-24 12:51:19,323 - HyperTuner_objective - INFO - ObjValue=-0.6989255548 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 468, 'epoch': 1, 'hidden_size': 473, 'lr': 0.8926449143186765}
2021-05-24 12:51:19,327 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001843 seconds
2021-05-24 12:51:19,328 - hyperopt.tpe - INFO - TPE using 304/304 trials with best loss -0.735780
2021-05-24 12:51:21,882 - HyperTuner_objective - INFO - ObjValue=-0.6860831976 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 495, 'epoch': 3, 'hidden_size': 472, 'lr': 1.2401040119569138}
2021-05-24 12:51:21,886 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001792 seconds
2021-05-24 12:51:21,887 - hyperopt.tpe - INFO - TPE using 305/305 trials with best loss -0.735780
2021-05-24 12:51:22,705 - HyperTuner_objective - INFO - ObjValue=-0.6890956163 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 448, 'lr': 0.9281500934924706}
2021-05-24 12:51:22,708 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001735 seconds
2021-05-24 12:51:22,709 - hyperopt.tpe - INFO - TPE using 306/306 trials with best loss -0.735780
2021-05-24 12:51:23,612 - HyperTuner_objective - INFO - ObjValue=-0.7036698461 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 492, 'epoch': 1, 'hidden_size': 476, 'lr': 1.3164187672001992}
2021-05-24 12:51:23,615 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001708 seconds
2021-05-24 12:51:23,616 - hyperopt.tpe - INFO - TPE using 307/307 trials with best loss -0.735780
2021-05-24 12:51:25,670 - HyperTuner_objective - INFO - ObjValue=-0.6974329948 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 415, 'epoch': 2, 'hidden_size': 466, 'lr': 1.1063281261206652}
2021-05-24 12:51:25,674 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001669 seconds
2021-05-24 12:51:25,675 - hyperopt.tpe - INFO - TPE using 308/308 trials with best loss -0.735780
2021-05-24 12:51:26,683 - HyperTuner_objective - INFO - ObjValue=-0.6947237849 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 448, 'epoch': 1, 'hidden_size': 437, 'lr': 1.3761396116861677}
2021-05-24 12:51:26,686 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001675 seconds
2021-05-24 12:51:26,687 - hyperopt.tpe - INFO - TPE using 309/309 trials with best loss -0.735780
2021-05-24 12:51:27,630 - HyperTuner_objective - INFO - ObjValue=-0.7180351019 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 424, 'epoch': 1, 'hidden_size': 442, 'lr': 1.079490060223922}
2021-05-24 12:51:27,634 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001507 seconds
2021-05-24 12:51:27,634 - hyperopt.tpe - INFO - TPE using 310/310 trials with best loss -0.735780
2021-05-24 12:51:31,153 - HyperTuner_objective - INFO - ObjValue=-0.6608115435 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 450, 'epoch': 4, 'hidden_size': 458, 'lr': 1.2596640701956354}
2021-05-24 12:51:31,156 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001699 seconds
2021-05-24 12:51:31,157 - hyperopt.tpe - INFO - TPE using 311/311 trials with best loss -0.735780
2021-05-24 12:51:32,219 - HyperTuner_objective - INFO - ObjValue=-0.7128093839 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 449, 'epoch': 1, 'hidden_size': 485, 'lr': 0.968382026178872}
2021-05-24 12:51:32,222 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001542 seconds
2021-05-24 12:51:32,222 - hyperopt.tpe - INFO - TPE using 312/312 trials with best loss -0.735780
2021-05-24 12:51:33,138 - HyperTuner_objective - INFO - ObjValue=-0.6875873804 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 464, 'epoch': 1, 'hidden_size': 475, 'lr': 0.8558344767555582}
2021-05-24 12:51:33,142 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001997 seconds
2021-05-24 12:51:33,143 - hyperopt.tpe - INFO - TPE using 313/313 trials with best loss -0.735780
2021-05-24 12:51:35,771 - HyperTuner_objective - INFO - ObjValue=-0.6791216731 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 437, 'epoch': 3, 'hidden_size': 441, 'lr': 1.1306455527186565}
2021-05-24 12:51:35,775 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001962 seconds
2021-05-24 12:51:35,776 - hyperopt.tpe - INFO - TPE using 314/314 trials with best loss -0.735780
2021-05-24 12:51:36,913 - HyperTuner_objective - INFO - ObjValue=-0.7103933692 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 487, 'epoch': 1, 'hidden_size': 481, 'lr': 1.1807883999727333}
2021-05-24 12:51:36,917 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002006 seconds
2021-05-24 12:51:36,918 - hyperopt.tpe - INFO - TPE using 315/315 trials with best loss -0.735780
2021-05-24 12:51:37,772 - HyperTuner_objective - INFO - ObjValue=-0.7129129767 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 1, 'hidden_size': 438, 'lr': 1.2030245886134043}
2021-05-24 12:51:37,775 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001635 seconds
2021-05-24 12:51:37,776 - hyperopt.tpe - INFO - TPE using 316/316 trials with best loss -0.735780
2021-05-24 12:51:39,510 - HyperTuner_objective - INFO - ObjValue=-0.6969895959 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 491, 'epoch': 2, 'hidden_size': 452, 'lr': 1.0439146106663306}
2021-05-24 12:51:39,514 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001732 seconds
2021-05-24 12:51:39,514 - hyperopt.tpe - INFO - TPE using 317/317 trials with best loss -0.735780
2021-05-24 12:51:40,398 - HyperTuner_objective - INFO - ObjValue=-0.6755126119 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 472, 'epoch': 1, 'hidden_size': 443, 'lr': 1.4395238143064977}
2021-05-24 12:51:40,402 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001956 seconds
2021-05-24 12:51:40,403 - hyperopt.tpe - INFO - TPE using 318/318 trials with best loss -0.735780
2021-05-24 12:51:41,260 - HyperTuner_objective - INFO - ObjValue=-0.6996933818 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 510, 'epoch': 1, 'hidden_size': 453, 'lr': 0.8806950613135789}
2021-05-24 12:51:41,266 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003476 seconds
2021-05-24 12:51:41,267 - hyperopt.tpe - INFO - TPE using 319/319 trials with best loss -0.735780
2021-05-24 12:51:44,632 - HyperTuner_objective - INFO - ObjValue=-0.6654761434 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 497, 'epoch': 4, 'hidden_size': 444, 'lr': 1.349751032582555}
2021-05-24 12:51:44,637 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001734 seconds
2021-05-24 12:51:44,638 - hyperopt.tpe - INFO - TPE using 320/320 trials with best loss -0.735780
2021-05-24 12:51:45,683 - HyperTuner_objective - INFO - ObjValue=-0.7015194297 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 452, 'epoch': 1, 'hidden_size': 482, 'lr': 0.7896277413363614}
2021-05-24 12:51:45,687 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001713 seconds
2021-05-24 12:51:45,688 - hyperopt.tpe - INFO - TPE using 321/321 trials with best loss -0.735780
2021-05-24 12:51:46,771 - HyperTuner_objective - INFO - ObjValue=-0.6882494688 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 434, 'epoch': 1, 'hidden_size': 477, 'lr': 1.0618630503678153}
2021-05-24 12:51:46,776 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002997 seconds
2021-05-24 12:51:46,777 - hyperopt.tpe - INFO - TPE using 322/322 trials with best loss -0.735780
2021-05-24 12:51:49,609 - HyperTuner_objective - INFO - ObjValue=-0.6651610136 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 435, 'epoch': 3, 'hidden_size': 445, 'lr': 1.4822492190098076}
2021-05-24 12:51:49,614 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002466 seconds
2021-05-24 12:51:49,615 - hyperopt.tpe - INFO - TPE using 323/323 trials with best loss -0.735780
2021-05-24 12:51:50,603 - HyperTuner_objective - INFO - ObjValue=-0.7118430138 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 417, 'epoch': 1, 'hidden_size': 470, 'lr': 0.9992508789583132}
2021-05-24 12:51:50,606 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001281 seconds
2021-05-24 12:51:50,606 - hyperopt.tpe - INFO - TPE using 324/324 trials with best loss -0.735780
2021-05-24 12:51:51,535 - HyperTuner_objective - INFO - ObjValue=-0.6988592744 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 477, 'epoch': 1, 'hidden_size': 447, 'lr': 1.1461403976005846}
2021-05-24 12:51:51,539 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001637 seconds
2021-05-24 12:51:51,539 - hyperopt.tpe - INFO - TPE using 325/325 trials with best loss -0.735780
2021-05-24 12:51:53,620 - HyperTuner_objective - INFO - ObjValue=-0.7164094448 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 459, 'epoch': 2, 'hidden_size': 474, 'lr': 0.8422531127163833}
2021-05-24 12:51:53,624 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002080 seconds
2021-05-24 12:51:53,626 - hyperopt.tpe - INFO - TPE using 326/326 trials with best loss -0.735780
2021-05-24 12:51:54,665 - HyperTuner_objective - INFO - ObjValue=-0.7006448507 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 1, 'hidden_size': 479, 'lr': 1.2988962949948744}
2021-05-24 12:51:54,669 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001779 seconds
2021-05-24 12:51:54,669 - hyperopt.tpe - INFO - TPE using 327/327 trials with best loss -0.735780
2021-05-24 12:51:55,570 - HyperTuner_objective - INFO - ObjValue=-0.6975310445 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 494, 'epoch': 1, 'hidden_size': 459, 'lr': 1.4063528374626475}
2021-05-24 12:51:55,574 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001625 seconds
2021-05-24 12:51:55,574 - hyperopt.tpe - INFO - TPE using 328/328 trials with best loss -0.735780
2021-05-24 12:51:59,424 - HyperTuner_objective - INFO - ObjValue=-0.6520611048 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 447, 'epoch': 4, 'hidden_size': 462, 'lr': 1.1144580488898341}
2021-05-24 12:51:59,428 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001716 seconds
2021-05-24 12:51:59,429 - hyperopt.tpe - INFO - TPE using 329/329 trials with best loss -0.735780
2021-05-24 12:52:00,502 - HyperTuner_objective - INFO - ObjValue=-0.7035581470 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 454, 'epoch': 1, 'hidden_size': 484, 'lr': 1.021166697918266}
2021-05-24 12:52:00,506 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001742 seconds
2021-05-24 12:52:00,506 - hyperopt.tpe - INFO - TPE using 330/330 trials with best loss -0.735780
2021-05-24 12:52:01,526 - HyperTuner_objective - INFO - ObjValue=-0.6968284845 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 440, 'epoch': 1, 'hidden_size': 451, 'lr': 0.8190430714838246}
2021-05-24 12:52:01,529 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001673 seconds
2021-05-24 12:52:01,530 - hyperopt.tpe - INFO - TPE using 331/331 trials with best loss -0.735780
2021-05-24 12:52:03,957 - HyperTuner_objective - INFO - ObjValue=-0.6755408049 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 431, 'epoch': 3, 'hidden_size': 440, 'lr': 1.2251308649480654}
2021-05-24 12:52:03,960 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001671 seconds
2021-05-24 12:52:03,961 - hyperopt.tpe - INFO - TPE using 332/332 trials with best loss -0.735780
2021-05-24 12:52:04,845 - HyperTuner_objective - INFO - ObjValue=-0.7175335884 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 421, 'epoch': 1, 'hidden_size': 473, 'lr': 0.9355024385176692}
2021-05-24 12:52:04,849 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001535 seconds
2021-05-24 12:52:04,850 - hyperopt.tpe - INFO - TPE using 333/333 trials with best loss -0.735780
2021-05-24 12:52:05,960 - HyperTuner_objective - INFO - ObjValue=-0.6961930394 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 453, 'epoch': 1, 'hidden_size': 471, 'lr': 1.0905015572564043}
2021-05-24 12:52:05,964 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001831 seconds
2021-05-24 12:52:05,965 - hyperopt.tpe - INFO - TPE using 334/334 trials with best loss -0.735780
2021-05-24 12:52:08,152 - HyperTuner_objective - INFO - ObjValue=-0.7025337815 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 465, 'epoch': 2, 'hidden_size': 469, 'lr': 1.3285633234086909}
2021-05-24 12:52:08,157 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001866 seconds
2021-05-24 12:52:08,158 - hyperopt.tpe - INFO - TPE using 335/335 trials with best loss -0.735780
2021-05-24 12:52:09,063 - HyperTuner_objective - INFO - ObjValue=-0.7117655873 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 457, 'epoch': 1, 'hidden_size': 438, 'lr': 1.2772526528148378}
2021-05-24 12:52:09,066 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001788 seconds
2021-05-24 12:52:09,067 - hyperopt.tpe - INFO - TPE using 336/336 trials with best loss -0.735780
2021-05-24 12:52:09,942 - HyperTuner_objective - INFO - ObjValue=-0.7173361778 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 449, 'lr': 1.2011056705809051}
2021-05-24 12:52:09,946 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001737 seconds
2021-05-24 12:52:09,947 - hyperopt.tpe - INFO - TPE using 337/337 trials with best loss -0.735780
2021-05-24 12:52:14,107 - HyperTuner_objective - INFO - ObjValue=-0.6716923714 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 473, 'epoch': 4, 'hidden_size': 446, 'lr': 1.1543625188120779}
2021-05-24 12:52:14,112 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003452 seconds
2021-05-24 12:52:14,113 - hyperopt.tpe - INFO - TPE using 338/338 trials with best loss -0.735780
2021-05-24 12:52:15,211 - HyperTuner_objective - INFO - ObjValue=-0.6915585399 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 478, 'lr': 0.7740147717351316}
2021-05-24 12:52:15,216 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001997 seconds
2021-05-24 12:52:15,217 - hyperopt.tpe - INFO - TPE using 339/339 trials with best loss -0.735780
2021-05-24 12:52:16,263 - HyperTuner_objective - INFO - ObjValue=-0.6978154182 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 488, 'epoch': 1, 'hidden_size': 483, 'lr': 0.981196255238293}
2021-05-24 12:52:16,267 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001739 seconds
2021-05-24 12:52:16,267 - hyperopt.tpe - INFO - TPE using 340/340 trials with best loss -0.735780
2021-05-24 12:52:19,189 - HyperTuner_objective - INFO - ObjValue=-0.6736569405 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 498, 'epoch': 3, 'hidden_size': 482, 'lr': 1.38729597061835}
2021-05-24 12:52:19,193 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002521 seconds
2021-05-24 12:52:19,194 - hyperopt.tpe - INFO - TPE using 341/341 trials with best loss -0.735780
2021-05-24 12:52:20,092 - HyperTuner_objective - INFO - ObjValue=-0.7164247036 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 485, 'epoch': 1, 'hidden_size': 456, 'lr': 0.903720868501347}
2021-05-24 12:52:20,096 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001749 seconds
2021-05-24 12:52:20,097 - hyperopt.tpe - INFO - TPE using 342/342 trials with best loss -0.735780
2021-05-24 12:52:20,980 - HyperTuner_objective - INFO - ObjValue=-0.6914016604 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 501, 'epoch': 1, 'hidden_size': 480, 'lr': 0.9530407904106712}
2021-05-24 12:52:20,984 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001650 seconds
2021-05-24 12:52:20,984 - hyperopt.tpe - INFO - TPE using 343/343 trials with best loss -0.735780
2021-05-24 12:52:23,104 - HyperTuner_objective - INFO - ObjValue=-0.7113025188 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 420, 'epoch': 2, 'hidden_size': 467, 'lr': 1.0356565876188126}
2021-05-24 12:52:23,109 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001961 seconds
2021-05-24 12:52:23,110 - hyperopt.tpe - INFO - TPE using 344/344 trials with best loss -0.735780
2021-05-24 12:52:24,106 - HyperTuner_objective - INFO - ObjValue=-0.6895941496 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 433, 'epoch': 1, 'hidden_size': 436, 'lr': 1.171326990502689}
2021-05-24 12:52:24,111 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002197 seconds
2021-05-24 12:52:24,112 - hyperopt.tpe - INFO - TPE using 345/345 trials with best loss -0.735780
2021-05-24 12:52:25,270 - HyperTuner_objective - INFO - ObjValue=-0.7162476182 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 413, 'epoch': 1, 'hidden_size': 465, 'lr': 1.0708773789606194}
2021-05-24 12:52:25,274 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002206 seconds
2021-05-24 12:52:25,275 - hyperopt.tpe - INFO - TPE using 346/346 trials with best loss -0.735780
2021-05-24 12:52:29,299 - HyperTuner_objective - INFO - ObjValue=-0.6475639939 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 4, 'hidden_size': 447, 'lr': 1.3644812604477252}
2021-05-24 12:52:29,303 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001710 seconds
2021-05-24 12:52:29,304 - hyperopt.tpe - INFO - TPE using 347/347 trials with best loss -0.735780
2021-05-24 12:52:30,349 - HyperTuner_objective - INFO - ObjValue=-0.6964726448 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 426, 'epoch': 1, 'hidden_size': 454, 'lr': 1.2467928461859674}
2021-05-24 12:52:30,354 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001751 seconds
2021-05-24 12:52:30,354 - hyperopt.tpe - INFO - TPE using 348/348 trials with best loss -0.735780
2021-05-24 12:52:31,352 - HyperTuner_objective - INFO - ObjValue=-0.7128036618 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 470, 'epoch': 1, 'hidden_size': 460, 'lr': 0.7384403481497065}
2021-05-24 12:52:31,357 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002176 seconds
2021-05-24 12:52:31,358 - hyperopt.tpe - INFO - TPE using 349/349 trials with best loss -0.735780
2021-05-24 12:52:34,462 - HyperTuner_objective - INFO - ObjValue=-0.6848020554 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 430, 'epoch': 3, 'hidden_size': 464, 'lr': 0.9175934478644358}
2021-05-24 12:52:34,466 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001940 seconds
2021-05-24 12:52:34,467 - hyperopt.tpe - INFO - TPE using 350/350 trials with best loss -0.735780
2021-05-24 12:52:35,668 - HyperTuner_objective - INFO - ObjValue=-0.6975575686 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 456, 'epoch': 1, 'hidden_size': 457, 'lr': 1.0120844857780233}
2021-05-24 12:52:35,673 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002301 seconds
2021-05-24 12:52:35,674 - hyperopt.tpe - INFO - TPE using 351/351 trials with best loss -0.735780
2021-05-24 12:52:36,607 - HyperTuner_objective - INFO - ObjValue=-0.6839590669 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 446, 'epoch': 1, 'hidden_size': 439, 'lr': 1.1096584365640214}
2021-05-24 12:52:36,610 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001276 seconds
2021-05-24 12:52:36,611 - hyperopt.tpe - INFO - TPE using 352/352 trials with best loss -0.735780
2021-05-24 12:52:37,495 - HyperTuner_objective - INFO - ObjValue=-0.6676013470 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 444, 'epoch': 1, 'hidden_size': 461, 'lr': 1.4322073275886096}
2021-05-24 12:52:37,499 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001786 seconds
2021-05-24 12:52:37,500 - hyperopt.tpe - INFO - TPE using 353/353 trials with best loss -0.735780
2021-05-24 12:52:39,365 - HyperTuner_objective - INFO - ObjValue=-0.7113571167 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 506, 'epoch': 2, 'hidden_size': 455, 'lr': 0.6253832147025835}
2021-05-24 12:52:39,369 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001616 seconds
2021-05-24 12:52:39,370 - hyperopt.tpe - INFO - TPE using 354/354 trials with best loss -0.735780
2021-05-24 12:52:40,302 - HyperTuner_objective - INFO - ObjValue=-0.7034228444 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 482, 'epoch': 1, 'hidden_size': 474, 'lr': 0.8068774693730457}
2021-05-24 12:52:40,307 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001845 seconds
2021-05-24 12:52:40,308 - hyperopt.tpe - INFO - TPE using 355/355 trials with best loss -0.735780
2021-05-24 12:52:41,199 - HyperTuner_objective - INFO - ObjValue=-0.7049725056 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 504, 'epoch': 1, 'hidden_size': 476, 'lr': 1.3113457079178223}
2021-05-24 12:52:41,202 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001623 seconds
2021-05-24 12:52:41,203 - hyperopt.tpe - INFO - TPE using 356/356 trials with best loss -0.735780
2021-05-24 12:52:44,756 - HyperTuner_objective - INFO - ObjValue=-0.6671693325 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 429, 'epoch': 4, 'hidden_size': 448, 'lr': 0.88339086259557}
2021-05-24 12:52:44,759 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001591 seconds
2021-05-24 12:52:44,760 - hyperopt.tpe - INFO - TPE using 357/357 trials with best loss -0.735780
2021-05-24 12:52:45,773 - HyperTuner_objective - INFO - ObjValue=-0.6991631985 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 418, 'epoch': 1, 'hidden_size': 473, 'lr': 0.9721252590215596}
2021-05-24 12:52:45,777 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001708 seconds
2021-05-24 12:52:45,778 - hyperopt.tpe - INFO - TPE using 358/358 trials with best loss -0.735780
2021-05-24 12:52:48,519 - HyperTuner_objective - INFO - ObjValue=-0.6767055392 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 3, 'hidden_size': 468, 'lr': 1.495229381295934}
2021-05-24 12:52:48,523 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002147 seconds
2021-05-24 12:52:48,524 - hyperopt.tpe - INFO - TPE using 359/359 trials with best loss -0.735780
2021-05-24 12:52:49,447 - HyperTuner_objective - INFO - ObjValue=-0.7033517957 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 496, 'epoch': 1, 'hidden_size': 466, 'lr': 1.0574059817647863}
2021-05-24 12:52:49,451 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001751 seconds
2021-05-24 12:52:49,452 - hyperopt.tpe - INFO - TPE using 360/360 trials with best loss -0.735780
2021-05-24 12:52:50,377 - HyperTuner_objective - INFO - ObjValue=-0.7107628584 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 461, 'epoch': 1, 'hidden_size': 472, 'lr': 1.2654117274350878}
2021-05-24 12:52:50,381 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001810 seconds
2021-05-24 12:52:50,382 - hyperopt.tpe - INFO - TPE using 361/361 trials with best loss -0.735780
2021-05-24 12:52:52,289 - HyperTuner_objective - INFO - ObjValue=-0.6795166731 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 423, 'epoch': 2, 'hidden_size': 441, 'lr': 1.4621895013227189}
2021-05-24 12:52:52,293 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001704 seconds
2021-05-24 12:52:52,294 - hyperopt.tpe - INFO - TPE using 362/362 trials with best loss -0.735780
2021-05-24 12:52:53,161 - HyperTuner_objective - INFO - ObjValue=-0.7145775557 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 455, 'epoch': 1, 'hidden_size': 437, 'lr': 0.6646961617969012}
2021-05-24 12:52:53,165 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001955 seconds
2021-05-24 12:52:53,166 - hyperopt.tpe - INFO - TPE using 363/363 trials with best loss -0.735780
2021-05-24 12:52:54,033 - HyperTuner_objective - INFO - ObjValue=-0.6885206699 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 474, 'epoch': 1, 'hidden_size': 442, 'lr': 1.185146457727224}
2021-05-24 12:52:54,037 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001717 seconds
2021-05-24 12:52:54,038 - hyperopt.tpe - INFO - TPE using 364/364 trials with best loss -0.735780
2021-05-24 12:52:57,594 - HyperTuner_objective - INFO - ObjValue=-0.6480864286 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 443, 'epoch': 4, 'hidden_size': 458, 'lr': 1.2167409668587246}
2021-05-24 12:52:57,597 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001562 seconds
2021-05-24 12:52:57,598 - hyperopt.tpe - INFO - TPE using 365/365 trials with best loss -0.735780
2021-05-24 12:52:58,517 - HyperTuner_objective - INFO - ObjValue=-0.7078789473 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 511, 'epoch': 1, 'hidden_size': 481, 'lr': 1.3542626463504033}
2021-05-24 12:52:58,520 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001382 seconds
2021-05-24 12:52:58,521 - hyperopt.tpe - INFO - TPE using 366/366 trials with best loss -0.735780
2021-05-24 12:52:59,390 - HyperTuner_objective - INFO - ObjValue=-0.7114823461 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 439, 'epoch': 1, 'hidden_size': 438, 'lr': 1.1261339154213632}
2021-05-24 12:52:59,393 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001657 seconds
2021-05-24 12:52:59,394 - hyperopt.tpe - INFO - TPE using 367/367 trials with best loss -0.735780
2021-05-24 12:53:02,285 - HyperTuner_objective - INFO - ObjValue=-0.6895956993 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 3, 'hidden_size': 475, 'lr': 0.8539029938333904}
2021-05-24 12:53:02,289 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001875 seconds
2021-05-24 12:53:02,291 - hyperopt.tpe - INFO - TPE using 368/368 trials with best loss -0.735780
2021-05-24 12:53:03,342 - HyperTuner_objective - INFO - ObjValue=-0.7033254504 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 422, 'epoch': 1, 'hidden_size': 485, 'lr': 1.0837021688025315}
2021-05-24 12:53:03,347 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001749 seconds
2021-05-24 12:53:03,348 - hyperopt.tpe - INFO - TPE using 369/369 trials with best loss -0.735780
2021-05-24 12:53:04,279 - HyperTuner_objective - INFO - ObjValue=-0.7000213265 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 425, 'epoch': 1, 'hidden_size': 450, 'lr': 0.9962174640256953}
2021-05-24 12:53:04,283 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001788 seconds
2021-05-24 12:53:04,284 - hyperopt.tpe - INFO - TPE using 370/370 trials with best loss -0.735780
2021-05-24 12:53:06,122 - HyperTuner_objective - INFO - ObjValue=-0.6984748840 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 428, 'epoch': 2, 'hidden_size': 443, 'lr': 1.294329145511609}
2021-05-24 12:53:06,126 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001730 seconds
2021-05-24 12:53:06,126 - hyperopt.tpe - INFO - TPE using 371/371 trials with best loss -0.735780
2021-05-24 12:53:07,086 - HyperTuner_objective - INFO - ObjValue=-0.7122499943 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 500, 'epoch': 1, 'hidden_size': 482, 'lr': 1.0377126718309424}
2021-05-24 12:53:07,089 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001690 seconds
2021-05-24 12:53:07,090 - hyperopt.tpe - INFO - TPE using 372/372 trials with best loss -0.735780
2021-05-24 12:53:08,001 - HyperTuner_objective - INFO - ObjValue=-0.7077268362 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 441, 'epoch': 1, 'hidden_size': 447, 'lr': 0.9444604398790988}
2021-05-24 12:53:08,004 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001639 seconds
2021-05-24 12:53:08,005 - hyperopt.tpe - INFO - TPE using 373/373 trials with best loss -0.735780
2021-05-24 12:53:11,236 - HyperTuner_objective - INFO - ObjValue=-0.6579638720 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 481, 'epoch': 4, 'hidden_size': 452, 'lr': 1.3316036306431973}
2021-05-24 12:53:11,241 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001708 seconds
2021-05-24 12:53:11,241 - hyperopt.tpe - INFO - TPE using 374/374 trials with best loss -0.735780
2021-05-24 12:53:12,325 - HyperTuner_objective - INFO - ObjValue=-0.6759420037 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 412, 'epoch': 1, 'hidden_size': 445, 'lr': 1.4013896551975287}
2021-05-24 12:53:12,329 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001702 seconds
2021-05-24 12:53:12,330 - hyperopt.tpe - INFO - TPE using 375/375 trials with best loss -0.735780
2021-05-24 12:53:13,283 - HyperTuner_objective - INFO - ObjValue=-0.7037917972 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 507, 'epoch': 1, 'hidden_size': 477, 'lr': 1.1579336118090156}
2021-05-24 12:53:13,286 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001755 seconds
2021-05-24 12:53:13,288 - hyperopt.tpe - INFO - TPE using 376/376 trials with best loss -0.735780
2021-05-24 12:53:15,947 - HyperTuner_objective - INFO - ObjValue=-0.4229514003 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 499, 'epoch': 3, 'hidden_size': 444, 'lr': 1.2313926836443068}
2021-05-24 12:53:15,950 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001298 seconds
2021-05-24 12:53:15,951 - hyperopt.tpe - INFO - TPE using 377/377 trials with best loss -0.735780
2021-05-24 12:53:16,952 - HyperTuner_objective - INFO - ObjValue=-0.7111958861 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 453, 'lr': 0.9252806443088958}
2021-05-24 12:53:16,957 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002818 seconds
2021-05-24 12:53:16,958 - hyperopt.tpe - INFO - TPE using 378/378 trials with best loss -0.735780
2021-05-24 12:53:17,902 - HyperTuner_objective - INFO - ObjValue=-0.7022566199 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 505, 'epoch': 1, 'hidden_size': 470, 'lr': 1.4225961061974597}
2021-05-24 12:53:17,907 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002795 seconds
2021-05-24 12:53:17,908 - hyperopt.tpe - INFO - TPE using 379/379 trials with best loss -0.735780
2021-05-24 12:53:20,386 - HyperTuner_objective - INFO - ObjValue=-0.7099512219 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 451, 'epoch': 2, 'hidden_size': 479, 'lr': 0.5932609244988969}
2021-05-24 12:53:20,393 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003116 seconds
2021-05-24 12:53:20,394 - hyperopt.tpe - INFO - TPE using 380/380 trials with best loss -0.735780
2021-05-24 12:53:21,651 - HyperTuner_objective - INFO - ObjValue=-0.7204317451 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 467, 'epoch': 1, 'hidden_size': 451, 'lr': 0.962619539395538}
2021-05-24 12:53:21,655 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002166 seconds
2021-05-24 12:53:21,656 - hyperopt.tpe - INFO - TPE using 381/381 trials with best loss -0.735780
2021-05-24 12:53:22,785 - HyperTuner_objective - INFO - ObjValue=-0.7052152157 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 469, 'epoch': 1, 'hidden_size': 474, 'lr': 1.1277585395700223}
2021-05-24 12:53:22,790 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002250 seconds
2021-05-24 12:53:22,791 - hyperopt.tpe - INFO - TPE using 382/382 trials with best loss -0.735780
2021-05-24 12:53:26,947 - HyperTuner_objective - INFO - ObjValue=-0.6785787940 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 475, 'epoch': 4, 'hidden_size': 462, 'lr': 0.6904741178134108}
2021-05-24 12:53:26,951 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001819 seconds
2021-05-24 12:53:26,952 - hyperopt.tpe - INFO - TPE using 383/383 trials with best loss -0.735780
2021-05-24 12:53:27,794 - HyperTuner_objective - INFO - ObjValue=-0.7051545978 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 503, 'epoch': 1, 'hidden_size': 440, 'lr': 1.0975738580068577}
2021-05-24 12:53:27,797 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001685 seconds
2021-05-24 12:53:27,798 - hyperopt.tpe - INFO - TPE using 384/384 trials with best loss -0.735780
2021-05-24 12:53:28,925 - HyperTuner_objective - INFO - ObjValue=-0.7052522302 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 414, 'epoch': 1, 'hidden_size': 459, 'lr': 0.7538776659324418}
2021-05-24 12:53:28,930 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001954 seconds
2021-05-24 12:53:28,931 - hyperopt.tpe - INFO - TPE using 385/385 trials with best loss -0.735780
2021-05-24 12:53:32,284 - HyperTuner_objective - INFO - ObjValue=-0.3701380491 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 476, 'epoch': 3, 'hidden_size': 484, 'lr': 1.1982579494476147}
2021-05-24 12:53:32,288 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001754 seconds
2021-05-24 12:53:32,289 - hyperopt.tpe - INFO - TPE using 386/386 trials with best loss -0.735780
2021-05-24 12:53:33,250 - HyperTuner_objective - INFO - ObjValue=-0.6824675798 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 489, 'epoch': 1, 'hidden_size': 473, 'lr': 1.0691939932439403}
2021-05-24 12:53:33,254 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001790 seconds
2021-05-24 12:53:33,255 - hyperopt.tpe - INFO - TPE using 387/387 trials with best loss -0.735780
2021-05-24 12:53:34,235 - HyperTuner_objective - INFO - ObjValue=-0.7019144893 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 490, 'epoch': 1, 'hidden_size': 478, 'lr': 0.8688053649820303}
2021-05-24 12:53:34,238 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001718 seconds
2021-05-24 12:53:34,239 - hyperopt.tpe - INFO - TPE using 388/388 trials with best loss -0.735780
2021-05-24 12:53:35,908 - HyperTuner_objective - INFO - ObjValue=-0.7107856870 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 493, 'epoch': 2, 'hidden_size': 438, 'lr': 0.7192125090599852}
2021-05-24 12:53:35,912 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002008 seconds
2021-05-24 12:53:35,913 - hyperopt.tpe - INFO - TPE using 389/389 trials with best loss -0.735780
2021-05-24 12:53:37,062 - HyperTuner_objective - INFO - ObjValue=-0.7134243250 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 1, 'hidden_size': 469, 'lr': 0.8307633393488194}
2021-05-24 12:53:37,066 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001985 seconds
2021-05-24 12:53:37,067 - hyperopt.tpe - INFO - TPE using 390/390 trials with best loss -0.735780
2021-05-24 12:53:37,969 - HyperTuner_objective - INFO - ObjValue=-0.7020914555 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 509, 'epoch': 1, 'hidden_size': 471, 'lr': 1.0256676948873977}
2021-05-24 12:53:37,972 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001327 seconds
2021-05-24 12:53:37,973 - hyperopt.tpe - INFO - TPE using 391/391 trials with best loss -0.735780
2021-05-24 12:53:41,415 - HyperTuner_objective - INFO - ObjValue=-0.6544779539 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 483, 'epoch': 4, 'hidden_size': 446, 'lr': 1.2670878300042456}
2021-05-24 12:53:41,419 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001758 seconds
2021-05-24 12:53:41,420 - hyperopt.tpe - INFO - TPE using 392/392 trials with best loss -0.735780
2021-05-24 12:53:42,448 - HyperTuner_objective - INFO - ObjValue=-0.7027108669 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 1, 'hidden_size': 467, 'lr': 1.4465854279310781}
2021-05-24 12:53:42,451 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001737 seconds
2021-05-24 12:53:42,452 - hyperopt.tpe - INFO - TPE using 393/393 trials with best loss -0.735780
2021-05-24 12:53:43,459 - HyperTuner_objective - INFO - ObjValue=-0.7048901916 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 436, 'epoch': 1, 'hidden_size': 483, 'lr': 1.3801726356189106}
2021-05-24 12:53:43,462 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001690 seconds
2021-05-24 12:53:43,463 - hyperopt.tpe - INFO - TPE using 394/394 trials with best loss -0.735780
2021-05-24 12:53:44,339 - HyperTuner_objective - INFO - ObjValue=-0.6951035857 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 486, 'epoch': 1, 'hidden_size': 460, 'lr': 0.900524344175426}
2021-05-24 12:53:44,343 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001868 seconds
2021-05-24 12:53:44,344 - hyperopt.tpe - INFO - TPE using 395/395 trials with best loss -0.735780
2021-05-24 12:53:47,039 - HyperTuner_objective - INFO - ObjValue=-0.6897927523 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 458, 'epoch': 3, 'hidden_size': 456, 'lr': 1.1417419579368513}
2021-05-24 12:53:47,043 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001689 seconds
2021-05-24 12:53:47,043 - hyperopt.tpe - INFO - TPE using 396/396 trials with best loss -0.735780
2021-05-24 12:53:48,093 - HyperTuner_objective - INFO - ObjValue=-0.7166647315 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 463, 'epoch': 1, 'hidden_size': 463, 'lr': 0.9842505814321131}
2021-05-24 12:53:48,098 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001856 seconds
2021-05-24 12:53:48,099 - hyperopt.tpe - INFO - TPE using 397/397 trials with best loss -0.735780
2021-05-24 12:53:50,034 - HyperTuner_objective - INFO - ObjValue=-0.7004619837 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 427, 'epoch': 2, 'hidden_size': 449, 'lr': 1.243531487835552}
2021-05-24 12:53:50,039 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001866 seconds
2021-05-24 12:53:50,040 - hyperopt.tpe - INFO - TPE using 398/398 trials with best loss -0.735780
2021-05-24 12:53:51,009 - HyperTuner_objective - INFO - ObjValue=-0.6886450052 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 479, 'epoch': 1, 'hidden_size': 480, 'lr': 1.4999514475931572}
2021-05-24 12:53:51,013 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001685 seconds
2021-05-24 12:53:51,014 - hyperopt.tpe - INFO - TPE using 399/399 trials with best loss -0.735780
2021-05-24 12:53:52,114 - HyperTuner_objective - INFO - ObjValue=-0.6964614987 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 416, 'epoch': 1, 'hidden_size': 482, 'lr': 1.2859851100013828}
2021-05-24 12:53:52,118 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001689 seconds
2021-05-24 12:53:52,119 - hyperopt.tpe - INFO - TPE using 400/400 trials with best loss -0.735780
2021-05-24 12:53:53,160 - HyperTuner_objective - INFO - ObjValue=-0.7057045698 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 415, 'epoch': 1, 'hidden_size': 465, 'lr': 1.015004662100013}
2021-05-24 12:53:53,164 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001668 seconds
2021-05-24 12:53:53,164 - hyperopt.tpe - INFO - TPE using 401/401 trials with best loss -0.735780
2021-05-24 12:53:54,479 - HyperTuner_objective - INFO - ObjValue=-0.6957347393 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 442, 'epoch': 1, 'hidden_size': 438, 'lr': 1.1941293230524892}
2021-05-24 12:53:54,483 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001814 seconds
2021-05-24 12:53:54,484 - hyperopt.tpe - INFO - TPE using 402/402 trials with best loss -0.735780
2021-05-24 12:53:55,404 - HyperTuner_objective - INFO - ObjValue=-0.7003481388 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 438, 'lr': 1.1652883452498353}
2021-05-24 12:53:55,408 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001713 seconds
2021-05-24 12:53:55,409 - hyperopt.tpe - INFO - TPE using 403/403 trials with best loss -0.735780
2021-05-24 12:53:56,277 - HyperTuner_objective - INFO - ObjValue=-0.6857017875 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 508, 'epoch': 1, 'hidden_size': 438, 'lr': 1.219946084500253}
2021-05-24 12:53:56,281 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001873 seconds
2021-05-24 12:53:56,282 - hyperopt.tpe - INFO - TPE using 404/404 trials with best loss -0.735780
2021-05-24 12:53:57,173 - HyperTuner_objective - INFO - ObjValue=-0.6960747242 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 471, 'epoch': 1, 'hidden_size': 438, 'lr': 1.316776957718569}
2021-05-24 12:53:57,177 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001695 seconds
2021-05-24 12:53:57,177 - hyperopt.tpe - INFO - TPE using 405/405 trials with best loss -0.735780
2021-05-24 12:53:58,236 - HyperTuner_objective - INFO - ObjValue=-0.7120891809 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 437, 'epoch': 1, 'hidden_size': 438, 'lr': 1.2125608186210832}
2021-05-24 12:53:58,241 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002130 seconds
2021-05-24 12:53:58,242 - hyperopt.tpe - INFO - TPE using 406/406 trials with best loss -0.735780
2021-05-24 12:53:59,251 - HyperTuner_objective - INFO - ObjValue=-0.6950377822 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 432, 'epoch': 1, 'hidden_size': 454, 'lr': 1.3428688285393036}
2021-05-24 12:53:59,255 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001834 seconds
2021-05-24 12:53:59,256 - hyperopt.tpe - INFO - TPE using 407/407 trials with best loss -0.735780
2021-05-24 12:54:00,181 - HyperTuner_objective - INFO - ObjValue=-0.7154415250 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 464, 'lr': 1.2784814592548863}
2021-05-24 12:54:00,186 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001940 seconds
2021-05-24 12:54:00,187 - hyperopt.tpe - INFO - TPE using 408/408 trials with best loss -0.735780
2021-05-24 12:54:01,081 - HyperTuner_objective - INFO - ObjValue=-0.7048643231 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 495, 'epoch': 1, 'hidden_size': 436, 'lr': 1.253593916927102}
2021-05-24 12:54:01,085 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001741 seconds
2021-05-24 12:54:01,086 - hyperopt.tpe - INFO - TPE using 409/409 trials with best loss -0.735780
2021-05-24 12:54:02,032 - HyperTuner_objective - INFO - ObjValue=-0.7061923742 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 457, 'lr': 1.1117195523674268}
2021-05-24 12:54:02,035 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001680 seconds
2021-05-24 12:54:02,036 - hyperopt.tpe - INFO - TPE using 410/410 trials with best loss -0.735780
2021-05-24 12:54:02,927 - HyperTuner_objective - INFO - ObjValue=-0.6980104446 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 478, 'epoch': 1, 'hidden_size': 447, 'lr': 1.0547267028144045}
2021-05-24 12:54:02,929 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001326 seconds
2021-05-24 12:54:02,930 - hyperopt.tpe - INFO - TPE using 411/411 trials with best loss -0.735780
2021-05-24 12:54:03,762 - HyperTuner_objective - INFO - ObjValue=-0.6998485327 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 448, 'epoch': 1, 'hidden_size': 474, 'lr': 1.1403194032498887}
2021-05-24 12:54:03,765 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001290 seconds
2021-05-24 12:54:03,765 - hyperopt.tpe - INFO - TPE using 412/412 trials with best loss -0.735780
2021-05-24 12:54:04,584 - HyperTuner_objective - INFO - ObjValue=-0.7079457045 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 1, 'hidden_size': 455, 'lr': 1.1722666029073547}
2021-05-24 12:54:04,587 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001602 seconds
2021-05-24 12:54:04,588 - hyperopt.tpe - INFO - TPE using 413/413 trials with best loss -0.735780
2021-05-24 12:54:05,481 - HyperTuner_objective - INFO - ObjValue=-0.6759995818 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 445, 'epoch': 1, 'hidden_size': 439, 'lr': 1.313403384751915}
2021-05-24 12:54:05,484 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001484 seconds
2021-05-24 12:54:05,485 - hyperopt.tpe - INFO - TPE using 414/414 trials with best loss -0.735780
2021-05-24 12:54:06,631 - HyperTuner_objective - INFO - ObjValue=-0.6800065637 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 1, 'hidden_size': 461, 'lr': 1.0897773079432393}
2021-05-24 12:54:06,637 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002467 seconds
2021-05-24 12:54:06,638 - hyperopt.tpe - INFO - TPE using 415/415 trials with best loss -0.735780
2021-05-24 12:54:07,855 - HyperTuner_objective - INFO - ObjValue=-0.6689090729 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 434, 'epoch': 1, 'hidden_size': 466, 'lr': 1.2306010879054388}
2021-05-24 12:54:07,859 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001710 seconds
2021-05-24 12:54:07,859 - hyperopt.tpe - INFO - TPE using 416/416 trials with best loss -0.735780
2021-05-24 12:54:08,809 - HyperTuner_objective - INFO - ObjValue=-0.6906904578 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 480, 'epoch': 1, 'hidden_size': 473, 'lr': 1.1866979975200393}
2021-05-24 12:54:08,813 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001702 seconds
2021-05-24 12:54:08,814 - hyperopt.tpe - INFO - TPE using 417/417 trials with best loss -0.735780
2021-05-24 12:54:09,841 - HyperTuner_objective - INFO - ObjValue=-0.6972450018 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 497, 'epoch': 1, 'hidden_size': 468, 'lr': 1.2950194166447744}
2021-05-24 12:54:09,846 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001714 seconds
2021-05-24 12:54:09,847 - hyperopt.tpe - INFO - TPE using 418/418 trials with best loss -0.735780
2021-05-24 12:54:10,716 - HyperTuner_objective - INFO - ObjValue=-0.7239952683 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 1, 'hidden_size': 448, 'lr': 1.2582653518485036}
2021-05-24 12:54:10,720 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001633 seconds
2021-05-24 12:54:10,721 - hyperopt.tpe - INFO - TPE using 419/419 trials with best loss -0.735780
2021-05-24 12:54:11,600 - HyperTuner_objective - INFO - ObjValue=-0.7101495266 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 492, 'epoch': 1, 'hidden_size': 448, 'lr': 1.3868347511109076}
2021-05-24 12:54:11,605 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001720 seconds
2021-05-24 12:54:11,606 - hyperopt.tpe - INFO - TPE using 420/420 trials with best loss -0.735780
2021-05-24 12:54:12,526 - HyperTuner_objective - INFO - ObjValue=-0.7008756995 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 468, 'epoch': 1, 'hidden_size': 448, 'lr': 1.3673597879070112}
2021-05-24 12:54:12,531 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001709 seconds
2021-05-24 12:54:12,532 - hyperopt.tpe - INFO - TPE using 421/421 trials with best loss -0.735780
2021-05-24 12:54:13,433 - HyperTuner_objective - INFO - ObjValue=-0.7110443711 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 1, 'hidden_size': 448, 'lr': 1.4060863292197177}
2021-05-24 12:54:13,437 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001578 seconds
2021-05-24 12:54:13,437 - hyperopt.tpe - INFO - TPE using 422/422 trials with best loss -0.735780
2021-05-24 12:54:14,394 - HyperTuner_objective - INFO - ObjValue=-0.7222605348 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 424, 'epoch': 1, 'hidden_size': 448, 'lr': 1.3406789560823562}
2021-05-24 12:54:14,398 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001685 seconds
2021-05-24 12:54:14,399 - hyperopt.tpe - INFO - TPE using 423/423 trials with best loss -0.735780
2021-05-24 12:54:15,274 - HyperTuner_objective - INFO - ObjValue=-0.7029716969 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 464, 'epoch': 1, 'hidden_size': 448, 'lr': 1.2575474238959512}
2021-05-24 12:54:15,279 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001833 seconds
2021-05-24 12:54:15,280 - hyperopt.tpe - INFO - TPE using 424/424 trials with best loss -0.735780
2021-05-24 12:54:18,930 - HyperTuner_objective - INFO - ObjValue=-0.6626533270 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 487, 'epoch': 4, 'hidden_size': 437, 'lr': 1.3540826577272287}
2021-05-24 12:54:18,934 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001752 seconds
2021-05-24 12:54:18,935 - hyperopt.tpe - INFO - TPE using 425/425 trials with best loss -0.735780
2021-05-24 12:54:19,863 - HyperTuner_objective - INFO - ObjValue=-0.6781485677 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 472, 'epoch': 1, 'hidden_size': 441, 'lr': 1.3268133274630278}
2021-05-24 12:54:19,867 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001794 seconds
2021-05-24 12:54:19,868 - hyperopt.tpe - INFO - TPE using 426/426 trials with best loss -0.735780
2021-05-24 12:54:20,879 - HyperTuner_objective - INFO - ObjValue=-0.6971634626 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 449, 'epoch': 1, 'hidden_size': 458, 'lr': 1.4719407646422318}
2021-05-24 12:54:20,883 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001776 seconds
2021-05-24 12:54:20,884 - hyperopt.tpe - INFO - TPE using 427/427 trials with best loss -0.735780
2021-05-24 12:54:23,683 - HyperTuner_objective - INFO - ObjValue=-0.6731058359 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 452, 'epoch': 3, 'hidden_size': 442, 'lr': 1.3062398451037895}
2021-05-24 12:54:23,687 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001754 seconds
2021-05-24 12:54:23,687 - hyperopt.tpe - INFO - TPE using 428/428 trials with best loss -0.735780
2021-05-24 12:54:24,669 - HyperTuner_objective - INFO - ObjValue=-0.7091571093 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 435, 'epoch': 1, 'hidden_size': 476, 'lr': 1.005079090493527}
2021-05-24 12:54:24,673 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001608 seconds
2021-05-24 12:54:24,673 - hyperopt.tpe - INFO - TPE using 429/429 trials with best loss -0.735780
2021-05-24 12:54:25,736 - HyperTuner_objective - INFO - ObjValue=-0.6949965954 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 454, 'epoch': 1, 'hidden_size': 450, 'lr': 1.4138172542047367}
2021-05-24 12:54:25,743 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003663 seconds
2021-05-24 12:54:25,744 - hyperopt.tpe - INFO - TPE using 430/430 trials with best loss -0.735780
2021-05-24 12:54:27,600 - HyperTuner_objective - INFO - ObjValue=-0.7031507492 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 2, 'hidden_size': 472, 'lr': 1.447402503922882}
2021-05-24 12:54:27,603 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001603 seconds
2021-05-24 12:54:27,604 - hyperopt.tpe - INFO - TPE using 431/431 trials with best loss -0.735780
2021-05-24 12:54:28,633 - HyperTuner_objective - INFO - ObjValue=-0.6860004067 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 459, 'epoch': 1, 'hidden_size': 482, 'lr': 1.2747425923833}
2021-05-24 12:54:28,637 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002316 seconds
2021-05-24 12:54:28,638 - hyperopt.tpe - INFO - TPE using 432/432 trials with best loss -0.735780
2021-05-24 12:54:29,596 - HyperTuner_objective - INFO - ObjValue=-0.6924098134 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 1, 'hidden_size': 481, 'lr': 1.1479075772473752}
2021-05-24 12:54:29,599 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001410 seconds
2021-05-24 12:54:29,600 - hyperopt.tpe - INFO - TPE using 433/433 trials with best loss -0.735780
2021-05-24 12:54:30,537 - HyperTuner_objective - INFO - ObjValue=-0.7007722855 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 1, 'hidden_size': 452, 'lr': 1.0429644231295072}
2021-05-24 12:54:30,541 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001702 seconds
2021-05-24 12:54:30,542 - hyperopt.tpe - INFO - TPE using 434/434 trials with best loss -0.735780
2021-05-24 12:54:34,401 - HyperTuner_objective - INFO - ObjValue=-0.6674349308 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 510, 'epoch': 4, 'hidden_size': 485, 'lr': 1.365986716247552}
2021-05-24 12:54:34,406 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001717 seconds
2021-05-24 12:54:34,407 - hyperopt.tpe - INFO - TPE using 435/435 trials with best loss -0.735780
2021-05-24 12:54:35,602 - HyperTuner_objective - INFO - ObjValue=-0.7005054355 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 417, 'epoch': 1, 'hidden_size': 475, 'lr': 0.9657880019725928}
2021-05-24 12:54:35,606 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001726 seconds
2021-05-24 12:54:35,607 - hyperopt.tpe - INFO - TPE using 436/436 trials with best loss -0.735780
2021-05-24 12:54:36,604 - HyperTuner_objective - INFO - ObjValue=-0.7060869336 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 450, 'epoch': 1, 'hidden_size': 445, 'lr': 1.2358473891171777}
2021-05-24 12:54:36,608 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001978 seconds
2021-05-24 12:54:36,609 - hyperopt.tpe - INFO - TPE using 437/437 trials with best loss -0.735780
2021-05-24 12:54:39,801 - HyperTuner_objective - INFO - ObjValue=-0.6886373758 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 473, 'epoch': 3, 'hidden_size': 443, 'lr': 1.0691409057653152}
2021-05-24 12:54:39,806 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002467 seconds
2021-05-24 12:54:39,808 - hyperopt.tpe - INFO - TPE using 438/438 trials with best loss -0.735780
2021-05-24 12:54:40,867 - HyperTuner_objective - INFO - ObjValue=-0.7045756578 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 484, 'epoch': 1, 'hidden_size': 479, 'lr': 0.9341445098633194}
2021-05-24 12:54:40,873 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002353 seconds
2021-05-24 12:54:40,874 - hyperopt.tpe - INFO - TPE using 439/439 trials with best loss -0.735780
2021-05-24 12:54:41,873 - HyperTuner_objective - INFO - ObjValue=-0.6954145432 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 440, 'epoch': 1, 'hidden_size': 444, 'lr': 1.1782703530966643}
2021-05-24 12:54:41,878 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002092 seconds
2021-05-24 12:54:41,879 - hyperopt.tpe - INFO - TPE using 440/440 trials with best loss -0.735780
2021-05-24 12:54:44,037 - HyperTuner_objective - INFO - ObjValue=-0.7056072354 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 494, 'epoch': 2, 'hidden_size': 447, 'lr': 1.1054626278953488}
2021-05-24 12:54:44,046 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003975 seconds
2021-05-24 12:54:44,049 - hyperopt.tpe - INFO - TPE using 441/441 trials with best loss -0.735780
2021-05-24 12:54:45,291 - HyperTuner_objective - INFO - ObjValue=-0.7104505301 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 447, 'epoch': 1, 'hidden_size': 477, 'lr': 1.3908635798580946}
2021-05-24 12:54:45,296 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002202 seconds
2021-05-24 12:54:45,298 - hyperopt.tpe - INFO - TPE using 442/442 trials with best loss -0.735780
2021-05-24 12:54:46,359 - HyperTuner_objective - INFO - ObjValue=-0.7189000845 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 457, 'epoch': 1, 'hidden_size': 474, 'lr': 1.2130845388014402}
2021-05-24 12:54:46,366 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.003304 seconds
2021-05-24 12:54:46,367 - hyperopt.tpe - INFO - TPE using 443/443 trials with best loss -0.735780
2021-05-24 12:54:47,530 - HyperTuner_objective - INFO - ObjValue=-0.7032349706 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 421, 'epoch': 1, 'hidden_size': 453, 'lr': 1.4300893501881777}
2021-05-24 12:54:47,534 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001741 seconds
2021-05-24 12:54:47,535 - hyperopt.tpe - INFO - TPE using 444/444 trials with best loss -0.735780
2021-05-24 12:54:51,662 - HyperTuner_objective - INFO - ObjValue=-0.6531654000 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 438, 'epoch': 4, 'hidden_size': 451, 'lr': 1.131310567241101}
2021-05-24 12:54:51,666 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001822 seconds
2021-05-24 12:54:51,667 - hyperopt.tpe - INFO - TPE using 445/445 trials with best loss -0.735780
2021-05-24 12:54:52,538 - HyperTuner_objective - INFO - ObjValue=-0.7065548301 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 485, 'epoch': 1, 'hidden_size': 448, 'lr': 0.9026088285636152}
2021-05-24 12:54:52,542 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002305 seconds
2021-05-24 12:54:52,543 - hyperopt.tpe - INFO - TPE using 446/446 trials with best loss -0.735780
2021-05-24 12:54:53,559 - HyperTuner_objective - INFO - ObjValue=-0.6952909231 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 433, 'epoch': 1, 'hidden_size': 462, 'lr': 0.992297370003389}
2021-05-24 12:54:53,564 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002649 seconds
2021-05-24 12:54:53,566 - hyperopt.tpe - INFO - TPE using 447/447 trials with best loss -0.735780
2021-05-24 12:54:54,520 - HyperTuner_objective - INFO - ObjValue=-0.7102284431 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 491, 'epoch': 1, 'hidden_size': 440, 'lr': 0.9509135141711809}
2021-05-24 12:54:54,524 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001768 seconds
2021-05-24 12:54:54,525 - hyperopt.tpe - INFO - TPE using 448/448 trials with best loss -0.735780
2021-05-24 12:54:57,596 - HyperTuner_objective - INFO - ObjValue=-0.6821677685 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 431, 'epoch': 3, 'hidden_size': 459, 'lr': 1.2463322222016273}
2021-05-24 12:54:57,601 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001814 seconds
2021-05-24 12:54:57,602 - hyperopt.tpe - INFO - TPE using 449/449 trials with best loss -0.735780
2021-05-24 12:54:58,506 - HyperTuner_objective - INFO - ObjValue=-0.6978110075 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 488, 'epoch': 1, 'hidden_size': 473, 'lr': 1.4787634117529882}
2021-05-24 12:54:58,510 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001721 seconds
2021-05-24 12:54:58,511 - hyperopt.tpe - INFO - TPE using 450/450 trials with best loss -0.735780
2021-05-24 12:55:00,319 - HyperTuner_objective - INFO - ObjValue=-0.6767587066 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 465, 'epoch': 2, 'hidden_size': 470, 'lr': 1.2932377618400117}
2021-05-24 12:55:00,323 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001783 seconds
2021-05-24 12:55:00,324 - hyperopt.tpe - INFO - TPE using 451/451 trials with best loss -0.735780
2021-05-24 12:55:01,313 - HyperTuner_objective - INFO - ObjValue=-0.7077386975 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 419, 'epoch': 1, 'hidden_size': 469, 'lr': 1.1617618116188593}
2021-05-24 12:55:01,317 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001737 seconds
2021-05-24 12:55:01,318 - hyperopt.tpe - INFO - TPE using 452/452 trials with best loss -0.735780
2021-05-24 12:55:02,305 - HyperTuner_objective - INFO - ObjValue=-0.6881414652 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 453, 'epoch': 1, 'hidden_size': 483, 'lr': 1.082470464124058}
2021-05-24 12:55:02,308 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001627 seconds
2021-05-24 12:55:02,309 - hyperopt.tpe - INFO - TPE using 453/453 trials with best loss -0.735780
2021-05-24 12:55:03,160 - HyperTuner_objective - INFO - ObjValue=-0.6939854026 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 496, 'epoch': 1, 'hidden_size': 446, 'lr': 1.32953239313279}
2021-05-24 12:55:03,165 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001777 seconds
2021-05-24 12:55:03,166 - hyperopt.tpe - INFO - TPE using 454/454 trials with best loss -0.735780
2021-05-24 12:55:07,028 - HyperTuner_objective - INFO - ObjValue=-0.6757677794 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 498, 'epoch': 4, 'hidden_size': 471, 'lr': 1.0254460179715674}
2021-05-24 12:55:07,032 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001891 seconds
2021-05-24 12:55:07,033 - hyperopt.tpe - INFO - TPE using 455/455 trials with best loss -0.735780
2021-05-24 12:55:07,890 - HyperTuner_objective - INFO - ObjValue=-0.7102535963 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 1, 'hidden_size': 449, 'lr': 1.1967420971918246}
2021-05-24 12:55:07,894 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001600 seconds
2021-05-24 12:55:07,895 - hyperopt.tpe - INFO - TPE using 456/456 trials with best loss -0.735780
2021-05-24 12:55:08,857 - HyperTuner_objective - INFO - ObjValue=-0.7157988548 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 446, 'epoch': 1, 'hidden_size': 460, 'lr': 1.120236335164189}
2021-05-24 12:55:08,861 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001711 seconds
2021-05-24 12:55:08,862 - hyperopt.tpe - INFO - TPE using 457/457 trials with best loss -0.735780
2021-05-24 12:55:11,646 - HyperTuner_objective - INFO - ObjValue=-0.6918764710 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 477, 'epoch': 3, 'hidden_size': 467, 'lr': 0.8863139406573483}
2021-05-24 12:55:11,650 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001714 seconds
2021-05-24 12:55:11,651 - hyperopt.tpe - INFO - TPE using 458/458 trials with best loss -0.735780
2021-05-24 12:55:12,614 - HyperTuner_objective - INFO - ObjValue=-0.6973651052 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 501, 'epoch': 1, 'hidden_size': 484, 'lr': 1.0473499933357109}
2021-05-24 12:55:12,618 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002605 seconds
2021-05-24 12:55:12,619 - hyperopt.tpe - INFO - TPE using 459/459 trials with best loss -0.735780
2021-05-24 12:55:13,627 - HyperTuner_objective - INFO - ObjValue=-0.6960753202 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 444, 'epoch': 1, 'hidden_size': 478, 'lr': 1.3748094011488312}
2021-05-24 12:55:13,631 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001798 seconds
2021-05-24 12:55:13,632 - hyperopt.tpe - INFO - TPE using 460/460 trials with best loss -0.735780
2021-05-24 12:55:15,535 - HyperTuner_objective - INFO - ObjValue=-0.7088856697 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 426, 'epoch': 2, 'hidden_size': 482, 'lr': 0.8432834868515175}
2021-05-24 12:55:15,539 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001831 seconds
2021-05-24 12:55:15,540 - hyperopt.tpe - INFO - TPE using 461/461 trials with best loss -0.735780
2021-05-24 12:55:16,411 - HyperTuner_objective - INFO - ObjValue=-0.6860745549 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 505, 'epoch': 1, 'hidden_size': 456, 'lr': 0.8056898578520605}
2021-05-24 12:55:16,415 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001696 seconds
2021-05-24 12:55:16,416 - hyperopt.tpe - INFO - TPE using 462/462 trials with best loss -0.735780
2021-05-24 12:55:17,430 - HyperTuner_objective - INFO - ObjValue=-0.6927135587 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 420, 'epoch': 1, 'hidden_size': 447, 'lr': 0.9207969761419345}
2021-05-24 12:55:17,434 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001721 seconds
2021-05-24 12:55:17,435 - hyperopt.tpe - INFO - TPE using 463/463 trials with best loss -0.735780
2021-05-24 12:55:18,512 - HyperTuner_objective - INFO - ObjValue=-0.6969469190 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 429, 'epoch': 1, 'hidden_size': 463, 'lr': 1.2806602194605001}
2021-05-24 12:55:18,516 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001742 seconds
2021-05-24 12:55:18,517 - hyperopt.tpe - INFO - TPE using 464/464 trials with best loss -0.735780
2021-05-24 12:55:19,455 - HyperTuner_objective - INFO - ObjValue=-0.7069913149 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 456, 'epoch': 1, 'hidden_size': 474, 'lr': 1.3501727972580522}
2021-05-24 12:55:19,459 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001686 seconds
2021-05-24 12:55:19,460 - hyperopt.tpe - INFO - TPE using 465/465 trials with best loss -0.735780
2021-05-24 12:55:23,028 - HyperTuner_objective - INFO - ObjValue=-0.6605882645 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 462, 'epoch': 4, 'hidden_size': 480, 'lr': 0.9837694445329501}
2021-05-24 12:55:23,032 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001649 seconds
2021-05-24 12:55:23,033 - hyperopt.tpe - INFO - TPE using 466/466 trials with best loss -0.735780
2021-05-24 12:55:23,941 - HyperTuner_objective - INFO - ObjValue=-0.7164071202 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 482, 'epoch': 1, 'hidden_size': 457, 'lr': 1.2537256730223132}
2021-05-24 12:55:23,946 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001809 seconds
2021-05-24 12:55:23,947 - hyperopt.tpe - INFO - TPE using 467/467 trials with best loss -0.735780
2021-05-24 12:55:26,808 - HyperTuner_objective - INFO - ObjValue=-0.6723488569 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 430, 'epoch': 3, 'hidden_size': 465, 'lr': 1.3141203991142425}
2021-05-24 12:55:26,812 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001690 seconds
2021-05-24 12:55:26,813 - hyperopt.tpe - INFO - TPE using 468/468 trials with best loss -0.735780
2021-05-24 12:55:27,743 - HyperTuner_objective - INFO - ObjValue=-0.7186897397 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 506, 'epoch': 1, 'hidden_size': 436, 'lr': 1.2158565949614728}
2021-05-24 12:55:27,747 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001881 seconds
2021-05-24 12:55:27,748 - hyperopt.tpe - INFO - TPE using 469/469 trials with best loss -0.735780
2021-05-24 12:55:28,639 - HyperTuner_objective - INFO - ObjValue=-0.7122342587 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 461, 'epoch': 1, 'hidden_size': 464, 'lr': 1.4213020742006983}
2021-05-24 12:55:28,643 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001845 seconds
2021-05-24 12:55:28,645 - hyperopt.tpe - INFO - TPE using 470/470 trials with best loss -0.735780
2021-05-24 12:55:30,526 - HyperTuner_objective - INFO - ObjValue=-0.7040104866 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 466, 'epoch': 2, 'hidden_size': 461, 'lr': 1.0919152107396335}
2021-05-24 12:55:30,530 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001772 seconds
2021-05-24 12:55:30,531 - hyperopt.tpe - INFO - TPE using 471/471 trials with best loss -0.735780
2021-05-24 12:55:31,511 - HyperTuner_objective - INFO - ObjValue=-0.6960012317 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 423, 'epoch': 1, 'hidden_size': 455, 'lr': 0.7734499773396074}
2021-05-24 12:55:31,515 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001908 seconds
2021-05-24 12:55:31,517 - hyperopt.tpe - INFO - TPE using 472/472 trials with best loss -0.735780
2021-05-24 12:55:32,350 - HyperTuner_objective - INFO - ObjValue=-0.6988279819 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 511, 'epoch': 1, 'hidden_size': 454, 'lr': 1.1519669176094514}
2021-05-24 12:55:32,354 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001695 seconds
2021-05-24 12:55:32,355 - hyperopt.tpe - INFO - TPE using 473/473 trials with best loss -0.735780
2021-05-24 12:55:33,177 - HyperTuner_objective - INFO - ObjValue=-0.7053856850 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 474, 'epoch': 1, 'hidden_size': 448, 'lr': 1.4555909153585467}
2021-05-24 12:55:33,182 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001947 seconds
2021-05-24 12:55:33,183 - hyperopt.tpe - INFO - TPE using 474/474 trials with best loss -0.735780
2021-05-24 12:55:34,168 - HyperTuner_objective - INFO - ObjValue=-0.7044262886 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 443, 'epoch': 1, 'hidden_size': 466, 'lr': 1.17822575026275}
2021-05-24 12:55:34,173 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002656 seconds
2021-05-24 12:55:34,175 - hyperopt.tpe - INFO - TPE using 475/475 trials with best loss -0.735780
2021-05-24 12:55:37,754 - HyperTuner_objective - INFO - ObjValue=-0.6380089521 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 455, 'epoch': 4, 'hidden_size': 468, 'lr': 1.4980686283705176}
2021-05-24 12:55:37,759 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001838 seconds
2021-05-24 12:55:37,760 - hyperopt.tpe - INFO - TPE using 476/476 trials with best loss -0.735780
2021-05-24 12:55:38,681 - HyperTuner_objective - INFO - ObjValue=-0.7041383982 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 499, 'epoch': 1, 'hidden_size': 473, 'lr': 0.87332536267561}
2021-05-24 12:55:38,684 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001696 seconds
2021-05-24 12:55:38,685 - hyperopt.tpe - INFO - TPE using 477/477 trials with best loss -0.735780
2021-05-24 12:55:39,597 - HyperTuner_objective - INFO - ObjValue=-0.6982650161 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 439, 'epoch': 1, 'hidden_size': 472, 'lr': 1.0197069508509196}
2021-05-24 12:55:39,602 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001901 seconds
2021-05-24 12:55:39,603 - hyperopt.tpe - INFO - TPE using 478/478 trials with best loss -0.735780
2021-05-24 12:55:42,109 - HyperTuner_objective - INFO - ObjValue=-0.6916274428 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 470, 'epoch': 3, 'hidden_size': 442, 'lr': 1.0601637709129414}
2021-05-24 12:55:42,114 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001981 seconds
2021-05-24 12:55:42,115 - hyperopt.tpe - INFO - TPE using 479/479 trials with best loss -0.735780
2021-05-24 12:55:43,032 - HyperTuner_objective - INFO - ObjValue=-0.6961349845 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 481, 'epoch': 1, 'hidden_size': 437, 'lr': 1.1128093515925537}
2021-05-24 12:55:43,039 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002276 seconds
2021-05-24 12:55:43,040 - hyperopt.tpe - INFO - TPE using 480/480 trials with best loss -0.735780
2021-05-24 12:55:45,042 - HyperTuner_objective - INFO - ObjValue=-0.6951189041 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 413, 'epoch': 2, 'hidden_size': 439, 'lr': 0.9550482738950753}
2021-05-24 12:55:45,045 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001480 seconds
2021-05-24 12:55:45,046 - hyperopt.tpe - INFO - TPE using 481/481 trials with best loss -0.735780
2021-05-24 12:55:46,134 - HyperTuner_objective - INFO - ObjValue=-0.7043004036 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 412, 'epoch': 1, 'hidden_size': 476, 'lr': 1.2313041585752003}
2021-05-24 12:55:46,138 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001895 seconds
2021-05-24 12:55:46,139 - hyperopt.tpe - INFO - TPE using 482/482 trials with best loss -0.735780
2021-05-24 12:55:47,169 - HyperTuner_objective - INFO - ObjValue=-0.6722815037 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 418, 'epoch': 1, 'hidden_size': 458, 'lr': 1.3983621753044944}
2021-05-24 12:55:47,174 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001768 seconds
2021-05-24 12:55:47,175 - hyperopt.tpe - INFO - TPE using 483/483 trials with best loss -0.735780
2021-05-24 12:55:48,393 - HyperTuner_objective - INFO - ObjValue=-0.7017464638 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 428, 'epoch': 1, 'hidden_size': 475, 'lr': 1.261769470778412}
2021-05-24 12:55:48,397 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001793 seconds
2021-05-24 12:55:48,398 - hyperopt.tpe - INFO - TPE using 484/484 trials with best loss -0.735780
2021-05-24 12:55:52,228 - HyperTuner_objective - INFO - ObjValue=-0.6690381765 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 460, 'epoch': 4, 'hidden_size': 482, 'lr': 1.0361239351750111}
2021-05-24 12:55:52,232 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001701 seconds
2021-05-24 12:55:52,233 - hyperopt.tpe - INFO - TPE using 485/485 trials with best loss -0.735780
2021-05-24 12:55:53,097 - HyperTuner_objective - INFO - ObjValue=-0.6966064572 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 490, 'epoch': 1, 'hidden_size': 452, 'lr': 1.194246078447977}
2021-05-24 12:55:53,102 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002557 seconds
2021-05-24 12:55:53,104 - hyperopt.tpe - INFO - TPE using 486/486 trials with best loss -0.735780
2021-05-24 12:55:53,964 - HyperTuner_objective - INFO - ObjValue=-0.6862422824 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 504, 'epoch': 1, 'hidden_size': 441, 'lr': 0.973409523566882}
2021-05-24 12:55:53,968 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001881 seconds
2021-05-24 12:55:53,969 - hyperopt.tpe - INFO - TPE using 487/487 trials with best loss -0.735780
2021-05-24 12:55:54,825 - HyperTuner_objective - INFO - ObjValue=-0.7120378613 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 507, 'epoch': 1, 'hidden_size': 443, 'lr': 1.3387018753348128}
2021-05-24 12:55:54,829 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001824 seconds
2021-05-24 12:55:54,831 - hyperopt.tpe - INFO - TPE using 488/488 trials with best loss -0.735780
2021-05-24 12:55:58,508 - HyperTuner_objective - INFO - ObjValue=-0.3985039890 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 476, 'epoch': 3, 'hidden_size': 485, 'lr': 1.2940487778127312}
2021-05-24 12:55:58,512 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001806 seconds
2021-05-24 12:55:58,513 - hyperopt.tpe - INFO - TPE using 489/489 trials with best loss -0.735780
2021-05-24 12:55:59,543 - HyperTuner_objective - INFO - ObjValue=-0.7158476114 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 422, 'epoch': 1, 'hidden_size': 481, 'lr': 1.006212308997714}
2021-05-24 12:55:59,547 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001713 seconds
2021-05-24 12:55:59,548 - hyperopt.tpe - INFO - TPE using 490/490 trials with best loss -0.735780
2021-05-24 12:56:01,312 - HyperTuner_objective - INFO - ObjValue=-0.7002152801 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 475, 'epoch': 2, 'hidden_size': 447, 'lr': 1.1306581974521286}
2021-05-24 12:56:01,318 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002613 seconds
2021-05-24 12:56:01,319 - hyperopt.tpe - INFO - TPE using 491/491 trials with best loss -0.735780
2021-05-24 12:56:02,303 - HyperTuner_objective - INFO - ObjValue=-0.7167077661 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 414, 'epoch': 1, 'hidden_size': 445, 'lr': 0.8574803297811118}
2021-05-24 12:56:02,306 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001544 seconds
2021-05-24 12:56:02,307 - hyperopt.tpe - INFO - TPE using 492/492 trials with best loss -0.735780
2021-05-24 12:56:03,119 - HyperTuner_objective - INFO - ObjValue=-0.6969295144 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 493, 'epoch': 1, 'hidden_size': 477, 'lr': 1.0736735580325985}
2021-05-24 12:56:03,122 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001410 seconds
2021-05-24 12:56:03,123 - hyperopt.tpe - INFO - TPE using 493/493 trials with best loss -0.735780
2021-05-24 12:56:03,995 - HyperTuner_objective - INFO - ObjValue=-0.7040350437 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 451, 'epoch': 1, 'hidden_size': 474, 'lr': 0.9394424098650115}
2021-05-24 12:56:03,999 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001574 seconds
2021-05-24 12:56:03,999 - hyperopt.tpe - INFO - TPE using 494/494 trials with best loss -0.735780
2021-05-24 12:56:07,724 - HyperTuner_objective - INFO - ObjValue=-0.6434515119 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 441, 'epoch': 4, 'hidden_size': 444, 'lr': 1.3749562215962916}
2021-05-24 12:56:07,728 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001742 seconds
2021-05-24 12:56:07,729 - hyperopt.tpe - INFO - TPE using 495/495 trials with best loss -0.735780
2021-05-24 12:56:08,669 - HyperTuner_objective - INFO - ObjValue=-0.7001286149 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 483, 'epoch': 1, 'hidden_size': 453, 'lr': 0.536377814053701}
2021-05-24 12:56:08,674 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001763 seconds
2021-05-24 12:56:08,675 - hyperopt.tpe - INFO - TPE using 496/496 trials with best loss -0.735780
2021-05-24 12:56:09,528 - HyperTuner_objective - INFO - ObjValue=-0.7131000161 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 500, 'epoch': 1, 'hidden_size': 451, 'lr': 0.9117628345142154}
2021-05-24 12:56:09,533 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.002605 seconds
2021-05-24 12:56:09,534 - hyperopt.tpe - INFO - TPE using 497/497 trials with best loss -0.735780
2021-05-24 12:56:10,437 - HyperTuner_objective - INFO - ObjValue=-0.7243757844 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 425, 'epoch': 1, 'hidden_size': 448, 'lr': 1.3245573952773269}
2021-05-24 12:56:10,442 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001629 seconds
2021-05-24 12:56:10,443 - hyperopt.tpe - INFO - TPE using 498/498 trials with best loss -0.735780
2021-05-24 12:56:13,151 - HyperTuner_objective - INFO - ObjValue=-0.6747098565 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 502, 'epoch': 3, 'hidden_size': 459, 'lr': 1.431629727233262}
2021-05-24 12:56:13,155 - hyperopt.tpe - INFO - build_posterior_wrapper took 0.001615 seconds
2021-05-24 12:56:13,156 - hyperopt.tpe - INFO - TPE using 499/499 trials with best loss -0.735780
2021-05-24 12:56:13,963 - HyperTuner_objective - INFO - ObjValue=-0.7138310671 -- Params={'act_func_1': <class 'torch.nn.modules.activation.Tanh'>, 'act_func_2': <class 'torch.nn.modules.activation.Tanh'>, 'batch_size': 486, 'epoch': 1, 'hidden_size': 448, 'lr': 1.3556733667981173}
2021-05-24 13:15:30,714 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-05-24 13:15:30,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-05-24 13:15:30,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-24 13:15:30,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2021-05-24 13:15:30,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-05-24 13:15:30,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,747 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2021-05-24 13:15:30,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2021-05-24 13:15:30,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,769 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,770 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,771 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,772 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,773 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,774 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,775 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,776 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,777 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,778 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,779 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,780 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,781 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,782 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,783 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,783 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-05-24 13:15:30,783 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2021-05-24 13:15:30,784 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,785 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,786 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,787 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-24 13:15:30,788 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-05-24 13:15:47,072 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-05-24 13:15:47,118 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-05-24 13:15:49,007 - parso.python.diff - DEBUG - diff parser start
2021-05-24 13:15:49,007 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 13:15:49,007 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 13:15:49,008 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 13:15:49,008 - parso.python.diff - DEBUG - diff parser end
2021-05-24 13:15:49,020 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/Documents/工作使我疯狂/2021 Holmusk Internship/Github/PyTorchExercise/ModelHelper.py
2021-05-24 13:15:49,048 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/__init__.py
2021-05-24 13:15:49,054 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/nn/__init__.py
2021-05-24 13:15:49,665 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/__init__.py
2021-05-24 13:15:49,684 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py
2021-05-24 13:15:53,572 - parso.python.diff - DEBUG - diff parser start
2021-05-24 13:15:53,572 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 13:15:53,572 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 13:15:53,572 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 13:15:53,572 - parso.python.diff - DEBUG - diff parser end
2021-05-24 13:16:42,497 - parso.python.diff - DEBUG - diff parser start
2021-05-24 13:16:42,497 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 13:16:42,497 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 13:16:42,497 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 13:16:42,498 - parso.python.diff - DEBUG - diff parser end
2021-05-24 13:16:44,302 - parso.python.diff - DEBUG - diff parser start
2021-05-24 13:16:44,302 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 13:16:44,302 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 13:16:44,302 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 13:16:44,302 - parso.python.diff - DEBUG - diff parser end
2021-05-24 13:16:46,466 - parso.python.diff - DEBUG - diff parser start
2021-05-24 13:16:46,466 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 13:16:46,466 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 13:16:46,466 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 13:16:46,466 - parso.python.diff - DEBUG - diff parser end
2021-05-24 16:46:31,042 - parso.python.diff - DEBUG - diff parser start
2021-05-24 16:46:31,044 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 16:46:31,045 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 16:46:31,046 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 16:46:31,046 - parso.python.diff - DEBUG - diff parser end
2021-05-24 16:46:47,426 - parso.python.diff - DEBUG - diff parser start
2021-05-24 16:46:47,426 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 16:46:47,427 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 16:46:47,427 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 16:46:47,427 - parso.python.diff - DEBUG - diff parser end
2021-05-24 16:49:08,611 - parso.python.diff - DEBUG - diff parser start
2021-05-24 16:49:08,611 - parso.python.diff - DEBUG - line_lengths old: 1; new: 2
2021-05-24 16:49:08,612 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:2]
2021-05-24 16:49:08,612 - parso.python.diff - DEBUG - parse_part from 1 to 2 (to 1 in part parser)
2021-05-24 16:49:08,612 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:05:45,877 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:05:45,878 - parso.python.diff - DEBUG - line_lengths old: 2; new: 1
2021-05-24 17:05:45,878 - parso.python.diff - DEBUG - -> code[replace] old[1:2] new[1:1]
2021-05-24 17:05:45,878 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:05:45,879 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:05:55,455 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:05:55,455 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:05:55,455 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:05:55,455 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:05:55,456 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:06:27,483 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:06:27,483 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:06:27,483 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:06:27,483 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:06:27,483 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:06:30,757 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:06:30,757 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:06:30,758 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:06:30,758 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:06:30,758 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:58:41,149 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:58:41,151 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:58:41,151 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:58:41,151 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:58:41,151 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:58:41,183 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/collections/__init__.py
2021-05-24 17:58:41,204 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/collections/__init__.pyi
2021-05-24 17:58:49,169 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:58:49,170 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:58:49,170 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:58:49,170 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:58:49,170 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:58:58,113 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:58:58,113 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:58:58,113 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:58:58,113 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:58:58,114 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:59:27,075 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:59:27,075 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:59:27,075 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:59:27,075 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:59:27,075 - parso.python.diff - DEBUG - diff parser end
2021-05-24 17:59:53,411 - parso.python.diff - DEBUG - diff parser start
2021-05-24 17:59:53,411 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 17:59:53,411 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 17:59:53,411 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 17:59:53,411 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:18:13,548 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:18:13,549 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:18:13,549 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:18:13,551 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:18:13,551 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:18:20,157 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:18:20,158 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:18:20,158 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:18:20,158 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:18:20,158 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:20:57,421 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:20:57,423 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:20:57,423 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:20:57,423 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:20:57,423 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:44:14,358 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:44:14,359 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:44:14,359 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:44:14,360 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:44:14,360 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:44:21,961 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:44:21,961 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:44:21,961 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:44:21,962 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:44:21,962 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:44:28,476 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:44:28,477 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:44:28,477 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:44:28,477 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:44:28,477 - parso.python.diff - DEBUG - diff parser end
2021-05-24 23:44:29,783 - parso.python.diff - DEBUG - diff parser start
2021-05-24 23:44:29,784 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-24 23:44:29,784 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-24 23:44:29,784 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-24 23:44:29,784 - parso.python.diff - DEBUG - diff parser end
2021-05-25 08:54:22,433 - parso.python.diff - DEBUG - diff parser start
2021-05-25 08:54:22,434 - parso.python.diff - DEBUG - line_lengths old: 13; new: 1
2021-05-25 08:54:22,434 - parso.python.diff - DEBUG - -> code[replace] old[1:13] new[1:1]
2021-05-25 08:54:22,435 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 08:54:22,435 - parso.python.diff - DEBUG - diff parser end
2021-05-25 08:54:22,488 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-05-25 08:54:22,621 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-05-25 08:57:12,359 - parso.python.diff - DEBUG - diff parser start
2021-05-25 08:57:12,360 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 08:57:12,360 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 08:57:12,360 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 08:57:12,360 - parso.python.diff - DEBUG - diff parser end
2021-05-25 08:57:14,576 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 256, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 08:57:18,604 - parso.python.diff - DEBUG - diff parser start
2021-05-25 08:57:18,605 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 08:57:18,605 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 08:57:18,605 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 08:57:18,605 - parso.python.diff - DEBUG - diff parser end
2021-05-25 08:57:34,789 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 300, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 09:00:06,666 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:00:06,666 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:00:06,666 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:00:06,667 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:00:06,667 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:00:24,882 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:00:24,882 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:00:24,882 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:00:24,882 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:00:24,883 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:00:24,891 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/nn/__init__.py
2021-05-25 09:00:24,897 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/__init__.py
2021-05-25 09:00:24,919 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py
2021-05-25 09:00:24,953 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/os.py
2021-05-25 09:00:24,969 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/os/__init__.pyi
2021-05-25 09:00:24,983 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/posixpath.py
2021-05-25 09:00:24,994 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/ntpath.py
2021-05-25 09:00:25,000 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/os/path.pyi
2021-05-25 09:00:25,029 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/typing.py
2021-05-25 09:00:25,042 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2021-05-25 09:00:25,056 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ray/tune/__init__.py
2021-05-25 09:00:27,060 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:00:27,060 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:00:27,060 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:00:27,061 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:00:27,061 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:00:30,661 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:00:30,661 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:00:30,662 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:00:30,662 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:00:30,662 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:00:47,899 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:00:47,899 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:00:47,900 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:00:47,900 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:00:47,900 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:00:56,472 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:00:56,472 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:00:56,472 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:00:56,472 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:00:56,472 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:01:00,367 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:01:00,367 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:01:00,367 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:01:00,368 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:01:00,368 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:01:15,652 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:01:15,652 - parso.python.diff - DEBUG - line_lengths old: 1; new: 3
2021-05-25 09:01:15,652 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:3]
2021-05-25 09:01:15,652 - parso.python.diff - DEBUG - parse_part from 1 to 3 (to 2 in part parser)
2021-05-25 09:01:15,653 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:01:21,407 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:01:21,408 - parso.python.diff - DEBUG - line_lengths old: 3; new: 4
2021-05-25 09:01:21,408 - parso.python.diff - DEBUG - -> code[equal] old[1:2] new[1:2]
2021-05-25 09:01:21,408 - parso.python.diff - DEBUG - parse_part from 1 to 4 (to 3 in part parser)
2021-05-25 09:01:21,408 - parso.python.diff - DEBUG - -> code[insert] old[3:2] new[3:3]
2021-05-25 09:01:21,408 - parso.python.diff - DEBUG - -> code[equal] old[3:3] new[4:4]
2021-05-25 09:01:21,408 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:01:46,692 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 300, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 09:02:26,166 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 300, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 09:02:57,124 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 300, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 09:02:57,372 - myNeural - INFO - Forward Pass: tensor([ 0.0108, -0.0702, -0.1322, -0.0938, -0.0543,  0.1049, -0.2387, -0.1960,
        -0.1779, -0.1329,  0.1818, -0.0629, -0.2561, -0.1633, -0.4638, -0.0521,
        -0.0790, -0.3192, -0.0651, -0.3095,  0.0800, -0.0440, -0.2137, -0.2567,
         0.0615, -0.1711, -0.3486, -0.2541, -0.0582, -0.2042,  0.0902, -0.2114,
        -0.0021,  0.4782,  0.0402, -0.1870,  0.0589, -0.0481, -0.1905, -0.2708,
        -0.0918, -0.0715, -0.0504, -0.0787,  0.1726, -0.1115,  0.0005, -0.0110,
         0.0494, -0.0075, -0.0556, -0.3562, -0.1908, -0.1459, -0.0378, -0.3455,
        -0.1640, -0.0319, -0.2439,  0.0837, -0.3922, -0.1126, -0.1664, -0.0532,
         0.0297,  0.0580, -0.1463, -0.0385, -0.1396, -0.1649, -0.1599, -0.1492,
         0.0734, -0.0131, -0.1972, -0.2425, -0.3098, -0.3755, -0.1152, -0.0690,
         0.3046, -0.1974, -0.0786,  0.0363,  0.0129,  0.0689,  0.0092,  0.0051,
        -0.0916, -0.0317,  0.2530, -0.1364, -0.2961,  0.0410, -0.2673,  0.1616,
        -0.0126, -0.0664,  0.0054,  0.1861, -0.2581, -0.1998,  0.0631, -0.2460,
        -0.1751, -0.0292, -0.0245, -0.1313, -0.0532, -0.1000, -0.0277, -0.1808,
        -0.0877, -0.1142, -0.0301,  0.1474,  0.1266, -0.1512, -0.0024, -0.1102,
        -0.0974, -0.0289, -0.1806,  0.1234, -0.0894, -0.0266, -0.0297, -0.2598],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:02:57,415 - myNeural - INFO - Forward Pass: tensor([ 0.1422,  0.0847,  0.2936,  ..., -0.3481, -0.1523, -0.1307])
2021-05-25 09:09:55,381 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 300, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 09:09:57,685 - myNeural - INFO - Forward Pass: tensor([ 1.1104e-01,  1.2692e-01, -2.4889e-01, -9.4452e-02, -1.3083e-01,
        -1.0907e-01, -5.9362e-02, -2.3757e-01, -2.2433e-02, -7.9420e-02,
         3.5793e-02, -1.0693e-01, -2.3656e-01, -9.0667e-02,  9.5476e-02,
        -2.8856e-01, -1.9670e-01, -2.2535e-01, -1.1460e-01, -6.8369e-02,
        -1.3074e-01, -1.8903e-01, -2.6868e-01,  1.7244e-02,  1.4917e-01,
        -4.3991e-02,  2.1274e-02,  1.3926e-01,  5.9600e-02,  1.0777e-02,
        -8.7067e-02, -1.1723e-01, -8.1795e-02, -1.4275e-01, -5.1171e-02,
         2.4358e-01, -1.2599e-01, -4.0649e-02, -2.3135e-01,  7.7041e-02,
        -6.6789e-02, -1.9579e-01, -1.3521e-01, -1.1251e-01, -2.6491e-01,
        -2.0915e-01, -1.7375e-01, -2.7951e-01,  3.5735e-02, -3.3474e-01,
        -2.9304e-01, -2.5386e-01, -1.7358e-01, -2.2737e-01, -3.0396e-01,
        -1.3896e-01,  1.5148e-01,  1.9668e-01,  9.4665e-02, -1.1736e-01,
        -4.1331e-01, -2.0715e-02, -2.0015e-01,  3.8926e-02,  5.6189e-02,
         1.0210e-01,  5.9921e-02, -2.1739e-02, -2.1655e-01,  2.4133e-02,
        -1.0481e-01, -1.4988e-04, -3.8488e-02, -6.5174e-02, -4.7545e-02,
        -1.0884e-01,  7.9841e-02, -3.9520e-01,  1.2710e-01, -1.7750e-01,
        -9.6210e-02, -1.4255e-01, -4.2102e-02,  8.9688e-03,  5.2661e-02,
         2.2177e-01, -5.9704e-02, -3.1738e-01,  1.8289e-02, -1.7492e-01,
        -3.6125e-02, -1.1908e-01, -1.3299e-02, -9.8346e-02,  7.1320e-02,
        -2.0471e-03,  6.7612e-02, -2.0221e-01, -1.5561e-01,  5.9329e-02,
        -1.0040e-01, -1.4956e-01, -9.1774e-02,  5.8062e-02,  1.6004e-02,
        -2.0382e-01, -1.3214e-01, -3.1565e-01,  6.9625e-02, -1.7535e-01,
        -4.3979e-02, -2.4120e-01, -1.2158e-01, -1.4866e-01, -5.2463e-02,
        -2.4031e-02, -2.4696e-01, -1.4758e-01,  6.7132e-02, -8.3575e-02,
        -6.5737e-02, -8.4588e-02, -1.2334e-01, -3.5215e-01, -7.5688e-02,
         6.1894e-02, -1.7425e-01, -5.4425e-02], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,706 - myNeural - INFO - Forward Pass: tensor([-0.0057, -0.0979, -0.1155,  ..., -0.3045, -0.2754, -0.0274])
2021-05-25 09:09:57,735 - ray.tune.session - WARNING - Session not detected. You should not be calling `report` outside `tune.run` or while using the class API. 
2021-05-25 09:09:57,736 - ray.tune.session - WARNING -   File "/Users/shaominliu/opt/anaconda3/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel_launcher.py", line 16, in <module>
    app.launch_new_instance()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/traitlets/config/application.py", line 845, in launch_instance
    app.start()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelapp.py", line 612, in start
    self.io_loop.start()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/platform/asyncio.py", line 149, in start
    self.asyncio_loop.run_forever()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 570, in run_forever
    self._run_once()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 1859, in _run_once
    handle._run()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/ioloop.py", line 690, in <lambda>
    lambda f: self._run_callback(functools.partial(callback, future))
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/ioloop.py", line 743, in _run_callback
    ret = callback()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 787, in inner
    self.run()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 748, in run
    yielded = self.gen.send(value)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 365, in process_one
    yield gen.maybe_future(dispatch(*args))
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 268, in dispatch_shell
    yield gen.maybe_future(handler(stream, idents, msg))
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 543, in execute_request
    self.do_execute(
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py", line 306, in do_execute
    res = shell.run_cell(code, store_history=store_history, silent=silent)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/zmqshell.py", line 536, in run_cell
    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 2877, in run_cell
    result = self._run_cell(
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 2923, in _run_cell
    return runner(coro)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/async_helpers.py", line 68, in _pseudo_sync_runner
    coro.send(None)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3146, in run_cell_async
    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3338, in run_ast_nodes
    if (await self.run_code(code, result,  async_=asy)):
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3418, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-47-5ca2bc669899>", line 1, in <module>
    singleModel.optimise(trainData, testData,
  File "/Users/shaominliu/Documents/工作使我疯狂/2021 Holmusk Internship/Github/PyTorchExercise/ModelHelper2.py", line 182, in optimise
    tune.report(

2021-05-25 09:09:57,737 - myNeural - INFO - Batch 0 -- TrainLoss: 0.68716 -- TrainAcc: 52.34375% -- TestAcc: 52.40000%
2021-05-25 09:09:57,743 - myNeural - INFO - Forward Pass: tensor([ 0.0626,  0.0890, -0.1532, -0.2563, -0.0669, -0.0256, -0.1032, -0.0943,
        -0.2732,  0.1623, -0.0808,  0.0817, -0.2586, -0.0352, -0.0402,  0.0080,
        -0.1008, -0.0186, -0.1362, -0.1913, -0.2747, -0.3205,  0.0493, -0.0810,
        -0.1033,  0.1641,  0.1291, -0.0334, -0.0627, -0.0636, -0.1974,  0.0551,
        -0.3059, -0.2215,  0.1033, -0.1473, -0.1437,  0.1628,  0.0235,  0.0138,
        -0.2373, -0.1679, -0.1368,  0.0118,  0.1483, -0.2048,  0.0248, -0.1292,
        -0.0254,  0.0075, -0.0449,  0.0317, -0.0313, -0.0383, -0.3340, -0.0710,
        -0.1417, -0.0174,  0.0668,  0.2990, -0.1442, -0.1094, -0.0013, -0.1193,
        -0.0324,  0.0674, -0.2175, -0.0501,  0.0888, -0.1289, -0.0197,  0.1030,
        -0.3539, -0.1193, -0.0480, -0.1075, -0.0404,  0.0029,  0.2564,  0.1154,
        -0.0647, -0.2173, -0.3348, -0.0825, -0.4815, -0.0836,  0.0357, -0.1551,
        -0.1483, -0.0421, -0.0497, -0.2099, -0.4902, -0.0663, -0.3694, -0.1462,
        -0.0886, -0.0976,  0.0383, -0.0750, -0.1211, -0.0616, -0.0545, -0.0507,
         0.0863, -0.0603, -0.0333, -0.0338, -0.0959, -0.1819, -0.0933,  0.0539,
        -0.2145, -0.1350, -0.3699,  0.0944, -0.2774,  0.0169, -0.1521,  0.0865,
        -0.1058, -0.0526,  0.1286,  0.0418, -0.1640,  0.0200, -0.2036, -0.1518],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,760 - myNeural - INFO - Forward Pass: tensor([-0.0890, -0.1767, -0.2147,  ..., -0.3845, -0.3566, -0.0826])
2021-05-25 09:09:57,784 - myNeural - INFO - Forward Pass: tensor([-1.1259e-01, -2.3355e-01, -2.2849e-01, -2.1659e-01, -3.3864e-01,
        -1.8055e-01, -1.8386e-01, -2.8532e-01, -8.4702e-02, -3.6361e-02,
        -7.5872e-02,  7.0597e-02, -3.3571e-02, -1.2121e-01, -3.2773e-01,
        -8.3171e-02, -3.9109e-02, -2.3977e-01, -3.0042e-01, -1.2349e-01,
        -1.6793e-01, -1.2213e-01, -5.2391e-01, -1.8196e-01, -1.9428e-01,
        -3.3029e-01, -2.0754e-01, -1.1105e-01, -1.2790e-01, -3.1168e-01,
        -6.5624e-02, -1.0559e-02, -5.5964e-02, -2.7488e-01, -2.3824e-01,
        -2.3009e-01, -6.3859e-02, -2.7064e-01, -1.5876e-01, -2.2051e-02,
         2.8569e-02, -1.5404e-01, -1.0404e-01, -1.2699e-01, -1.9365e-01,
        -6.1939e-02,  7.0544e-02, -1.4391e-01, -3.6654e-01, -1.2768e-01,
        -1.8567e-01, -5.4266e-02, -2.2144e-01, -4.8929e-02, -1.8189e-01,
        -2.6457e-02,  1.4504e-01, -9.2769e-02, -2.3540e-01, -7.0213e-02,
        -2.3770e-01, -1.7653e-01, -4.8872e-02, -4.9643e-01, -1.4549e-01,
        -2.8045e-01, -1.8955e-01,  1.6328e-02, -1.1135e-01, -1.0421e-01,
        -3.8865e-01, -1.5546e-01, -2.4258e-01,  1.6980e-01, -2.6823e-01,
         6.4116e-03, -1.6195e-01,  3.3273e-02, -3.2714e-02, -2.5646e-01,
        -1.4880e-01, -3.5444e-02, -2.3705e-01, -1.5070e-01, -1.2110e-01,
        -1.1848e-01, -4.0908e-02, -1.4573e-02, -3.9459e-01, -2.0514e-01,
        -3.6005e-02, -5.1707e-02,  6.6193e-02,  4.3879e-02, -6.4754e-04,
        -1.5067e-01, -1.2963e-01, -1.1103e-01, -1.3247e-01,  9.3529e-02,
        -4.2907e-02, -8.0577e-02, -3.4566e-01, -1.9185e-01, -2.0802e-01,
        -2.8978e-01, -1.9924e-01, -5.7817e-02, -6.2221e-02, -7.6106e-02,
        -2.3658e-01,  1.1423e-01,  2.5833e-01, -1.9321e-01,  3.2250e-02,
        -1.4805e-01, -1.0217e-01, -9.7285e-02, -1.3801e-01, -1.4270e-01,
        -5.3448e-01, -1.0030e-01, -2.1203e-01,  4.3237e-04, -3.7106e-01,
        -2.9606e-01, -1.5270e-01, -1.9631e-03], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,800 - myNeural - INFO - Forward Pass: tensor([-0.0041, -0.1310, -0.1299,  ..., -0.2849, -0.2712, -0.0145])
2021-05-25 09:09:57,819 - myNeural - INFO - Forward Pass: tensor([-0.0205, -0.1323, -0.3291,  0.0860,  0.0647, -0.3492, -0.0984,  0.2053,
         0.1030, -0.2158, -0.0174, -0.0464, -0.2821, -0.0735, -0.2838, -0.1192,
         0.0121,  0.2253, -0.0116, -0.2528,  0.1557, -0.0864, -0.1641, -0.3029,
        -0.1169, -0.0839, -0.1434, -0.1915, -0.3788, -0.2535, -0.0278, -0.1202,
        -0.3408, -0.2694, -0.2639,  0.0461,  0.0264, -0.2270, -0.0143, -0.1704,
        -0.0172, -0.1675, -0.0093, -0.1809,  0.0775, -0.0929, -0.1555,  0.0550,
         0.0518,  0.1580, -0.2559, -0.2878,  0.0207, -0.0187, -0.0531,  0.2589,
        -0.0604,  0.0315, -0.3082, -0.1030, -0.1891,  0.0303, -0.1976,  0.0054,
         0.0502, -0.0945,  0.0654, -0.0570,  0.0089, -0.3101,  0.1433,  0.1191,
        -0.2516,  0.0356, -0.0749, -0.1020, -0.1123, -0.2231,  0.0106,  0.1760,
        -0.1630,  0.1101,  0.1097, -0.2494, -0.0082,  0.1966,  0.1926, -0.1812,
         0.1157, -0.2130, -0.1910,  0.0988, -0.1569, -0.0162, -0.0907, -0.1839,
        -0.1785,  0.1142,  0.0024, -0.1067,  0.2152, -0.1267,  0.0983,  0.1047,
         0.1816,  0.2125, -0.0056, -0.1591, -0.0255, -0.0238, -0.1188,  0.2552,
        -0.0698,  0.1357,  0.0072,  0.2292, -0.1126,  0.0256, -0.1062,  0.0401,
         0.0071, -0.0825, -0.0400, -0.0278, -0.1609, -0.0371, -0.0794,  0.0094],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,835 - myNeural - INFO - Forward Pass: tensor([-0.0940, -0.2081, -0.2288,  ..., -0.4041, -0.3682, -0.0733])
2021-05-25 09:09:57,851 - myNeural - INFO - Forward Pass: tensor([-0.1353, -0.2321, -0.2893, -0.2435, -0.2277, -0.2544, -0.0562, -0.1285,
        -0.0565,  0.0014, -0.3337, -0.2564, -0.2178, -0.1407, -0.0132, -0.1893,
        -0.1873,  0.0429, -0.1655, -0.2476, -0.2231, -0.5732, -0.1011, -0.4046,
        -0.0343, -0.2162, -0.2611, -0.1054,  0.0166, -0.0837, -0.1242, -0.0183,
        -0.1367, -0.1205, -0.0491,  0.0547, -0.2681, -0.1718, -0.0064, -0.1216,
         0.1541, -0.0470,  0.0062, -0.2364, -0.0222, -0.0973,  0.1496,  0.0220,
        -0.0802, -0.0979, -0.1369,  0.2002, -0.2360, -0.2027, -0.1625, -0.1876,
        -0.2016,  0.0142, -0.4433, -0.2485, -0.0999, -0.2020, -0.2824, -0.2995,
        -0.3441, -0.1462, -0.0238, -0.2108, -0.2971, -0.1314, -0.2212, -0.0076,
        -0.2088, -0.2037,  0.1337, -0.0935, -0.0949, -0.0844, -0.0868,  0.0960,
        -0.4784, -0.3583, -0.2626, -0.1317, -0.0293, -0.3415,  0.2530, -0.1224,
        -0.0026, -0.2229, -0.2751, -0.0819, -0.3014, -0.0878, -0.3484,  0.0599,
        -0.1002, -0.1297, -0.0817,  0.0847, -0.1907, -0.1229, -0.2663, -0.0659,
        -0.2487, -0.1859, -0.4563, -0.1888, -0.1252, -0.2071, -0.3323, -0.4243,
        -0.0901, -0.0359, -0.1698, -0.1183, -0.0825, -0.1941, -0.1209,  0.0400,
        -0.1078, -0.0704, -0.1590,  0.0632, -0.2381, -0.1686, -0.4253, -0.0806],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,865 - myNeural - INFO - Forward Pass: tensor([ 0.0524, -0.1285, -0.1019,  ..., -0.2615, -0.2312,  0.0148])
2021-05-25 09:09:57,880 - myNeural - INFO - Forward Pass: tensor([ 0.2233,  0.0054, -0.2783,  0.0024, -0.4316,  0.1098, -0.0142, -0.2409,
        -0.0901, -0.0133,  0.3503, -0.1231, -0.0093,  0.2120,  0.1938, -0.0484,
         0.1706, -0.1670, -0.1486,  0.2436,  0.0961,  0.0828, -0.0289,  0.1033,
         0.0198, -0.0198,  0.1090,  0.0412, -0.0295, -0.2505,  0.0378, -0.0606,
        -0.2171,  0.0171, -0.1941,  0.1696,  0.0111,  0.0164, -0.2264,  0.0442,
        -0.1391, -0.0944, -0.0546, -0.2608, -0.0272, -0.1048,  0.0587,  0.1077,
         0.0662, -0.0649,  0.0343,  0.1450, -0.1522,  0.1672,  0.2004, -0.0655,
         0.0485,  0.0195, -0.1058, -0.0160, -0.1039, -0.0862,  0.2300, -0.0661,
         0.2016,  0.3347,  0.1599, -0.1402, -0.2959, -0.0070, -0.3586,  0.1917,
        -0.0859, -0.0196, -0.1627, -0.1777,  0.1175,  0.0924,  0.0246,  0.2454,
        -0.1109, -0.2239,  0.2297,  0.2423, -0.1495, -0.1676, -0.0596,  0.3190,
        -0.0308, -0.2598,  0.0116,  0.2317,  0.0526,  0.0018, -0.0054, -0.0314,
        -0.2367, -0.1575,  0.1237,  0.2243,  0.0587, -0.0871,  0.0345,  0.0768,
        -0.3233, -0.2840, -0.1103, -0.1165,  0.1577,  0.0657, -0.1258, -0.0575,
        -0.1496,  0.0188, -0.0467,  0.1387, -0.0125, -0.1881,  0.1669, -0.0853,
         0.1195,  0.1841, -0.1953, -0.0023,  0.0123,  0.1087,  0.0336, -0.5067],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,895 - myNeural - INFO - Forward Pass: tensor([ 0.0066, -0.1610, -0.1376,  ..., -0.2906, -0.2619, -0.0108])
2021-05-25 09:09:57,911 - myNeural - INFO - Forward Pass: tensor([ 0.0818, -0.1097,  0.1873,  0.1265, -0.1087, -0.1501, -0.0123,  0.1286,
         0.1312, -0.0585,  0.1837, -0.0153, -0.1649, -0.0967,  0.0888, -0.0556,
        -0.0512, -0.1624,  0.0583,  0.0979, -0.1074, -0.0752,  0.0986,  0.1679,
         0.0401,  0.1578, -0.0313, -0.1231, -0.0068,  0.0369,  0.1380, -0.1249,
        -0.2027,  0.1495,  0.1173, -0.4131,  0.1678, -0.0269, -0.0362,  0.1255,
         0.1132,  0.2040,  0.0469, -0.1733, -0.1468, -0.0993,  0.2544, -0.1586,
        -0.1902,  0.1465,  0.2267,  0.1484,  0.2816, -0.1964, -0.3715, -0.1383,
         0.0506,  0.2245,  0.0840,  0.1094,  0.0316,  0.1435, -0.0033,  0.0641,
        -0.2407, -0.2199,  0.0485,  0.0835, -0.0344, -0.0776, -0.1770, -0.2366,
         0.0808, -0.1453, -0.0296,  0.0746, -0.1085, -0.0901, -0.0055, -0.0433,
        -0.0997, -0.2102, -0.1091, -0.1798, -0.2028, -0.0522,  0.0176,  0.0689,
        -0.0170, -0.1394, -0.2860,  0.1582, -0.1651,  0.0572, -0.1282, -0.3589,
        -0.2858,  0.1427,  0.0324,  0.1576, -0.1851,  0.0826,  0.2105,  0.0456,
        -0.0761, -0.1516, -0.4402,  0.0560, -0.1518, -0.0547,  0.1036,  0.2923,
        -0.0185, -0.0723,  0.0361, -0.0502, -0.2100, -0.1831, -0.3596,  0.3635,
         0.1213, -0.1010, -0.0150, -0.1142,  0.0668,  0.0752,  0.2355, -0.1057],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,926 - myNeural - INFO - Forward Pass: tensor([ 0.0985, -0.1132, -0.0652,  ..., -0.2149, -0.1724,  0.0580])
2021-05-25 09:09:57,941 - myNeural - INFO - Forward Pass: tensor([ 0.3219,  0.3104,  0.0674,  0.0690, -0.1752, -0.1394,  0.0180,  0.1584,
        -0.0896,  0.0429, -0.0158,  0.0925,  0.2709,  0.1436,  0.1172, -0.0859,
         0.0103,  0.1448, -0.0236,  0.1040, -0.1831,  0.2357,  0.2011,  0.4508,
         0.2594,  0.1644,  0.0759,  0.2217,  0.1768, -0.2472,  0.1085,  0.0646,
        -0.0752, -0.1615,  0.1177, -0.0995,  0.1048,  0.1346,  0.1478, -0.0647,
        -0.0431,  0.2183,  0.1368,  0.0509, -0.0529, -0.2697, -0.0583, -0.0222,
         0.1072,  0.1187, -0.0885, -0.1384, -0.1320,  0.0681, -0.0261,  0.0787,
         0.2105, -0.2278, -0.0877, -0.1236,  0.2693, -0.1214,  0.0567, -0.2604,
        -0.0222, -0.1186,  0.0784,  0.4586,  0.1532,  0.0888, -0.1595,  0.1603,
         0.3996, -0.1327, -0.2205,  0.1007,  0.0777, -0.0477, -0.2657, -0.2087,
         0.2392,  0.1053,  0.0488,  0.2895, -0.2382, -0.0151,  0.2416, -0.1111,
        -0.0607, -0.2015,  0.0824,  0.0246,  0.1707, -0.0171,  0.1808, -0.0660,
         0.1462,  0.0195,  0.3589,  0.0986,  0.2126,  0.0441, -0.0400,  0.1429,
         0.0238,  0.1114,  0.1048,  0.1208, -0.0194, -0.0922, -0.2487, -0.0953,
        -0.3533, -0.1339,  0.0311,  0.2323,  0.0308,  0.1099,  0.1923,  0.2262,
         0.1249,  0.2557, -0.0521,  0.0989,  0.0073,  0.1135, -0.1572,  0.2928],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,955 - myNeural - INFO - Forward Pass: tensor([ 0.2097, -0.0472,  0.0635,  ..., -0.1062, -0.0792,  0.1467])
2021-05-25 09:09:57,971 - myNeural - INFO - Forward Pass: tensor([ 2.4376e-01,  4.9791e-01,  1.9649e-01, -1.1200e-02,  2.7298e-01,
         2.3931e-01,  3.1484e-01,  2.3404e-01,  5.0402e-01,  1.2591e-01,
         2.4252e-01, -7.5972e-05, -4.9670e-02,  5.1820e-02,  3.4584e-01,
         6.9209e-02,  1.6510e-02,  2.8594e-01,  3.2732e-01, -8.0711e-02,
        -9.8114e-03,  1.0874e-01,  1.5106e-01, -1.7144e-02,  2.6964e-01,
         1.0138e-01,  2.1978e-01,  1.8192e-01,  2.6491e-01,  2.6870e-01,
         6.1420e-02,  8.8330e-02, -2.2571e-01, -9.8670e-02,  1.3066e-01,
        -9.3399e-02,  2.6696e-01, -1.8705e-01,  2.2495e-01,  3.9842e-01,
         2.4485e-01,  1.1200e-01,  4.0033e-01,  2.0795e-01,  4.5766e-01,
        -7.9991e-02,  1.2272e-01,  2.4949e-01,  1.8676e-01,  2.7362e-01,
         4.9654e-01,  3.9075e-01, -1.9521e-02, -5.5398e-02,  1.4860e-01,
         2.3991e-01,  1.4616e-01, -2.1352e-02,  5.6793e-03,  7.6551e-02,
        -2.8891e-02,  3.5385e-01,  4.3779e-01, -1.0432e-01,  8.5856e-02,
         9.7140e-02,  3.5628e-01,  2.5665e-01, -3.8846e-02,  1.4137e-01,
         2.7049e-01, -1.5275e-02,  2.4442e-01,  2.1662e-01,  3.8934e-01,
         3.5405e-01, -5.6022e-02,  2.7534e-01,  1.2661e-01, -2.0427e-01,
         3.2559e-01,  9.3917e-02,  1.5496e-01,  1.0678e-01,  2.4123e-01,
         2.8688e-01,  4.0054e-01,  2.2910e-01, -1.2954e-03, -7.3462e-02,
         2.4644e-02,  1.2092e-01,  2.7949e-02,  2.2229e-01,  3.9703e-01,
         2.9497e-01,  3.0706e-01,  1.5428e-01,  7.2662e-02,  3.6422e-01,
         7.6319e-02,  2.6629e-02, -1.2512e-01, -1.1670e-03, -9.3858e-02,
         1.5746e-01, -2.2146e-02,  2.9497e-01,  1.5505e-01,  2.7851e-01,
         4.3620e-01,  3.0499e-01,  2.5409e-01, -1.0228e-02,  1.4748e-01,
         6.3188e-01,  5.9263e-02,  1.2912e-01,  1.0915e-01,  2.5065e-01,
        -8.6461e-02,  1.5349e-01, -1.5195e-01,  2.0508e-01,  2.1107e-02,
         9.0277e-02,  4.2076e-01, -1.1505e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:57,986 - myNeural - INFO - Forward Pass: tensor([ 0.0579, -0.1774, -0.0816,  ..., -0.2804, -0.2549,  0.0332])
2021-05-25 09:09:58,002 - myNeural - INFO - Forward Pass: tensor([-0.0105, -0.0049, -0.1597, -0.1212, -0.0313, -0.3072,  0.1686, -0.2688,
         0.0855,  0.0670,  0.0963,  0.0259, -0.0573,  0.2265,  0.0879,  0.1633,
         0.2241, -0.1944,  0.2957,  0.1610,  0.2649,  0.0794, -0.1998,  0.1204,
         0.0618,  0.0392, -0.0919, -0.2870,  0.1148,  0.0158,  0.0732,  0.1037,
         0.2152, -0.0569, -0.3093,  0.1206,  0.0621, -0.0210, -0.0052, -0.0594,
        -0.1127, -0.0046,  0.1882,  0.1790, -0.1961, -0.0440,  0.3395,  0.1420,
        -0.3027,  0.1591,  0.1334,  0.0592,  0.0151,  0.0155, -0.0415, -0.1275,
         0.2913,  0.3055, -0.1837,  0.1610, -0.1840, -0.1512, -0.0428, -0.1288,
        -0.0878,  0.1439, -0.0374, -0.1564,  0.0784,  0.0736,  0.0751,  0.0666,
        -0.3378,  0.3340, -0.2555, -0.2201,  0.0223,  0.2169,  0.3178,  0.1233,
         0.0692,  0.0168, -0.2534, -0.0431, -0.1331,  0.1389,  0.3272,  0.1962,
         0.1679, -0.0007,  0.2825,  0.1158,  0.2892,  0.0425,  0.0171, -0.2996,
         0.0826,  0.0344, -0.0060,  0.0751,  0.3362,  0.1392,  0.0856,  0.2707,
        -0.0082,  0.2094,  0.0718,  0.0455, -0.1036, -0.0747,  0.0410,  0.1521,
         0.0290,  0.1731, -0.3929,  0.0033, -0.0219,  0.1228, -0.1918, -0.0281,
         0.0448,  0.1769, -0.1137, -0.0919, -0.0939, -0.4164, -0.0944, -0.2726],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,017 - myNeural - INFO - Forward Pass: tensor([ 0.2184, -0.0899,  0.0803,  ..., -0.1609, -0.1252,  0.1547])
2021-05-25 09:09:58,031 - myNeural - INFO - Forward Pass: tensor([ 0.3870,  0.2477,  0.2622,  0.5338,  0.1639,  0.1534,  0.2414,  0.4583,
         0.1301,  0.4234,  0.2330,  0.3294,  0.1582, -0.0014,  0.0223,  0.1096,
         0.3109,  0.1478,  0.2505,  0.0517, -0.0180,  0.4125,  0.1961,  0.3828,
         0.3270, -0.0513, -0.0045,  0.2654,  0.0690,  0.0986,  0.1019,  0.3323,
         0.1170, -0.1596, -0.0275,  0.2668,  0.3773,  0.1335,  0.2222,  0.1071,
         0.1323,  0.1616,  0.1681,  0.1317,  0.1952,  0.0258,  0.1860,  0.1321,
        -0.0728,  0.3851, -0.0574, -0.0715,  0.0562,  0.2290,  0.6468, -0.0097,
         0.2468,  0.0285,  0.3357,  0.0615,  0.2207,  0.4191, -0.0235,  0.1680,
         0.2105,  0.1546, -0.0798, -0.0127,  0.1501,  0.1874, -0.0114,  0.1944,
        -0.0986,  0.1717,  0.2287,  0.0462,  0.6265,  0.2710,  0.2281, -0.0091,
         0.4569,  0.0762,  0.3064,  0.3440,  0.0901,  0.1819,  0.1657, -0.2358,
         0.2861,  0.0828, -0.1511,  0.2145,  0.3906,  0.3274,  0.2198,  0.1644,
         0.4458,  0.3668,  0.3633,  0.0641,  0.1191, -0.0327, -0.0736,  0.0792,
         0.2331, -0.0452,  0.0011,  0.1133,  0.2886,  0.1447,  0.3125,  0.1372,
         0.1031,  0.1654,  0.0326,  0.2041, -0.0697,  0.1067,  0.0741,  0.0773,
         0.4072,  0.1627,  0.2798,  0.3748, -0.0203,  0.4369,  0.2915,  0.1632],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,045 - myNeural - INFO - Forward Pass: tensor([ 0.1144, -0.1604, -0.0446,  ..., -0.2641, -0.2113,  0.0863])
2021-05-25 09:09:58,061 - myNeural - INFO - Forward Pass: tensor([ 2.6549e-01,  1.8645e-01,  9.2893e-02,  1.0066e-01,  2.1511e-01,
         1.9325e-01,  4.9123e-02,  4.1686e-01,  2.0214e-01, -1.7434e-01,
         1.2862e-01, -4.4144e-02,  1.7281e-01,  1.3774e-01,  1.2189e-01,
         5.6368e-02, -1.7202e-02, -4.4065e-05, -2.6458e-02, -3.0584e-01,
        -4.5199e-03,  1.5648e-01,  3.5152e-02,  2.8516e-01,  2.8389e-01,
        -2.4016e-01, -2.1899e-01, -2.6496e-01, -9.4701e-02, -1.1668e-01,
         2.2010e-01,  4.3776e-02,  1.4957e-01,  1.2410e-01, -6.5183e-04,
         3.5867e-01,  3.5525e-02,  6.9763e-02,  8.5931e-02, -1.6519e-01,
         3.1817e-01,  2.5008e-01,  4.2242e-02, -1.5091e-01,  1.2428e-01,
        -1.1371e-01,  2.2736e-01, -6.7884e-02, -4.0559e-01,  8.2433e-02,
        -6.9274e-02,  1.8647e-01,  8.5777e-02, -8.1531e-02,  1.6425e-01,
        -4.9287e-03, -9.9826e-02,  2.0559e-01,  2.4967e-01,  1.1087e-01,
         3.4141e-01, -1.1138e-01,  4.0017e-03,  1.8907e-01, -1.3025e-01,
        -2.7333e-01,  2.5638e-01, -1.0232e-01,  1.8620e-01,  2.8599e-01,
         1.1979e-01,  1.2101e-01,  1.5622e-01, -1.4460e-02, -9.1710e-02,
         1.0656e-01,  1.0567e-02,  1.4754e-01, -2.1283e-01,  9.1425e-02,
         4.6206e-02,  2.4885e-01, -1.6889e-01,  9.9476e-02, -3.1407e-01,
        -8.9998e-02, -1.3603e-01,  6.1395e-01, -3.4022e-01,  2.7276e-01,
         1.5935e-01,  1.4685e-01, -1.5102e-01,  5.4988e-02,  1.0420e-02,
        -1.8459e-01,  3.6712e-01,  4.0713e-02, -1.0220e-01,  1.1184e-01,
        -9.3638e-02,  2.0840e-01,  1.1206e-01,  2.4030e-01,  3.9278e-01,
         1.1176e-01,  1.5554e-01,  4.4649e-02, -2.8600e-01, -2.3113e-01,
         1.1785e-01, -1.2368e-01,  1.7973e-02,  3.6818e-01, -4.3562e-03,
        -3.2301e-02,  1.6585e-01,  1.0223e-01,  1.7873e-01,  2.0233e-01,
         2.6201e-01,  1.8575e-01,  4.1588e-01,  1.5797e-01,  2.1643e-01,
        -1.5843e-01,  1.3959e-01,  1.5925e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,075 - myNeural - INFO - Forward Pass: tensor([ 0.0426, -0.2318, -0.0914,  ..., -0.2817, -0.2596,  0.0409])
2021-05-25 09:09:58,092 - myNeural - INFO - Forward Pass: tensor([-1.4678e-01,  4.5818e-01, -3.2336e-01,  3.0675e-01,  1.6690e-02,
         1.0862e-01,  4.3267e-01,  2.6186e-01,  4.3457e-01,  2.4490e-03,
         1.4784e-01,  2.0413e-01,  1.9763e-01,  1.8975e-01, -7.3453e-02,
         2.5517e-01,  3.6375e-02, -7.8069e-03, -2.0118e-01,  1.7467e-01,
        -1.5285e-01,  1.4862e-01,  2.0348e-01,  1.5965e-01, -2.7535e-02,
        -5.7911e-02, -8.7246e-02, -2.3100e-01,  1.6057e-02, -3.1180e-01,
        -2.3878e-01,  3.0235e-01,  3.0971e-02, -1.1380e-01, -6.6606e-02,
        -1.6120e-02,  3.6759e-01,  5.9990e-01,  1.0271e-02,  1.2083e-01,
        -1.7690e-01,  1.3561e-02, -2.0106e-01,  1.8522e-01,  2.9968e-01,
        -8.8978e-02, -3.7730e-01,  3.5339e-01, -6.2450e-02,  2.4170e-02,
        -4.8897e-02, -1.6249e-01,  2.7547e-01, -2.4321e-01,  9.2881e-02,
         1.2908e-01,  6.9850e-02, -3.1952e-01, -4.4545e-02, -2.2946e-01,
         1.2139e-01, -3.9934e-02,  2.9202e-02, -7.8032e-02,  4.4903e-02,
        -1.3732e-01, -8.7319e-02,  2.6016e-01, -6.7004e-02, -1.5518e-01,
        -3.5733e-01,  3.3583e-01,  1.1966e-01, -2.1267e-01,  1.0196e-01,
        -3.7727e-02,  8.3497e-03,  6.8020e-02,  2.0635e-01,  1.7601e-04,
        -1.8469e-02,  7.9968e-03,  2.5621e-01, -2.3624e-01,  2.7494e-01,
        -1.1412e-01,  1.4535e-01, -1.8159e-01, -3.1367e-01, -2.3063e-02,
         7.5319e-03,  1.0266e-01, -2.9349e-01,  2.3733e-01, -1.9437e-01,
         1.8932e-02, -2.9509e-01,  3.3956e-02, -8.2573e-02,  1.6538e-01,
        -2.0930e-01,  1.7917e-01,  3.7980e-02, -2.1806e-01,  1.7586e-01,
        -3.9114e-02, -2.3544e-01,  2.9612e-01, -5.1372e-02,  3.2137e-01,
        -4.9146e-03, -1.9126e-01, -6.1960e-02, -1.3958e-01,  3.7656e-01,
         2.9251e-01,  3.1531e-01,  1.6779e-01,  2.5185e-01, -1.6903e-01,
         5.8149e-02, -3.6034e-02,  3.2070e-01,  1.0755e-01, -4.8178e-02,
         1.8197e-01, -1.3829e-01,  3.0160e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,106 - myNeural - INFO - Forward Pass: tensor([-0.0133, -0.3131, -0.1572,  ..., -0.3714, -0.3182,  0.0106])
2021-05-25 09:09:58,122 - myNeural - INFO - Forward Pass: tensor([ 0.2067, -0.0420,  0.1374, -0.1914, -0.0881,  0.0274, -0.2039,  0.0138,
        -0.1512,  0.1566, -0.2268,  0.3798,  0.4397,  0.2233, -0.2005, -0.2008,
         0.0569, -0.1430, -0.3844,  0.0819, -0.1565, -0.0559, -0.0247, -0.3656,
        -0.1122, -0.1376,  0.1205, -0.5600, -0.2866, -0.2055, -0.4168, -0.0799,
         0.4602,  0.0043, -0.0599, -0.0681, -0.3127, -0.1298, -0.2413,  0.3269,
         0.1144, -0.0485, -0.1204,  0.0154,  0.2104,  0.0147,  0.2544,  0.4439,
         0.2668,  0.0947, -0.1357, -0.1842, -0.0471, -0.2269, -0.3673, -0.2447,
         0.2393, -0.1877, -0.0862, -0.1444,  0.2069, -0.1737,  0.0127, -0.2641,
         0.1622,  0.2351, -0.0885,  0.0756,  0.3193, -0.1526,  0.0644, -0.0058,
         0.1921, -0.1679, -0.0143,  0.1583,  0.0037, -0.0080,  0.1766, -0.2408,
         0.1869,  0.2867,  0.0062,  0.4848,  0.1157, -0.0968, -0.4647,  0.1885,
        -0.0614, -0.2305,  0.0961, -0.1591,  0.0147, -0.3061, -0.0198, -0.0731,
         0.0027, -0.0235, -0.0704, -0.3441, -0.2368,  0.1652, -0.0772,  0.0276,
        -0.2805, -0.3127, -0.0353, -0.3050, -0.3354,  0.0511, -0.1350, -0.1222,
         0.1559, -0.4174,  0.0508,  0.3934, -0.0817,  0.0038, -0.2383, -0.2209,
         0.2809, -0.1843,  0.1622,  0.0353, -0.1619, -0.2466,  0.0975,  0.0647],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,138 - myNeural - INFO - Forward Pass: tensor([-0.2484, -0.4677, -0.3531,  ..., -0.5425, -0.5011, -0.1152])
2021-05-25 09:09:58,153 - myNeural - INFO - Forward Pass: tensor([-0.3275, -0.1744, -0.0606, -0.4805,  0.1887, -0.3239, -0.1276, -0.4017,
        -0.1463,  0.1024, -0.3645, -0.3270, -0.5196, -0.3195, -0.2388,  0.0266,
        -0.4585, -0.0027, -0.1222, -0.3789,  0.2031, -0.1221, -0.3869, -0.4148,
         0.2540, -0.4200, -0.3856, -0.0479, -0.1794, -0.2992,  0.1316, -0.3120,
         0.0017, -0.3358, -0.1006, -0.3163, -0.1811, -0.5823, -0.1769, -0.3342,
        -0.2131, -0.1147, -0.3412,  0.0463, -0.3682,  0.0181, -0.4427,  0.1523,
         0.2900, -0.2244, -0.2800, -0.3044, -0.3200, -0.0408, -0.0930,  0.0639,
         0.1581,  0.0888, -0.5606, -0.3228, -0.3184,  0.3214, -0.2094, -0.3863,
        -0.5218, -0.2928,  0.1816, -0.0032, -0.5480,  0.1680, -0.1550, -0.2486,
        -1.0096, -0.2044, -0.5552, -0.2703,  0.0228, -0.3360,  0.1059, -0.1789,
         0.0866, -0.1333,  0.0328, -0.4461, -0.3542,  0.0184, -0.3701, -0.3961,
        -0.3566, -0.3389, -0.2774,  0.1748, -0.2001, -0.4462, -0.0939, -0.5714,
         0.2645, -0.0658, -0.0452, -0.0717, -0.1924, -0.0790, -0.2511, -0.0840,
        -0.4598, -0.5987, -0.5943, -0.6152, -0.3256, -0.4233,  0.0563,  0.1056,
        -0.0958, -0.0208, -0.3353, -0.2427, -0.3588, -0.1402, -0.3080,  0.1193,
        -0.2509, -0.3173,  0.1345, -0.1685,  0.0369,  0.0532, -0.2952, -0.1703],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,168 - myNeural - INFO - Forward Pass: tensor([-0.0696, -0.3336, -0.1599,  ..., -0.3450, -0.3293,  0.0335])
2021-05-25 09:09:58,182 - myNeural - INFO - Forward Pass: tensor([-2.4792e-01, -2.4285e-01,  7.2019e-03,  4.9413e-04, -3.1260e-01,
         1.7406e-01, -4.7198e-02, -4.3042e-02,  4.0486e-02,  8.4447e-02,
         2.9982e-01, -1.5594e-01,  2.6574e-01,  4.4155e-01, -2.7753e-01,
        -1.5306e-02, -7.2186e-02,  3.4374e-02, -2.7446e-01, -4.7839e-01,
        -1.9090e-01, -4.8361e-01, -3.5954e-01,  7.1887e-02, -1.9180e-02,
         9.5317e-02, -2.5286e-01,  1.4882e-01, -5.6356e-02,  2.7042e-01,
        -9.7852e-02, -1.6163e-01,  1.9487e-01, -1.8940e-01, -1.3423e-01,
        -1.3646e-01, -3.8079e-01, -6.0719e-02,  7.1636e-02,  2.2815e-02,
        -1.4820e-02, -1.1780e-01, -3.0794e-02,  2.3829e-01, -1.4825e-01,
        -1.8424e-01,  1.9250e-01,  1.1128e-01, -1.6848e-02, -2.7539e-01,
        -2.8763e-01,  8.2405e-02, -3.6756e-01,  1.1618e-01, -6.1157e-02,
        -7.1469e-02,  3.3776e-02, -2.4886e-01,  5.6067e-01,  1.1839e-01,
        -2.7456e-01,  1.3725e-01, -1.0440e-01,  1.3491e-02, -2.8631e-01,
         2.3372e-01,  5.8746e-02,  3.3633e-01,  1.8073e-01, -2.9367e-02,
         8.0508e-03, -3.9987e-01, -2.1832e-01, -2.6977e-01,  1.2118e-01,
         7.7432e-02, -7.9610e-02,  6.5677e-02,  2.5155e-01,  5.1494e-02,
        -1.2140e-01, -4.5668e-01,  3.9452e-02, -1.2595e-01,  3.8989e-02,
         1.6029e-01,  5.2770e-02,  2.8180e-01, -3.5461e-02, -2.0990e-01,
         1.8272e-01,  1.6238e-01,  7.5663e-05, -7.6213e-02, -1.4073e-01,
        -2.0852e-01,  1.6204e-01, -1.4842e-01,  2.4498e-01,  3.3089e-01,
         5.6844e-02,  3.1437e-01,  1.7536e-01, -9.1782e-02,  1.6308e-01,
         2.7790e-01,  3.3901e-01, -1.7130e-01, -1.1684e-01,  1.9006e-01,
        -1.3707e-01, -4.6483e-01,  2.8832e-01, -2.6577e-01, -3.1128e-02,
        -1.1482e-01,  1.3981e-01,  2.3445e-01,  2.1563e-02, -1.1665e-01,
        -1.2354e-01,  1.9495e-01,  3.9547e-01, -1.1729e-01, -4.0986e-01,
         3.2227e-02, -4.1160e-01, -1.7831e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,196 - myNeural - INFO - Forward Pass: tensor([-0.1034, -0.3643, -0.1803,  ..., -0.3752, -0.3556,  0.0297])
2021-05-25 09:09:58,213 - myNeural - INFO - Forward Pass: tensor([-1.5624e-01, -3.0781e-01, -2.3553e-01, -4.2485e-01, -3.2027e-01,
        -1.0011e-01, -6.7980e-02, -1.2747e-02, -3.4654e-01, -1.6877e-01,
         2.3117e-02, -2.2304e-01, -7.8319e-02, -3.0349e-02, -9.4123e-02,
         3.2324e-02,  3.5653e-02,  9.0921e-02, -1.7081e-01, -7.7310e-02,
         1.3046e-01, -2.2535e-01,  5.6080e-01, -2.8950e-02,  2.8698e-01,
        -3.8803e-04,  2.8949e-01,  4.1208e-01, -4.3275e-02, -1.6190e-01,
        -2.9777e-02, -3.3455e-01, -1.6179e-01, -1.1387e-01, -8.3312e-02,
        -5.3497e-01, -5.5222e-01,  4.2962e-02,  1.7345e-01, -6.2471e-02,
        -6.4565e-01,  2.6933e-01, -3.4752e-02,  4.7055e-02,  1.0068e-01,
         9.3296e-02,  4.9024e-02,  2.7749e-02,  1.3139e-01, -1.5385e-01,
        -2.7371e-01,  5.9032e-01,  1.9126e-01,  3.4402e-01,  2.0535e-01,
         2.6113e-01, -9.7984e-02,  7.7797e-02,  1.1112e-01,  1.0058e-01,
         1.3688e-01,  2.6387e-01,  3.9892e-01, -1.8679e-02, -7.9869e-02,
        -1.1464e-01,  1.7877e-01, -2.7472e-01, -1.8271e-01, -1.9554e-01,
        -4.6492e-02, -3.2206e-02, -3.7898e-01, -4.8281e-01,  4.1018e-02,
        -4.0322e-01, -4.6896e-01,  1.6074e-01, -1.4440e-01,  2.4094e-01,
        -5.7338e-02, -1.7655e-01, -4.0691e-01,  6.3043e-02,  3.0472e-01,
         1.2861e-01,  9.1875e-02, -2.2379e-01, -5.3000e-02,  5.9851e-02,
        -2.6790e-01, -1.9454e-01, -2.4355e-01,  3.6555e-01,  8.9864e-02,
        -1.1326e-01, -6.8704e-02, -1.8323e-01, -4.5762e-01, -4.0353e-01,
        -2.8660e-01,  1.2865e-01,  3.0952e-01,  8.1182e-03, -1.5508e-01,
         1.2239e-01, -1.2210e-01, -3.4533e-01, -2.0760e-01, -5.0233e-02,
        -2.3315e-01,  1.9249e-01, -9.6093e-02,  2.2858e-01, -6.2239e-02,
        -2.1002e-01, -5.0145e-02, -2.8412e-01, -1.9222e-01, -1.9542e-01,
         2.4124e-01, -1.6357e-02, -2.4295e-01, -3.1443e-01,  2.4779e-02,
        -6.8743e-02,  2.8355e-01, -8.2347e-02], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,227 - myNeural - INFO - Forward Pass: tensor([-0.2062, -0.4518, -0.2802,  ..., -0.5076, -0.4690, -0.0302])
2021-05-25 09:09:58,243 - myNeural - INFO - Forward Pass: tensor([-7.6153e-04,  1.3245e-01, -2.9043e-01,  1.6005e-01,  4.5106e-01,
        -1.8283e-01, -2.6147e-01, -1.9822e-01, -4.6624e-01, -3.6190e-02,
        -5.9929e-01, -2.6314e-01,  7.0891e-03, -7.2511e-02, -1.7297e-01,
        -1.6461e-01, -2.2638e-01,  4.0355e-01, -2.2490e-01,  1.5736e-02,
        -4.2700e-01, -1.0883e-01, -3.5875e-01, -5.6691e-02,  1.6934e-01,
        -3.6712e-01,  3.1115e-01, -3.1681e-01, -3.0668e-01,  4.2964e-01,
         3.9372e-01, -3.5207e-02, -3.3587e-01, -2.7266e-01,  3.1682e-02,
        -4.0117e-02, -3.4672e-01, -4.2382e-01, -3.1187e-02, -2.1643e-01,
        -5.5254e-02, -5.2740e-01, -1.5461e-01, -7.0952e-02, -1.6111e-01,
        -2.4750e-01, -3.0433e-01, -2.2256e-01, -2.9898e-01, -5.9572e-02,
         3.3264e-02, -3.7953e-01, -4.3330e-02, -1.2048e-01, -2.7023e-01,
        -1.7602e-01,  9.6213e-02, -4.8369e-02,  2.4270e-01,  4.3954e-01,
        -9.9931e-02,  2.5743e-01, -4.0071e-02, -1.7826e-01, -6.6981e-02,
        -2.3930e-01, -2.8146e-01, -1.2865e-01,  5.9043e-03, -3.4792e-01,
        -6.7307e-01, -1.2259e-01, -1.2268e-01, -9.9223e-02,  3.3919e-02,
        -7.9555e-01, -1.9647e-01,  9.3200e-02,  8.1701e-02, -4.7181e-01,
        -6.6984e-02, -7.6656e-03,  1.1604e-01, -1.3701e-01, -4.0750e-01,
        -3.8846e-02, -4.9399e-01, -2.8413e-02, -4.6202e-01, -2.4455e-02,
        -4.1545e-01, -6.9978e-02,  2.2252e-01, -1.4965e-01, -6.0184e-01,
        -3.1533e-01, -8.6917e-02, -3.2596e-02,  1.1253e-01,  2.6465e-01,
        -6.6400e-02, -7.3720e-01, -3.5947e-01,  6.1597e-02, -1.6395e-01,
         2.9535e-01, -3.3423e-01, -7.9579e-02, -1.0713e-01, -3.2234e-01,
        -3.9911e-01,  1.1964e-01, -5.1087e-01, -4.8974e-01, -2.3523e-01,
        -2.9720e-01, -1.9542e-01, -2.6130e-01, -6.2352e-02, -3.7566e-01,
         5.2971e-02,  1.6602e-01, -5.6213e-01, -5.0122e-01, -5.2199e-01,
         7.4184e-02,  8.0439e-02,  3.1837e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,259 - myNeural - INFO - Forward Pass: tensor([-0.2383, -0.4833, -0.3031,  ..., -0.5494, -0.5057, -0.0027])
2021-05-25 09:09:58,275 - myNeural - INFO - Forward Pass: tensor([ 0.1663, -0.1881, -0.4485,  0.1153, -0.1843, -0.1293,  0.0595, -0.3935,
        -0.0693,  0.1248,  0.1907, -0.0133, -0.0159, -0.3039, -0.3026,  0.2339,
         0.0706, -0.3419, -0.5722, -0.3870,  0.0259, -0.1657,  0.2833, -0.3997,
         0.1486, -0.4831,  0.0098, -0.2690,  0.0905, -0.2860, -0.0689, -0.2851,
        -0.2297, -0.3265, -0.1532, -0.8048,  0.3807, -0.3066,  0.0319,  0.0388,
         0.0423, -0.3670,  0.0494, -0.5479, -0.0808, -0.6640,  0.1695,  0.0251,
         0.0231, -0.2598,  0.0891,  0.1640, -0.2762, -0.2164, -0.0885,  0.1410,
        -0.4704,  0.2120,  0.2618,  0.1633,  0.0700, -0.2351, -0.1358, -0.1349,
        -0.2281,  0.1028, -0.7804,  0.2158, -0.6904, -0.2370,  0.5477, -0.3353,
        -0.5000,  0.2394, -0.3273,  0.0060, -0.3398, -0.1904,  0.1361, -0.2470,
        -0.6159,  0.0133, -0.5151, -0.5320, -0.0205, -0.3527, -0.0657, -0.1651,
        -0.0937,  0.0254, -0.0230,  0.1427, -0.1239, -0.5862,  0.2536, -0.2149,
        -0.3265,  0.0621, -0.3283, -0.4386, -0.5713,  0.0586,  0.1500,  0.0458,
         0.1384,  0.1816, -0.0530, -0.5676, -0.2121, -0.4701, -0.0514,  0.0406,
        -0.4610, -0.2987, -0.4441, -0.5028, -0.5179, -0.4055, -0.2206,  0.3714,
        -0.5647, -0.0511, -0.0592, -0.0899,  0.0742, -0.2237, -0.1443,  0.4946],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,290 - myNeural - INFO - Forward Pass: tensor([-0.0501, -0.3632, -0.1498,  ..., -0.3564, -0.3259,  0.1521])
2021-05-25 09:09:58,305 - myNeural - INFO - Forward Pass: tensor([-0.0192, -0.3542,  0.0856, -0.5332,  0.4935, -0.6030,  0.3123,  0.0039,
         0.0120, -0.0805,  0.1205, -0.3677, -0.1960, -0.5080,  0.0465,  0.1054,
        -0.0453, -0.4584,  0.1936, -0.8295, -0.0906,  0.2804,  0.0115,  0.2543,
        -0.3107,  0.4415, -0.1481,  0.3727, -0.2706,  0.0453,  0.2538,  0.2329,
        -0.1773,  0.2729,  0.0873,  0.0192,  0.2827,  0.1420,  0.4149,  0.2004,
        -0.0086,  0.2310, -0.0782,  0.2554, -0.4472, -0.0150, -0.0225, -0.1402,
         0.2664, -0.2775,  0.2968,  0.1452, -0.0777,  0.1131,  0.0394, -0.1895,
        -0.1638,  0.1122,  0.4110,  0.0610,  0.3389,  0.2475, -0.3800, -0.0120,
         0.0604,  0.0138,  0.0092, -0.3496,  0.0317,  0.2464, -0.1568, -0.4838,
        -0.0828, -0.0911,  0.2194, -0.3619,  0.0584,  0.1408,  0.3456,  0.1748,
         0.4180, -0.1110, -0.0950, -0.1026,  0.5291,  0.0173,  0.3367, -0.2410,
        -0.2672,  0.3308,  0.2062, -0.1730, -0.1720,  0.0890, -0.0562,  0.3606,
         0.4280,  0.1967, -0.2854,  0.0018, -0.2708,  0.2219, -0.1022, -0.1035,
        -0.1639,  0.6346,  0.1830, -0.4381,  0.1466,  0.2100,  0.2153, -0.4868,
         0.0894,  0.2911,  0.1135, -0.2382,  0.4902,  0.2490, -0.1508,  0.6572,
         0.2404,  0.1266,  0.6388,  0.0853,  0.0958,  0.0733, -0.2481,  0.1854],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,320 - myNeural - INFO - Forward Pass: tensor([-0.0631, -0.3980, -0.1782,  ..., -0.3519, -0.3381,  0.1566])
2021-05-25 09:09:58,334 - myNeural - INFO - Forward Pass: tensor([-0.1138, -0.1617, -0.3319, -0.3515,  0.6214,  0.0439,  0.3260, -0.0355,
        -0.1709,  0.9049,  0.1922, -0.3177,  0.1785,  0.2668, -0.2706,  0.1465,
        -0.0238, -0.0578,  0.4100, -0.1786,  0.0525, -0.0762,  0.3331, -0.2990,
        -0.2497,  0.1044, -0.5677,  0.4271, -0.1538, -0.0929, -0.0155, -0.1256,
         0.2099,  0.4609, -0.2812, -0.1139,  0.1029,  0.3253, -0.2954, -0.3252,
        -0.3028,  0.4926,  0.3023,  0.2047, -0.4710,  0.2206, -0.0639, -0.6132,
         0.0897,  0.0403,  0.3862, -0.0951, -0.1303,  0.0327, -0.2524,  0.2550,
         0.3738, -0.6015, -0.0940,  0.2320,  0.6117, -0.0406,  0.5297,  0.2592,
        -0.4862, -0.2641,  0.1010,  0.2503, -0.2127,  0.2787,  0.0676, -0.0919,
         0.1844,  0.1071,  0.0526, -0.4528,  0.2674, -0.1965,  0.1402, -0.2183,
        -0.5288,  0.2807,  0.0660,  0.1891,  0.0067, -0.0811, -0.2518,  0.1022,
        -0.2259, -0.2451,  0.1696,  0.0954,  0.0776, -0.0799,  0.3131, -0.4640,
        -0.3361,  0.1170, -0.3712, -0.1322, -0.2546, -0.0785, -0.0485, -0.1937,
         0.0729,  0.2893,  0.2020, -0.1892,  0.0132,  0.0678, -0.0848, -0.4053,
         0.0814, -0.1714,  0.0400,  0.2037,  0.2594,  0.2382, -0.0221, -0.0864,
        -0.1514,  0.1829,  0.0257,  0.2970,  0.3849,  0.1343, -0.4147,  0.3538],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,348 - myNeural - INFO - Forward Pass: tensor([-0.1811, -0.5038, -0.2444,  ..., -0.4534, -0.3945,  0.1268])
2021-05-25 09:09:58,360 - myNeural - INFO - Batch 20 -- TrainLoss: 0.62767 -- TrainAcc: 71.87500% -- TestAcc: 71.10000%
2021-05-25 09:09:58,365 - myNeural - INFO - Forward Pass: tensor([-0.5400,  0.1874, -0.2580, -0.3767,  0.6812, -0.3163,  0.2518, -0.1693,
        -0.0963,  0.0217,  0.2415, -0.2708, -0.3041,  0.1252, -0.2634, -0.0587,
        -0.2615, -0.0070, -0.3711, -0.0289,  0.2274, -0.0846, -0.2198, -0.5647,
         0.0551, -0.0410, -0.0086, -0.1090, -0.4032, -0.0350, -0.0336, -0.5581,
        -0.5249,  0.2116, -0.0746, -0.1397,  0.1908,  0.1191, -0.0251,  0.1563,
        -0.0299,  0.0849, -0.5334, -0.2952,  0.6201,  0.5326, -0.1190,  0.1237,
        -0.2173, -0.3422, -0.7192,  0.4889,  0.3286, -0.0915,  0.4081,  0.0857,
        -0.2490, -0.5600, -0.1151,  0.6328,  0.2667, -0.0287,  0.3067,  0.1758,
        -0.2907, -0.2431, -0.2666,  0.1544, -0.1466, -0.2506, -0.4198, -0.1246,
         0.5590, -0.8013,  0.0032, -0.4849, -0.4782,  0.3298, -0.1827,  0.2892,
        -0.2044, -0.0415, -0.2699, -0.0595, -0.7432, -0.3934,  0.5460, -0.0044,
         0.6294, -0.1892,  0.2951, -0.0541,  0.2977, -0.4462,  0.1207, -0.2949,
        -0.1928, -0.2914,  0.3454, -0.0672,  0.5506,  0.6190,  0.0565,  0.1367,
        -0.2421,  0.0659, -0.5378,  0.3616,  0.0622, -0.3502,  0.0248, -0.1130,
        -0.2282, -0.0901, -0.3448, -0.0481, -0.1707,  0.1196,  0.4392, -0.2026,
         0.4534,  0.1160,  0.2238, -0.0528, -0.5652,  0.5295,  0.2186, -0.2343],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,379 - myNeural - INFO - Forward Pass: tensor([ 0.0474, -0.3725, -0.0019,  ..., -0.2264, -0.1998,  0.2885])
2021-05-25 09:09:58,396 - myNeural - INFO - Forward Pass: tensor([ 0.1182,  0.2839, -0.2791, -0.1725,  0.2878,  0.4018, -0.2818,  0.4506,
         0.2519,  0.4674, -0.2295, -0.2313, -0.1016, -0.0108,  0.1116,  0.0276,
        -0.0685,  0.0317,  0.5485,  0.3157, -0.2856,  0.2768,  0.2641, -0.0880,
         0.0202,  0.2192, -0.5294, -0.3599, -0.3279,  0.0420,  0.5080,  0.1580,
        -0.5341,  0.4141,  0.2374,  0.7061,  0.6763,  0.1676,  0.3819,  0.0701,
         0.3328,  0.0202,  0.7120, -0.1742, -0.2475,  0.5850,  0.0448,  0.1462,
         0.8707, -0.0733,  0.0522,  0.3894,  0.6862,  0.2852, -0.5301, -0.2605,
         0.6155, -0.2891,  0.0598,  0.4325,  0.0992, -0.3616,  0.3332,  0.0354,
         0.0158, -0.2097,  0.2531,  0.3079, -0.0397,  0.3842, -0.2144, -0.5848,
         0.2015,  0.2667,  0.4233, -0.0218,  0.1026, -0.1528,  0.5704, -0.3891,
        -0.0553,  0.2354,  0.3057, -0.0928,  0.1371,  0.5862,  0.4675, -0.0605,
         0.6803,  0.1246, -0.1908, -0.5286,  0.3457,  0.0991, -0.1629, -0.0441,
         0.0951,  0.4265, -0.1563,  0.0698, -0.3699,  0.4368,  0.1501,  0.0793,
         0.4339,  0.5621,  0.5404,  0.7401,  0.2305, -0.2970,  0.2028, -0.2766,
        -0.3499,  0.1052, -0.4348, -0.3760,  0.3773,  0.3103, -0.2201, -0.2425,
         0.0938, -0.0788,  0.6259, -0.3504, -0.1936,  0.0210,  0.1331,  0.3894],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,411 - myNeural - INFO - Forward Pass: tensor([ 0.0583, -0.3995, -0.0205,  ..., -0.1926, -0.2371,  0.2858])
2021-05-25 09:09:58,426 - myNeural - INFO - Forward Pass: tensor([-0.8192, -0.0593,  0.0123,  0.4577, -0.0730,  0.0428, -0.0616,  0.2906,
         0.3242, -0.1431,  0.2402,  0.4661,  0.2051,  0.4122, -0.1232, -0.0371,
         0.0320, -0.1344,  0.2669,  0.2346, -0.0143, -0.1932, -0.4034,  0.6655,
         0.2337,  0.4569,  0.4016, -0.2629,  0.5508,  0.0240,  0.1047,  0.2346,
        -0.2016, -0.4107,  0.4749,  0.5336, -0.2113, -0.1350,  0.6755,  0.2884,
         0.1507, -0.0100, -0.0126,  0.3221,  0.3383,  0.1066, -0.3027,  0.2487,
         0.3528, -0.1367,  0.8687,  0.5063, -0.2278,  0.0629,  0.1625,  0.5041,
         0.7722,  0.3816,  0.3733,  0.6637,  0.3482, -0.1394, -0.2108,  0.1663,
        -0.0207, -0.1505, -0.3545,  0.3439, -0.8137,  0.6573, -0.0529,  0.1588,
         0.3229,  0.2125, -0.1267,  0.6516,  0.2210,  0.1211,  0.2354,  0.1664,
        -0.0192,  0.7425,  0.6413,  0.4703,  0.4727,  0.7691, -0.5082,  0.6018,
         0.3310,  0.2744,  0.0358,  0.7262,  0.2561,  0.8299, -0.2422,  0.6729,
         0.5915,  0.1826,  0.1442,  0.0529, -0.3406,  0.0045, -0.2368, -0.6481,
         0.1199,  0.1771,  0.5832,  0.1235, -0.6086,  0.2092, -0.2583,  0.5336,
        -0.4358, -0.1393,  0.2180,  0.4083, -0.0448,  0.2971, -0.0358,  0.1914,
         0.5013,  0.0044, -0.3350,  0.0602,  0.6030,  0.1594, -0.1939,  0.5621],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,441 - myNeural - INFO - Forward Pass: tensor([-0.0448, -0.4936, -0.0995,  ..., -0.2932, -0.3329,  0.2409])
2021-05-25 09:09:58,457 - myNeural - INFO - Forward Pass: tensor([ 0.5463,  0.2411, -0.0839, -0.1833, -0.6279, -0.6059, -0.0025,  0.7997,
         0.6002,  0.3362,  0.1436,  0.0647, -0.2033,  0.3276,  0.2217,  0.6042,
         0.3331, -0.3609, -0.4340,  0.1207,  0.0435, -0.4529, -0.2530, -0.4096,
         0.2221,  0.5577,  0.4588,  0.3459,  0.3568,  0.5889,  0.0331,  0.2906,
         0.4128,  0.3185, -0.1900,  0.7662, -0.3967,  0.2060,  0.4974,  0.5507,
        -0.3021,  0.2717, -0.5443, -0.2111, -0.0470,  0.1518,  0.3411,  0.6087,
        -0.3785,  0.7529,  0.1539,  0.2341,  0.4584,  0.0295, -0.1760,  0.0686,
         0.6335, -0.0884, -0.0329,  0.1181,  0.3543, -0.2412,  0.9238,  0.7409,
         0.7497, -0.2953, -0.4421, -0.7486, -0.0424,  0.1102, -0.3423,  0.5871,
        -0.1897, -0.1637,  0.4363,  0.6402,  0.1405,  0.6897, -0.2436,  0.5033,
         0.9093,  0.0934,  0.1702,  0.2612,  1.0189, -0.2644,  0.1480,  0.1480,
         0.5997,  0.1445,  0.2141,  0.0612, -0.0117,  0.1061, -0.2843, -0.1043,
         0.1132,  0.5413,  0.0542,  0.7077, -0.1443, -0.0328, -0.2695, -0.3917,
         0.6724, -0.3887,  0.4338,  0.3629,  0.7334,  0.5915, -0.1211,  0.1255,
         0.0263, -0.3830, -0.1733, -0.2417, -0.1833, -0.1311, -0.0877, -0.4963,
        -0.0589,  0.0770, -0.2992,  0.4929, -0.4037,  0.7234,  0.0468,  0.2557],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,472 - myNeural - INFO - Forward Pass: tensor([-0.2640, -0.6813, -0.2859,  ..., -0.5210, -0.5518,  0.0979])
2021-05-25 09:09:58,489 - myNeural - INFO - Forward Pass: tensor([-0.4127, -0.8528, -0.5196, -0.7009, -0.0755, -0.2458, -0.0751, -0.1519,
         0.3378, -0.1708, -0.1349,  0.1929,  0.0377, -0.4472, -0.4349,  0.6780,
        -0.5060, -0.6326, -0.2088, -0.2077,  0.0064,  0.2883,  0.0794, -0.5240,
         0.1821, -0.0256, -0.4349, -0.9397, -0.3327, -0.3830, -0.0111, -0.0016,
        -0.3060,  0.4603,  0.8972, -0.6492, -0.3542, -0.3892, -0.0968, -0.3071,
        -0.2906, -0.5961,  0.4004, -0.0849, -1.1383,  0.7500, -0.1736,  0.3896,
         0.1969, -0.2979, -0.4194,  0.4007, -0.0912,  0.1755, -0.2935, -0.6236,
        -0.2589, -0.6869,  0.1747,  0.2109, -0.0760, -0.5742, -0.2451,  0.2022,
         0.3458, -0.3987, -0.5047, -0.3926,  0.5645,  0.4508, -0.0813,  0.0228,
        -0.1955, -0.4227,  0.4882,  0.1875,  0.2123,  0.3018,  0.3088, -0.3558,
        -0.5206, -0.0519, -0.0899,  0.0073, -0.4232, -0.8623, -0.0287,  0.2596,
        -0.4280, -0.2846, -0.0137, -0.2135, -0.3122,  0.2188,  0.0138, -0.2302,
        -0.0365, -1.0522,  0.0600, -0.7351,  0.2735, -0.5881, -0.4500, -0.2654,
        -0.0370,  0.2681, -0.5416, -0.2643,  0.1518, -0.1987, -0.2905, -1.1607,
         0.1482,  0.0299,  0.1416,  0.2404,  0.7802,  0.3493, -0.3666, -0.2536,
         0.1463,  0.0326,  0.1171, -0.0158, -0.1617, -0.3125,  0.3526, -0.2946],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,506 - myNeural - INFO - Forward Pass: tensor([-0.3330, -0.7505, -0.3258,  ..., -0.5811, -0.5838,  0.0852])
2021-05-25 09:09:58,523 - myNeural - INFO - Forward Pass: tensor([-4.4515e-01, -8.0924e-01, -6.6848e-01,  1.8365e-01,  2.7710e-01,
        -1.3368e-01, -3.2273e-01,  4.5317e-01, -6.9543e-01, -6.8150e-01,
         4.8160e-01, -1.1711e-01, -5.4080e-01, -1.6399e-01, -2.4483e-01,
         3.7963e-01,  3.3830e-01, -4.6957e-01, -2.2301e-01, -3.0708e-01,
         1.1508e-01,  1.2966e-01, -2.8427e-01,  2.2040e-01,  5.1314e-01,
        -3.0824e-04, -3.3487e-01,  5.3735e-01,  1.6496e-01, -3.4304e-01,
         6.1578e-01, -2.0780e-01,  8.2095e-02, -2.4528e-01, -3.8548e-01,
         1.0066e-01, -1.8041e-01,  1.4370e-01, -5.7408e-01, -2.0390e-01,
        -5.5084e-01,  1.5290e-01,  3.5536e-01, -2.4109e-01,  1.4935e-01,
        -8.2482e-01, -1.3341e-01,  2.2420e-02,  7.5327e-02,  4.2275e-01,
        -4.0802e-01,  6.2723e-02, -7.2099e-01, -1.5104e-01, -3.9596e-02,
         2.6453e-01, -2.8182e-01,  4.6057e-01, -4.9374e-01, -6.5971e-01,
        -1.8097e-01, -1.1917e-01, -3.2945e-01, -4.7210e-01, -5.2773e-01,
         2.6860e-01, -2.1585e-01, -3.5944e-01, -1.4995e-01,  2.5771e-01,
        -5.9706e-01, -3.9441e-01,  2.6828e-01, -2.6240e-01,  2.1619e-01,
        -1.1303e-01, -2.5664e-01, -4.8022e-02, -6.6043e-01, -3.0817e-01,
        -5.8254e-02, -1.6298e-01, -2.7987e-01, -1.3035e-01, -1.0205e-01,
        -5.6708e-01, -5.7905e-01,  1.0345e-01, -1.0498e+00, -2.2208e-01,
        -2.0341e-01, -2.1242e-01, -8.7387e-02, -5.2551e-01,  1.3844e-01,
        -1.3613e-01, -3.6245e-02, -8.5135e-01, -2.2602e-01, -4.4049e-01,
         2.9632e-01, -6.4252e-01, -1.1737e-01, -6.5335e-01,  6.0366e-01,
        -4.9827e-01, -6.6533e-01, -3.2677e-01, -9.3880e-01,  4.0194e-01,
        -3.5154e-01, -2.5049e-01, -5.2975e-01, -5.3493e-01, -2.4524e-01,
        -5.4907e-01, -1.3068e-01, -5.6560e-01, -8.1105e-01, -1.1565e-01,
         5.6827e-01,  6.1596e-01, -1.2594e-01, -3.8861e-01, -7.6874e-01,
        -3.5125e-01,  3.2249e-01, -1.1076e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,539 - myNeural - INFO - Forward Pass: tensor([-0.1438, -0.6317, -0.1888,  ..., -0.3637, -0.3986,  0.2318])
2021-05-25 09:09:58,557 - myNeural - INFO - Forward Pass: tensor([-4.8692e-01,  2.1224e-01, -2.7411e-01, -2.8332e-01, -2.4759e-01,
         2.2597e-01, -4.2008e-02,  5.9539e-02, -7.4253e-02,  5.3248e-02,
         3.0901e-02,  1.0063e-01,  2.2441e-02, -2.4277e-01, -6.0357e-04,
        -2.5665e-01, -2.7433e-04,  4.0008e-01, -3.1895e-01, -2.7060e-02,
        -1.6142e-01, -2.3794e-01,  5.6193e-02, -3.0263e-01, -3.9471e-01,
         4.7796e-01,  1.1642e-01,  2.9749e-01,  5.6781e-02, -5.7079e-02,
        -1.7282e-01, -1.0033e-01, -4.1938e-01, -3.2383e-01, -6.6470e-01,
        -4.1837e-02,  3.0286e-01, -5.3423e-01,  2.6604e-01,  4.8049e-01,
        -3.4433e-01,  4.1419e-01, -8.3275e-01, -1.0687e-01,  7.5210e-01,
         3.4375e-01,  1.2379e+00, -5.4359e-01,  2.1855e-02, -4.9715e-01,
         6.9782e-01, -7.4294e-01,  1.4899e-01,  5.6206e-01,  4.7937e-01,
        -2.4752e-01,  1.7866e-01,  5.1860e-01, -9.2882e-02, -9.3817e-01,
         7.3132e-01, -4.9163e-01, -8.1826e-01, -1.7492e-01, -7.0053e-02,
        -5.3735e-01,  3.6691e-01, -1.3589e-01,  6.5522e-01,  5.0481e-01,
        -2.0862e-01,  4.3772e-01,  9.8677e-01,  5.3733e-01,  7.5008e-01,
         4.1527e-01,  2.0296e-01,  2.8320e-01,  6.2705e-01, -2.0926e-01,
         7.3102e-01, -1.2929e-01, -4.0567e-01,  7.3767e-01,  1.0101e+00,
        -7.8286e-01, -3.8021e-01, -1.7065e-01,  1.8421e-01, -4.3392e-01,
        -4.0733e-01,  4.7165e-01, -4.0801e-01,  9.4391e-02,  4.5724e-01,
        -2.4229e-01,  6.1733e-02,  8.3155e-01,  1.2548e-01,  5.0500e-01,
         3.0329e-02,  1.7044e-01, -2.8860e-01,  5.2344e-01,  2.4642e-01,
         1.8349e-01,  1.6061e-01, -2.2092e-01, -4.5911e-01, -9.4064e-02,
         1.5603e-01,  7.7613e-02, -9.0889e-01, -4.6483e-01, -5.2437e-02,
         7.6202e-01,  6.4776e-01,  3.0724e-01, -5.4604e-01, -1.7146e-01,
         2.3148e-01,  2.9050e-01,  4.4973e-01,  6.5073e-01, -2.0069e-02,
        -4.0691e-04, -6.0883e-01,  4.9463e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,574 - myNeural - INFO - Forward Pass: tensor([-0.1825, -0.6841, -0.2353,  ..., -0.3165, -0.4497,  0.2576])
2021-05-25 09:09:58,593 - myNeural - INFO - Forward Pass: tensor([ 4.2855e-01, -5.4125e-01, -1.1533e-01, -1.8131e-01,  3.1685e-01,
         4.0022e-01,  4.6158e-01,  4.1408e-01, -1.8832e-02, -2.8352e-01,
         8.8134e-02, -5.0491e-04,  8.5591e-01, -4.0044e-01, -3.6125e-01,
        -3.3840e-01,  1.3944e-01, -5.1870e-01, -6.3817e-02, -1.6720e-01,
        -4.6176e-01, -1.0341e+00,  5.1221e-01, -8.8703e-01,  7.7033e-01,
        -2.3967e-01,  6.6414e-01,  1.6664e-01, -2.0801e-01,  3.9503e-01,
        -1.5756e-01, -1.4833e-01,  1.7733e-01, -3.7670e-02, -1.9467e-01,
        -2.2219e-02,  2.6637e-01,  6.7696e-01, -4.5918e-01, -1.4540e-02,
        -2.1624e-01, -4.9617e-01,  6.0063e-01,  9.0151e-01,  4.0442e-01,
         2.9727e-01, -8.7752e-02,  1.3849e-01,  1.4344e-01, -2.0027e-01,
        -2.6042e-01, -3.6694e-01, -7.6408e-01,  2.2671e-01,  2.0725e-01,
        -1.6115e-01, -4.3957e-01, -7.3995e-01,  7.9220e-01, -4.5449e-02,
        -3.2022e-01, -1.3379e-01, -5.6049e-02,  4.6388e-01, -3.2004e-01,
        -1.1357e+00,  4.8795e-02, -9.9034e-01, -1.8664e-01, -6.9845e-03,
         1.1780e+00,  1.0202e-01, -1.5596e-01,  4.0034e-01, -8.3493e-02,
         2.8141e-01,  4.5328e-01, -3.0679e-01,  2.2114e-02, -5.3699e-01,
         2.2544e-03,  9.1910e-01, -1.1975e-01,  6.2325e-02,  6.2391e-01,
         3.4962e-01,  5.9052e-01, -6.5321e-01,  2.4455e-01,  5.3644e-01,
        -5.7179e-02,  6.9557e-02,  2.4252e-01, -2.1423e-01,  2.8960e-01,
        -2.8795e-01, -8.5896e-02, -4.2597e-01,  3.4118e-01,  6.7350e-01,
         1.2684e-01, -1.6308e-01,  4.8132e-01,  5.3557e-01,  7.2453e-01,
        -1.5122e-01,  4.2732e-01, -3.3142e-01,  5.2321e-02, -2.1651e-01,
         5.6827e-01, -4.0945e-01, -5.0007e-01, -6.8627e-01,  5.1477e-01,
        -1.0023e+00,  6.1432e-01, -4.2322e-01, -1.2646e-01, -6.9661e-01,
         3.4322e-01,  5.0452e-01, -3.6547e-01, -3.3828e-01,  9.0568e-01,
        -5.0934e-01,  1.8233e-01,  6.2904e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,610 - myNeural - INFO - Forward Pass: tensor([-0.2713, -0.7499, -0.3002,  ..., -0.3444, -0.5180,  0.2298])
2021-05-25 09:09:58,627 - myNeural - INFO - Forward Pass: tensor([ 0.0038,  0.2851,  0.2573, -0.3631, -0.4017,  0.0984,  0.6590, -0.3877,
         0.4059,  0.6884,  0.5142, -1.0652,  0.3336,  1.2640, -0.8892,  1.0237,
        -0.3449, -0.0203,  0.2296,  0.5243, -0.3142,  0.1262,  0.1895, -0.3895,
        -0.5212, -0.0086, -0.5165, -0.0642,  0.1344,  0.2995,  1.6088,  0.1189,
         0.7008, -0.7521,  0.6467,  0.1439, -0.0300, -0.3357,  0.3538, -0.4324,
        -0.3404, -0.5395,  0.0580, -0.5361,  0.2132,  0.7603,  0.2167, -0.4948,
         0.2363, -0.1916,  0.5694,  0.2161, -1.0262, -0.2345,  0.2880, -0.7405,
         0.4221,  0.4645, -0.4861, -0.5118,  1.0166,  0.7682,  0.0772, -0.8466,
        -0.3506,  0.0263,  0.2529, -0.2985,  0.0283, -0.7146,  0.3126, -0.1649,
         0.8757,  0.2631,  0.1822, -0.2505, -0.1902, -0.0156,  0.0929, -1.2532,
        -0.0478, -0.1777, -0.0645,  0.1918, -0.4430,  0.3276,  0.0252,  0.4982,
         0.1321, -0.5022, -0.3793,  0.2682, -0.5573,  0.5805, -0.9092, -0.6800,
         0.5915,  0.2047,  1.2694, -0.3832,  0.4758, -0.1462,  0.3321, -0.3864,
        -0.4577, -0.5584, -0.9406,  0.0551,  0.1981, -0.1758,  0.1200, -0.2821,
        -0.1161, -0.2084, -0.0962,  0.8204, -1.1267,  0.0188, -0.7959,  0.6202,
         0.3839, -0.0671,  0.4723,  0.2786, -0.3458, -0.0071, -0.7057, -0.4419],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,643 - myNeural - INFO - Forward Pass: tensor([-0.2099, -0.7456, -0.2856,  ..., -0.3069, -0.5382,  0.2589])
2021-05-25 09:09:58,661 - myNeural - INFO - Forward Pass: tensor([ 4.4962e-01,  5.8887e-02, -5.7731e-01,  3.4649e-01,  2.2420e-01,
        -4.7912e-01,  3.4089e-01,  9.9843e-01, -4.9769e-01,  5.1765e-02,
        -1.0412e-01, -6.6725e-01, -8.5986e-03, -2.5649e-01, -3.6008e-01,
         2.6358e-01,  5.4429e-01, -6.7166e-02, -4.5818e-01, -6.8678e-01,
        -1.8968e-01, -5.4649e-01,  7.5744e-01,  5.0808e-02, -3.0943e-01,
         4.1570e-01, -6.3631e-01,  4.2017e-01,  2.2310e-01,  3.4487e-01,
         2.2884e-02, -4.2952e-01,  1.8820e-01,  1.3345e-01,  2.2430e-01,
        -1.0044e-01,  5.9262e-01,  2.7968e-01, -2.3908e-01, -6.3291e-01,
        -6.0690e-02,  7.1456e-01, -5.9146e-01,  2.7717e-01,  2.9381e-01,
         2.2467e-01,  2.3739e-02,  2.2232e-01,  8.0553e-01,  4.3209e-01,
         6.2564e-02, -4.8342e-01, -6.6981e-01, -2.9171e-01, -4.0646e-01,
        -3.2383e-01, -8.1586e-01,  1.5534e-01,  5.6157e-01,  3.8730e-01,
        -7.1700e-02, -2.6030e-01,  6.6815e-01,  2.9491e-01,  4.3165e-01,
         3.7624e-01, -5.2688e-01,  3.2832e-01, -1.8281e-01,  3.0203e-01,
        -5.4695e-01,  7.9908e-01, -7.8281e-01,  3.6741e-01, -3.8553e-01,
         1.4980e-01,  6.3387e-01,  5.2473e-01, -2.0007e-04, -4.3969e-01,
        -1.2859e-01,  6.5493e-01,  1.6011e-02, -6.2891e-01,  6.2911e-02,
         2.3377e-01, -9.4988e-01, -3.6368e-02,  8.8071e-03, -5.6665e-01,
        -2.5583e-01, -5.6950e-02,  6.5297e-01,  9.1035e-01,  7.1270e-01,
        -5.8708e-01, -9.9597e-01,  7.9959e-01,  3.1424e-01,  9.0580e-02,
         3.9041e-01,  1.0012e-01,  5.1648e-01,  2.3963e-01,  8.6352e-01,
        -1.1870e-02,  2.8438e-01,  2.6787e-01, -5.5086e-01,  2.4267e-01,
        -4.2629e-01, -1.4757e-01, -8.8552e-01,  1.1777e-01,  2.9382e-03,
        -4.8927e-02, -3.6634e-01,  2.2544e-01,  4.7423e-01,  3.7122e-01,
         5.5653e-01, -3.9990e-02,  1.1581e-01,  5.1881e-01, -4.2178e-01,
         7.5654e-01, -9.8556e-01,  1.4108e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,677 - myNeural - INFO - Forward Pass: tensor([-0.3363, -0.8333, -0.3196,  ..., -0.2702, -0.6040,  0.2412])
2021-05-25 09:09:58,696 - myNeural - INFO - Forward Pass: tensor([ 0.2874,  0.9705, -0.1222, -0.7621,  0.0343, -0.8053,  0.0597,  0.6514,
        -0.6324,  0.1445, -0.0536,  0.4908, -0.1769,  0.3164, -0.2992, -0.0874,
         1.2553,  1.1350,  0.4365,  1.5072,  0.0518, -0.2592, -0.0096, -0.2726,
        -0.8985,  0.5947, -0.4012,  0.3762,  1.3990,  0.0542, -0.5665,  0.6793,
        -0.2482, -0.3548, -0.1081, -0.7117, -0.4980,  0.2262, -0.6784, -0.0757,
        -0.5781,  0.0397, -0.7347, -0.2586,  0.3794, -0.2306,  0.4574, -0.7776,
         0.2919,  0.1958,  0.4843, -0.1237, -0.4230,  0.4029, -0.5836,  0.1018,
         0.2139, -0.0947, -0.1545, -0.4445,  0.4540, -0.2641, -0.3735,  0.3148,
         0.7954,  0.3705, -0.8471, -0.0868, -0.1636,  0.2315, -0.4906, -0.1154,
         0.9662, -0.1888,  0.4709, -0.2747,  0.0967,  0.3288, -0.2414, -0.4634,
         0.9937,  0.6921,  0.4047,  0.4865,  0.0842, -0.5932, -0.5895, -0.4700,
        -0.5007, -0.4515, -1.1273,  0.3586, -0.3127, -0.4794,  0.6426,  0.0886,
         1.1498,  0.0731,  0.1568,  0.3505,  0.3703, -0.0018,  0.7335, -0.3352,
         0.2987,  0.1620, -0.0170, -0.7636,  0.1940,  0.0575,  0.2731, -0.4860,
        -0.2429,  0.2150,  0.3884, -0.9109,  0.1817,  0.2269, -0.4191, -0.2187,
        -0.4672,  0.5312,  0.3430, -0.1101,  0.3480,  0.5252, -1.1553,  1.1859],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,714 - myNeural - INFO - Forward Pass: tensor([-0.4322, -0.9431, -0.4012,  ..., -0.4235, -0.7604,  0.1256])
2021-05-25 09:09:58,730 - myNeural - INFO - Forward Pass: tensor([ 0.2882, -0.3602, -0.6647,  0.5066, -0.9394,  0.0355, -0.2322, -0.7666,
        -0.4742, -0.2223,  0.1027, -1.0831, -0.3441,  0.2927, -0.6144, -0.4146,
        -0.4251,  0.9720, -0.5373, -0.5643, -0.0621, -0.0922,  0.9140,  0.3638,
         0.0348,  0.0330,  0.2012,  0.1851, -0.7061, -0.1906,  0.1227, -0.3594,
        -0.6796,  1.0904, -0.1190,  0.1559, -0.3522, -0.5587,  0.6601, -0.1843,
         0.2586, -0.4111, -0.8324, -1.4340, -0.3181, -0.5723,  1.0783, -0.3735,
         0.4378, -0.9792, -1.1694,  0.8196, -0.6462, -0.3796, -0.5125, -0.3804,
         0.4493,  0.6105,  0.7943, -0.2510, -0.1801,  0.4121,  1.2113,  0.6463,
         0.2472,  0.5297,  0.7983, -0.3437,  0.1196,  0.6520, -0.3720, -0.8475,
        -0.5418, -0.4797,  0.4119,  0.1222,  0.8932,  0.0444, -0.4732,  0.4110,
         0.4742, -0.6088, -0.7951, -0.3578,  0.4419,  0.6227,  1.1108, -0.1493,
         0.6858, -0.5663, -0.7295, -0.8641,  0.2060, -0.6123,  0.1732, -0.3131,
         0.2394, -0.4608,  0.4350, -0.0430, -0.6764, -0.4755, -0.2551,  0.5006,
        -0.3569,  0.3806, -0.6564,  0.3722,  0.3989,  0.5916,  0.0021, -0.4966,
        -0.5774, -0.2758,  0.7877,  0.4495,  0.0949, -0.2529,  0.9573, -0.8241,
         0.4143, -1.1726,  1.0065, -0.3899,  0.5502,  0.4545, -0.3427, -0.6571],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,749 - myNeural - INFO - Forward Pass: tensor([-0.3363, -0.9035, -0.2781,  ..., -0.2824, -0.6584,  0.2816])
2021-05-25 09:09:58,768 - myNeural - INFO - Forward Pass: tensor([ 0.3592,  0.1550,  0.0329,  0.5827,  0.0319,  0.7925, -0.6548, -0.6413,
         0.7097, -0.6181,  0.7746, -0.2213,  0.0876, -0.5971,  0.5533,  0.5524,
        -0.0253,  0.7714, -0.8865, -0.3252,  1.1295, -0.3463, -1.6825, -0.5674,
         0.4609,  0.2805,  0.3027,  0.6965,  0.9819, -0.1182,  0.6600,  0.0095,
        -0.4794, -0.0515,  0.6698, -0.1667,  0.2738, -0.3886,  0.4214, -0.4843,
        -0.2853, -0.3465, -0.6464, -0.1713, -0.0153,  0.1155,  0.7034,  0.0709,
        -0.9026, -1.2232, -0.2586, -0.0414, -0.4747, -0.8628,  0.2720,  0.0984,
        -0.7454, -0.0733,  0.7813,  0.4757, -0.4365,  0.4601,  0.8662,  0.3284,
         0.0393, -0.9551,  1.0577,  0.1818, -0.0349, -0.0942,  1.0077, -0.5884,
         0.7216, -0.4884,  0.3836, -0.0243,  0.2456, -0.1040, -0.2300,  0.8856,
        -0.2938, -0.0039, -0.6871,  0.4805, -1.1599,  0.2409,  0.0553, -0.3342,
        -0.5060,  0.7683, -0.9003,  0.2069, -0.1504, -0.1900, -1.0715,  1.0189,
         0.6193, -0.2006,  1.2719, -0.0957,  0.5823,  0.9697,  1.1206, -0.6966,
        -1.1987,  0.7272, -0.6288, -0.1513, -0.2134, -1.2532, -0.1055,  1.5225,
        -0.2948,  0.4437,  0.8599,  0.7848, -0.0293, -0.2808, -0.2304,  1.3860,
         0.7370, -0.1025,  0.4988, -0.0551,  0.2767, -0.1070, -0.1725, -0.8151],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,786 - myNeural - INFO - Forward Pass: tensor([-0.1093, -0.7348, -0.0789,  ..., -0.0366, -0.3690,  0.5119])
2021-05-25 09:09:58,804 - myNeural - INFO - Forward Pass: tensor([-4.7438e-01,  4.4350e-02,  4.0780e-01,  5.0461e-01,  3.1750e-01,
         6.5650e-01,  1.1677e+00,  3.6065e-01, -7.5759e-01,  1.1202e-01,
        -2.0675e-01,  1.3423e+00,  6.2700e-01,  3.5215e-02,  1.8809e-02,
        -5.5602e-01, -1.4838e-02,  1.5051e+00, -5.2744e-01,  6.4948e-01,
         1.0134e+00,  1.0299e+00,  7.6103e-01,  2.0495e-01, -4.5599e-02,
         8.5836e-01,  2.7483e-01,  4.0595e-01, -2.8251e-01, -2.2821e-01,
         9.8270e-01, -1.6388e-02, -2.1402e-01,  5.1701e-01,  4.0546e-01,
         3.4319e-02, -1.1923e+00,  3.4896e-01,  1.4461e+00,  6.9635e-01,
         2.9423e-02,  3.9977e-01,  1.1030e+00, -3.6725e-01,  9.3761e-01,
         1.0249e+00,  7.3300e-01,  4.5379e-01,  6.7504e-01,  5.0270e-01,
         3.8085e-01, -2.2444e-01,  1.1839e+00,  1.1507e+00, -1.2696e-01,
         4.8739e-01,  1.1222e+00, -1.8670e-01,  2.8069e-01, -2.5168e-01,
         3.2139e-01,  4.2839e-01,  8.6093e-01, -9.8778e-02,  7.9676e-01,
         1.0932e-01,  7.4367e-01, -3.7611e-01, -2.7835e-01,  2.0436e+00,
         1.0652e+00, -6.3410e-01,  5.3544e-01,  1.4389e+00,  1.3429e-01,
         4.3731e-01,  1.2857e+00,  7.2551e-01,  1.1334e+00, -3.8718e-01,
        -1.1283e-01, -2.8266e-02,  5.4952e-01,  8.8434e-01,  1.1212e+00,
         7.7352e-01,  6.8036e-01,  1.1678e+00,  2.3144e-01, -3.7910e-01,
         1.8184e-01,  7.6995e-01,  4.2502e-01,  5.6113e-01,  5.1675e-01,
         6.5019e-01,  4.9448e-01,  1.3132e+00,  2.6400e-01, -8.7305e-02,
         5.9021e-01,  1.0994e+00,  5.9275e-01,  1.2068e-01, -7.0317e-01,
         1.8377e-01, -3.7155e-01,  7.5817e-02,  1.1323e+00, -4.1585e-02,
         6.7409e-01,  5.1588e-01,  1.3136e+00,  7.2955e-01,  7.0175e-01,
        -4.9494e-01,  5.8865e-01,  6.7859e-01,  5.7484e-03,  1.4435e+00,
         9.9309e-01,  9.1260e-01, -1.7578e-01, -4.7307e-05,  6.8249e-01,
        -4.2397e-01,  5.0676e-01,  7.1880e-02], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,820 - myNeural - INFO - Forward Pass: tensor([-0.4592, -0.9401, -0.4181,  ..., -0.3340, -0.7370,  0.2581])
2021-05-25 09:09:58,837 - myNeural - INFO - Forward Pass: tensor([ 0.3005,  0.8649, -0.4593, -0.1837, -0.2178, -0.3898,  0.8786,  0.0667,
        -1.0194,  0.0389,  0.2960, -0.9550,  0.3561,  0.7278,  1.6496,  1.0996,
        -1.2843,  0.0852,  0.2228, -0.9962,  0.8825,  1.1647,  0.0724, -0.1771,
         1.1310,  0.5694,  0.3899,  0.9271, -0.6261, -0.1293, -0.4074, -0.3087,
        -0.1318,  0.7156,  0.1919,  0.4793,  0.7560, -0.0380,  1.5037, -0.6927,
        -0.3239, -0.1770, -0.2648,  0.3829,  0.5444,  0.7638,  0.8487,  0.3025,
         0.3655, -0.4152,  1.3057,  0.4145, -0.0187, -0.2218,  0.4289, -0.0796,
         1.1302,  0.7565, -0.3496,  0.3470,  0.6822,  0.2630, -1.0181,  0.8336,
         0.3111, -1.1930,  0.2025, -0.8627, -0.7379,  0.6959,  1.6953,  1.1437,
        -0.5577, -0.5845,  1.7087,  0.6512,  1.1824,  0.9355,  0.7028, -0.4386,
         0.7325, -0.7728,  1.0186,  0.0529,  1.2957, -0.5681,  0.6432, -0.2361,
        -0.4523,  0.5986,  0.3754, -0.2144,  1.2890,  0.5896,  0.8256, -0.4889,
         0.2479,  0.7440, -0.9286, -1.0607,  0.8798,  0.6185, -0.9330, -0.3872,
        -0.7156, -1.0440, -0.4756,  0.1311, -0.3912,  1.0717,  0.5941,  0.8623,
        -0.0162, -0.1571, -0.2790,  0.7875,  0.4999,  0.8550,  0.1161, -1.0836,
        -0.2444, -0.3359, -0.1647,  0.2530,  0.3370,  0.2488, -1.3251, -0.5904],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,855 - myNeural - INFO - Forward Pass: tensor([-0.3396, -0.8863, -0.3747,  ..., -0.2601, -0.6059,  0.3560])
2021-05-25 09:09:58,874 - myNeural - INFO - Forward Pass: tensor([ 0.5047,  0.4597, -0.0598, -1.4035, -0.4607,  0.5008, -1.2481,  0.4594,
         0.6407, -0.5332, -0.5265,  0.6404, -0.4663, -0.2799, -0.2386,  0.6662,
        -0.3182,  0.8483, -0.7990,  1.6342, -0.1917,  0.9943, -0.5589,  0.5794,
         0.3906,  0.1401, -0.0927,  0.4870, -0.1689, -0.7351,  1.3548,  0.6793,
         1.0737,  0.7694,  0.2041, -0.4121,  0.6501,  0.0309,  1.4619,  0.3793,
         0.5067,  0.9555,  0.2510, -0.0666,  0.2014,  0.5995,  0.9024,  0.3616,
         0.2193,  0.5165,  0.4451,  1.2107,  0.3652,  1.6982, -0.1198, -0.1591,
        -1.3296,  0.3389,  0.9511, -0.6612,  0.1750,  0.6132,  0.3129,  0.3894,
         0.2355, -0.1944, -0.1573,  1.5453,  0.5198, -0.4573, -0.2874, -1.1278,
        -0.0788,  1.3586,  1.5285,  0.6122,  0.2761,  0.4541, -1.3452,  0.0370,
         0.8327, -0.0241,  0.9870, -0.2064, -0.0851, -1.1700,  0.9398,  0.4088,
        -0.3890, -0.2172,  1.0783,  0.1781,  0.8926, -0.3292, -0.1724, -0.2290,
         0.0230, -0.2536,  1.3115, -0.1536,  0.1802, -0.3217,  0.3669,  1.1514,
        -0.2619,  0.1996,  0.6453,  0.6360, -1.6099, -0.5927,  0.1236,  0.8281,
         0.2963, -0.3668,  0.9695,  0.0529,  0.5837,  1.2061,  0.1678, -0.5812,
         0.8030,  0.4960,  1.2256,  1.6423,  0.1975, -0.0590,  1.3793, -0.8784],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,890 - myNeural - INFO - Forward Pass: tensor([-0.6573, -1.1823, -0.6899,  ..., -0.5465, -0.8837,  0.0794])
2021-05-25 09:09:58,907 - myNeural - INFO - Forward Pass: tensor([ 0.5853, -0.4177,  0.4598, -0.2044,  0.0118, -0.1406,  0.4226,  0.4886,
         0.3293,  0.9527,  0.8136, -1.0813,  0.3267, -0.2350, -1.6838, -0.2594,
        -0.8331, -0.0495, -0.0382, -0.4753,  0.1874,  0.7115,  0.2654, -0.2391,
        -1.2018, -0.5806, -0.5684,  0.4004,  0.6311,  0.1600,  0.3123, -0.0288,
         1.1629,  0.8990, -1.2396, -0.6482, -0.6208, -1.6764, -0.4021, -0.0559,
        -1.6232,  0.0674,  0.4778, -0.5090, -1.1601, -0.5981,  0.4600, -0.9817,
         0.7424, -1.1112,  0.4970,  1.0977,  0.0646,  0.0949, -0.2255, -0.1939,
         0.3137,  0.1293, -0.7336,  0.1797, -0.6431, -0.3196, -0.2454,  0.1197,
        -0.5020,  1.3841, -0.9513,  0.0242,  0.2507,  0.1479, -0.6376,  0.7960,
         0.7632, -0.4217, -1.6049, -1.0870, -0.0184,  0.8672, -0.7654, -0.2796,
        -0.3857, -0.3256,  0.6408,  0.1144, -1.3304, -0.8080, -0.1620, -1.0448,
        -0.2778, -1.0205,  0.1610, -0.2406,  0.4563, -0.5775,  0.0089,  0.9147,
         0.1002,  0.1447,  0.0592,  0.9563,  1.0039, -0.5775, -0.0212,  0.2134,
         1.2561, -0.6957,  0.9651, -0.6667,  0.0260, -0.7398,  0.5381, -1.1917,
         1.6188, -0.2382,  1.2183, -1.5755,  0.6234, -1.1495, -1.5583,  0.4127,
         1.8364,  0.4606, -0.3916, -0.2663, -0.0798,  0.1073, -0.6882, -0.7478],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,923 - myNeural - INFO - Forward Pass: tensor([-0.3417, -0.9866, -0.4458,  ..., -0.2860, -0.5642,  0.3468])
2021-05-25 09:09:58,940 - myNeural - INFO - Forward Pass: tensor([ 0.3291,  0.0615, -1.0114, -0.7293,  0.2376, -0.1120,  1.8461,  0.5680,
        -0.5994,  0.6129, -0.5786,  0.8496,  0.1864,  0.2354,  0.5106, -0.4896,
        -0.3009,  0.6898,  0.8502, -1.2870,  0.7619, -0.7143,  1.4405,  1.3303,
         1.0519,  0.2106,  0.0276, -1.1135, -0.0881, -0.0826,  0.4840,  0.9300,
        -0.4495, -0.2033,  0.4095, -0.9377,  0.2730, -0.0983, -0.4305, -0.3695,
        -0.0490, -1.0075, -0.1683, -0.2968,  0.4639, -0.3468,  1.7735, -0.4635,
        -0.9089,  0.0684,  0.3051,  0.1677,  1.1047,  0.2431, -1.3825,  0.9186,
        -0.6035,  1.1310, -0.5923,  0.7657, -0.4202, -0.2865, -0.1010, -0.1982,
        -0.2811, -0.3620,  0.3787,  0.1261,  0.0466, -0.2401, -0.8459,  1.0481,
        -0.0954, -0.0887,  0.4777, -0.4604,  0.5667,  0.2165, -0.4214, -0.6625,
         0.6110,  1.6816,  1.4970,  0.4798, -0.2594, -1.6611, -0.7565,  1.7682,
        -0.2270, -0.7742,  1.5795,  0.0231, -0.4747, -0.7133, -0.3324, -0.1258,
         0.1889, -0.3750,  0.0058, -0.7526,  0.1254, -0.4832,  1.2927,  1.3677,
        -0.5083, -0.8616, -0.7893,  0.8233,  1.1055,  0.0588, -0.6153,  1.5923,
        -1.0305,  0.4468,  1.3373,  0.4204,  0.0133,  0.0022, -0.2008, -0.4551,
         1.0139, -0.3058, -0.8428, -0.5373, -0.6060, -0.1834,  0.0912,  0.3506],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,957 - myNeural - INFO - Forward Pass: tensor([-0.7813, -1.3492, -0.8683,  ..., -0.7130, -0.9088,  0.0500])
2021-05-25 09:09:58,974 - myNeural - INFO - Forward Pass: tensor([ 3.1133e-01, -4.0511e-02,  7.3684e-01, -1.2188e-01,  4.9944e-01,
        -1.3609e+00, -3.4636e-01, -1.6084e-01,  3.5656e-01, -5.6481e-01,
        -4.5070e-01,  5.6947e-01, -1.4528e+00, -9.5499e-01, -5.6445e-01,
        -6.4649e-01, -3.3333e-01,  1.1283e+00,  4.9128e-01,  9.1603e-01,
        -2.7467e-02, -2.4293e-02,  1.4501e-01, -1.4304e+00, -7.9453e-01,
        -4.6047e-01, -5.6081e-01,  1.1822e-01, -2.5061e-01, -2.6649e-01,
         1.1569e+00,  4.5196e-01, -1.3763e+00, -7.8971e-01,  9.1590e-01,
         9.4711e-02, -6.3365e-02,  2.5389e-01,  6.6018e-01,  2.9688e-01,
         2.2657e-01,  8.1142e-01, -7.7343e-01,  2.6406e-01,  9.0312e-01,
         3.0723e-01, -7.0654e-01,  1.8825e-01, -5.6223e-01, -1.1807e-01,
        -2.0371e+00, -3.0883e-01,  5.1153e-01, -2.7118e-01, -1.1539e+00,
        -4.5865e-01,  2.3328e-01,  1.0337e+00, -6.3389e-01, -1.0135e-01,
        -3.2399e-01,  5.5966e-01, -9.1214e-01, -1.9674e-01, -6.5399e-01,
         1.4640e-01,  4.7015e-02,  2.0065e-02, -2.5949e-01, -1.0129e+00,
         1.6224e+00, -2.2560e-01,  6.4128e-01,  1.4345e+00,  2.4103e-01,
         1.0285e+00, -1.0450e+00,  1.0811e+00, -1.5261e+00, -1.7581e+00,
         5.3621e-01,  4.7667e-03, -1.0932e+00,  4.3360e-01, -7.0967e-01,
         1.0085e+00,  1.4353e+00, -1.5938e+00,  1.6555e-01, -1.4243e+00,
        -1.5878e+00, -9.4973e-01,  7.2664e-01, -1.2422e+00, -8.9018e-01,
         2.6647e-01,  6.9928e-01, -3.2791e-01,  5.7512e-01, -2.0511e+00,
        -2.6456e-01,  3.8474e-01,  6.5118e-01, -9.0672e-02, -1.7333e+00,
        -2.2693e+00,  3.5669e-01,  7.1821e-01, -6.1732e-01,  5.0285e-01,
        -1.1507e+00,  1.1517e-01,  1.0248e+00, -7.2539e-01, -1.3811e-03,
        -6.3674e-01, -9.9628e-01, -1.2643e-01, -1.3617e-02, -1.3339e+00,
        -6.1253e-01, -6.1301e-01, -8.8358e-01, -4.5406e-01, -1.2575e+00,
        -4.4621e-01,  9.2573e-02, -1.2171e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:58,990 - myNeural - INFO - Forward Pass: tensor([-0.3815, -1.0639, -0.4011,  ..., -0.2945, -0.4855,  0.4864])
2021-05-25 09:09:59,006 - myNeural - INFO - Forward Pass: tensor([-0.2937,  0.4228,  0.4952,  0.0958, -0.2926,  0.3210,  0.4323, -0.1631,
         1.2940, -0.7051,  0.4356, -0.0880,  1.2070,  1.1630,  1.0800, -1.0687,
         1.8569,  1.0644,  0.4796,  1.1065, -0.5314,  0.3253,  1.5685, -0.8295,
         1.7036, -0.8568, -0.5521,  1.5625,  0.5013,  1.9166,  0.8906, -0.7456,
        -0.1126,  0.0976,  0.3835,  1.2439, -0.2436, -1.0075,  0.1455,  0.5648,
        -0.5322,  0.8018,  1.4042, -0.5533,  0.7215, -0.0682,  0.9994,  0.8432,
        -0.1797,  0.7531,  0.2048,  0.0280, -0.3682,  0.7227,  0.8990,  0.4613,
        -0.6414,  0.7122,  0.1899, -0.4775,  0.8256,  1.3556,  0.5262,  0.0743,
         0.1172, -0.4460,  0.6267, -0.2645, -0.0617,  0.8030,  1.5943,  1.0079,
         0.1082, -1.0050,  0.2283,  1.6929,  0.7178, -0.1626,  1.2482, -1.3090,
         1.8672,  0.3468,  1.4223,  1.1141,  0.9258,  0.7658,  1.6252, -0.0707,
         0.5543,  1.7680, -0.2673,  0.2901,  0.6513,  1.1849, -1.7726,  0.1947,
         1.3018,  0.1494, -1.6931, -1.2583, -0.0067, -0.9341,  0.1794, -1.3926,
        -1.3073, -0.6623, -0.0779, -0.3457,  0.4207,  0.4946,  1.3734, -0.1476,
         0.8473, -0.2835,  0.1330,  0.8483,  1.1319,  1.7721,  0.0816, -0.7812,
         1.2724,  1.0219, -0.7536,  0.0707,  0.0608,  1.5843,  0.7638, -0.8656],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,020 - myNeural - INFO - Forward Pass: tensor([-0.3529, -1.1029, -0.4863,  ..., -0.2783, -0.4573,  0.5378])
2021-05-25 09:09:59,032 - myNeural - INFO - Batch 40 -- TrainLoss: 0.47427 -- TrainAcc: 82.03125% -- TestAcc: 77.10000%
2021-05-25 09:09:59,036 - myNeural - INFO - Forward Pass: tensor([-0.4253, -0.1198,  1.1615, -0.5667, -0.2721,  1.1343, -0.5412,  0.4079,
         0.2916,  1.1208,  1.5463, -1.4484, -1.6774, -0.3715,  1.1289,  1.2190,
         2.3071,  0.5653,  1.3412,  0.8923, -0.0403,  2.2486,  1.2500,  1.3766,
         0.0589,  1.6712,  2.2853,  0.1767,  1.2546, -0.8917,  2.0643, -0.4142,
         0.4876,  0.5610, -0.1232, -0.5969, -0.4690,  0.9697,  0.7148, -0.9625,
        -0.5551,  0.8582, -0.1221, -1.0944,  0.7127,  0.0100,  0.6085, -0.1412,
         0.0157, -0.0174,  1.6052,  0.4663, -0.8283,  0.9310,  0.3363, -0.2590,
         1.2642,  0.6978,  0.9086,  1.7333, -1.5855, -0.8104,  0.5040,  0.2975,
        -0.0633, -1.2335, -1.7848, -0.7407,  0.8376,  0.0870, -0.6331, -0.5529,
        -1.4019,  1.1110,  1.9966, -0.8662, -0.1091,  0.7467,  0.6544, -0.7651,
         0.2289,  0.6945, -0.0373,  1.1371, -0.4172,  0.1430, -0.4029,  0.3407,
         0.4127, -1.0545, -0.0249,  1.9315,  1.7811,  1.2140, -0.9419,  0.4348,
        -0.5774,  0.5233,  1.1292,  0.8236,  0.3816, -0.0366, -0.2417,  0.8882,
        -0.4155,  1.7841,  0.7667,  0.1596,  1.3882, -1.2016, -0.6633,  0.7283,
        -0.1786, -0.4202,  0.1362,  0.2627,  0.4168,  1.1344,  1.0251, -0.6111,
         0.5679, -1.4672, -0.1563,  2.0874,  1.1533,  1.3063,  1.2425,  1.8615],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,051 - myNeural - INFO - Forward Pass: tensor([-1.0485, -1.5686, -1.0351,  ..., -0.8325, -0.9567,  0.1022])
2021-05-25 09:09:59,070 - myNeural - INFO - Forward Pass: tensor([ 0.2814,  1.2010, -0.9288,  0.9905, -1.2700, -1.3522, -0.6127, -0.8938,
         0.5778, -1.6060, -0.0227,  0.2105, -0.9436,  0.7196,  1.0625, -1.0264,
         0.7369, -0.9839,  1.0706, -1.0778, -0.3406, -1.3138, -1.6313, -0.8824,
         0.9204, -1.7414,  1.3295,  0.0407,  0.3745,  1.4033, -0.8566,  1.5352,
         0.7336, -2.7546, -2.3061, -0.1168,  0.2128, -1.5336,  0.8045, -0.4268,
         1.0610,  0.5445,  0.4179, -0.7836,  0.6889, -0.3621, -0.0254, -1.1662,
        -1.4225,  0.4772, -1.8964,  0.5068, -1.1411, -1.7948,  0.1122, -0.9516,
        -1.2382, -1.6474,  1.1632, -0.2529,  0.4597,  0.4314,  0.0289, -0.7130,
        -0.0043, -0.7981,  0.3097,  1.6274, -0.4507, -0.7193, -0.6239, -1.2600,
        -0.3089,  1.3021,  0.1525, -0.5679, -1.3431,  1.2395, -0.1366,  0.1009,
         2.2488,  1.9370,  0.8576, -0.7740, -0.1284, -1.3208,  0.1664, -1.6010,
        -1.9678, -0.8675, -0.9249,  0.5313, -0.6845,  2.0269, -1.1176, -1.5024,
        -0.4168, -0.1784, -0.7145, -0.2429,  0.8836, -0.9138, -0.5401, -1.0740,
        -0.3915,  0.2188, -1.2157, -1.9178,  1.6248, -0.2043, -1.6954, -1.3814,
        -0.9912, -1.9164, -1.0937, -0.7337, -0.8411,  1.1483, -1.0656, -1.2123,
         0.0115,  1.9207, -2.4972,  0.0403, -1.1404,  0.4607, -1.0155, -1.5309],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,086 - myNeural - INFO - Forward Pass: tensor([-0.9437, -1.5073, -0.9010,  ..., -0.6860, -0.8106,  0.2941])
2021-05-25 09:09:59,102 - myNeural - INFO - Forward Pass: tensor([-0.1099,  1.1120,  1.1564,  0.3789, -0.4429, -0.0724,  0.5508, -0.9103,
        -1.6792, -0.8904,  0.7209, -0.8217, -1.8543,  0.1192, -0.5260,  0.7956,
         0.2751, -1.9503,  0.4280, -0.0493,  2.0213, -1.0899,  0.1545,  1.2748,
         0.2563, -1.7594,  0.2870, -0.9909, -0.1797, -1.0094, -1.1229, -0.5680,
         0.1415,  0.0332, -0.8447, -0.1694,  0.4479, -1.5474, -1.8841,  0.3296,
        -0.4905,  0.9495, -0.3637, -0.4358,  0.0483, -0.5005, -0.7984,  0.4357,
         0.3665, -2.1064,  0.9721, -0.3583, -1.3896, -0.7036,  0.3301, -1.2011,
        -0.9061,  0.7473,  1.1237, -0.7319, -0.1316,  1.0573, -0.2306, -0.4762,
        -1.3521,  1.1017, -0.0754, -0.5035,  0.4697, -0.4150,  0.8204, -0.6275,
         1.2916,  0.0031, -0.5838, -1.3734, -0.3755,  0.8387, -0.5734,  1.2374,
         0.6597, -1.4273, -0.2126, -1.3657,  0.0177, -0.1929, -0.1945,  1.2526,
         1.6874,  0.6956,  0.0711,  0.2240,  0.8365, -0.0839, -1.3923,  0.0642,
        -1.4788, -0.6903,  0.9206,  0.2822,  0.5133, -0.3555,  1.4532,  0.0400,
        -1.0449,  1.1380, -1.1482,  0.1076, -0.6156, -0.3076, -0.0065,  0.8292,
        -0.4667,  1.0391,  1.2594, -0.8541, -1.7021, -1.8578, -0.3742,  2.1016,
        -1.9478, -0.2021, -0.3349,  0.2978, -1.2712, -1.6207,  0.6508,  0.6424],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,118 - myNeural - INFO - Forward Pass: tensor([-0.8992, -1.4588, -0.9093,  ..., -0.6296, -0.6995,  0.3025])
2021-05-25 09:09:59,137 - myNeural - INFO - Forward Pass: tensor([-3.2985e-01,  2.0108e-01,  8.4745e-01, -1.4150e-01, -2.4577e+00,
         2.3186e+00,  6.3919e-01, -1.2750e+00, -3.4292e-02,  4.7581e-02,
        -1.2324e+00,  1.0768e+00, -2.0253e-01,  2.4494e+00, -1.2768e+00,
         1.8588e-01, -2.0406e-02, -9.0708e-01,  2.2350e+00, -8.5111e-01,
        -8.2038e-01,  1.3564e+00,  1.6576e+00,  7.0182e-01,  6.9669e-01,
        -4.0825e-01, -7.4754e-01,  1.0675e-01, -6.1007e-01, -2.8644e-01,
         3.0931e-01,  1.1975e+00,  9.9994e-01,  1.3862e-01, -1.3270e+00,
        -3.4111e-01, -3.5779e-01,  2.0376e-02, -5.8524e-01, -6.5854e-01,
         1.0203e+00,  7.5287e-02, -1.5962e+00,  1.3478e+00,  1.2289e-01,
         1.9053e+00, -1.2410e+00,  2.3111e-01, -9.1949e-01,  1.0318e+00,
        -8.6133e-01, -4.5601e-01,  2.2894e+00, -1.2272e+00,  1.9099e+00,
         4.3630e-01, -4.5928e-01,  3.6156e-01,  5.9502e-01,  9.2370e-01,
        -2.1871e-01,  7.2172e-01, -3.2765e-01, -1.0698e+00,  1.1436e+00,
        -1.7280e+00, -4.9049e-01,  9.2120e-01,  1.0503e-03, -1.4744e+00,
        -5.3237e-03, -5.3113e-01, -2.2284e-01, -1.3696e-01,  1.5280e+00,
         5.8022e-01,  5.5093e-01, -7.8659e-01, -3.6219e-01, -1.2268e+00,
        -6.7210e-02,  5.3027e-01,  3.6215e-01,  7.3992e-01, -5.7326e-01,
        -8.6216e-02, -1.4439e+00, -8.5335e-02,  1.7464e+00, -3.4404e-01,
        -9.5211e-01, -2.8040e-02, -1.2749e+00, -1.7471e+00,  2.1433e+00,
         5.0465e-02, -1.3677e-01,  4.9094e-01,  4.8769e-01, -1.3810e+00,
         1.0136e+00, -2.5113e-02,  2.1861e-01, -2.6195e-01, -2.0550e+00,
         1.3838e-02, -2.5176e-01,  1.3465e+00,  3.4150e-01, -1.7539e+00,
        -1.2807e+00, -1.7660e+00,  1.1986e+00, -2.0199e+00, -7.7065e-01,
        -2.2835e+00,  1.5185e-01,  1.0760e-01,  1.3833e+00, -7.8901e-01,
         3.2153e-01, -7.8237e-01,  9.0502e-01, -9.5840e-01, -3.8895e-01,
         1.8781e-01, -6.5889e-01,  9.2589e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,155 - myNeural - INFO - Forward Pass: tensor([-1.0047, -1.5905, -1.0007,  ..., -0.6319, -0.8878,  0.2339])
2021-05-25 09:09:59,173 - myNeural - INFO - Forward Pass: tensor([-0.7741, -0.9015,  0.7649,  0.4755,  0.0159,  2.1621,  0.3471, -0.0314,
         0.9975, -0.1853,  0.8034, -1.2052,  0.5078, -1.3735, -0.7610,  2.2765,
        -0.0664,  0.3096, -0.0510,  0.5675, -0.9112,  0.8553, -0.3544, -0.6019,
         0.0655, -0.4205, -0.9487, -0.5531,  1.2742, -0.2394,  0.8373,  0.6359,
        -0.5702, -1.1300,  0.3280, -0.5016, -1.0707, -0.8695,  1.1780, -0.8339,
         0.3133,  1.7247,  0.9412, -0.6068,  0.9770, -2.0932,  2.7365,  0.2377,
        -0.3826,  0.4337, -0.1231, -1.2865, -2.4946,  0.9705,  1.3989,  0.6475,
         0.9715,  0.8489, -0.1157,  2.2092,  1.2878,  0.8806,  0.9680,  0.8842,
        -0.7002,  0.2843, -1.1166,  2.6837, -1.9665, -0.5668, -0.0728,  0.0471,
        -0.2616,  0.3329, -0.2807,  1.1445,  0.4869, -1.3597,  0.5917, -0.0902,
        -0.6683,  0.8169, -1.2922,  2.0315, -0.1381, -1.2946,  0.1916,  0.9999,
         1.9403,  0.8276, -0.8701,  0.2079, -1.5575,  0.1174,  0.4247,  0.0111,
        -0.6209,  1.5365,  0.5831, -2.0821,  0.4650, -0.6100, -0.6155,  0.2905,
         0.9933, -2.0597, -2.0404, -0.6295,  0.0905, -1.7143, -1.2020,  0.3372,
         1.5137,  0.8816,  0.3465, -1.1429,  1.8244, -2.1166,  0.4376, -0.8732,
        -1.0052, -1.4732,  0.0911,  1.1076, -1.6751, -0.9926,  0.4566,  0.8906],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,189 - myNeural - INFO - Forward Pass: tensor([-0.9935, -1.5776, -0.9894,  ..., -0.5894, -0.9563,  0.2792])
2021-05-25 09:09:59,206 - myNeural - INFO - Forward Pass: tensor([ 0.6492,  0.3232,  1.1155,  2.4325,  1.3121, -1.6371, -1.0034, -1.3810,
        -0.0719,  0.4257,  1.9534, -0.2412,  0.8234, -0.5687,  0.0175,  1.2628,
        -0.5931, -1.8934,  0.4449, -0.1262,  1.1521, -0.6870,  0.4240,  0.1687,
        -0.8543, -0.1143, -0.3131,  0.5509, -1.3713,  0.5555,  1.3857, -1.2792,
         1.3065,  1.4844,  0.5086,  0.4664, -0.0312,  0.8718,  1.4102, -2.2999,
        -0.1599, -1.1003,  0.5772,  1.6027,  0.8715, -0.1834, -0.8662,  1.6338,
         1.9370, -0.6294, -0.5951, -1.2615,  0.8763, -1.0200, -0.5030,  0.2959,
        -0.6079, -0.2635,  1.6019, -0.4498,  0.7383,  1.7110,  0.1425,  0.7174,
        -0.9160,  3.2207,  0.6253,  1.0233,  0.2310, -1.4008,  2.4728,  0.4765,
         1.1254, -0.3490,  0.0870, -0.4714, -0.5629,  1.6011,  0.0954, -0.8319,
         1.5135,  1.1805, -0.3937,  1.5562, -1.4290, -0.4600,  1.8499,  0.3844,
         0.5958,  2.4160, -0.7548,  0.7273,  0.2125, -1.1813, -2.2839, -1.2987,
        -1.1056,  3.0529,  0.4191,  0.0416, -0.4145,  3.7594,  1.0071, -0.3092,
        -1.0606,  1.6503, -1.0745,  0.0595, -0.1281,  0.0984, -0.9184, -1.0925,
        -0.1038,  0.4859,  0.5099, -0.1777, -0.9704, -0.2531,  1.4128, -1.5634,
        -0.6302, -1.5767,  0.0388, -1.2961,  0.4691, -0.9180,  1.1609,  0.5437],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,222 - myNeural - INFO - Forward Pass: tensor([-1.1518, -1.7289, -1.0606,  ..., -0.7079, -1.0211,  0.3501])
2021-05-25 09:09:59,239 - myNeural - INFO - Forward Pass: tensor([ 0.4988, -0.8497, -1.3363, -1.8650, -0.0147,  0.1459,  0.0329, -0.3745,
         1.4398, -0.2675,  0.3798, -0.6539, -2.1664,  0.8382, -0.2026,  0.8333,
        -1.9357, -0.2785, -0.7844,  0.1580,  0.4510, -1.8056,  1.5415, -1.7739,
         1.9058, -0.3042, -0.1101, -1.0166, -1.0403,  2.1456,  2.1154, -1.5821,
        -2.0888, -0.2625, -0.4114, -0.9457,  0.4179, -0.2421,  0.4779, -0.9071,
         0.6693,  0.8986, -0.5621,  0.4365,  0.2843,  0.2226, -1.0480,  2.5767,
         0.8591, -0.3391,  0.7130, -1.5938, -1.1836,  1.4032, -0.9655, -0.9490,
         0.4476,  0.1773, -0.9663, -1.2797, -1.2627,  0.2867, -1.0119,  0.4210,
         1.5566,  0.2270,  0.3486, -2.3114,  1.1001,  0.2128, -2.8007, -0.7868,
        -1.0970, -0.8678, -0.4627, -1.0553,  0.5076,  1.1068, -1.3771, -0.5956,
        -1.5988,  0.1764,  0.6674, -1.3661, -0.5600, -0.4889, -1.8735, -0.4115,
        -1.5209,  0.6050, -1.1710, -1.1548,  2.2281,  0.3013, -0.4279, -0.0527,
         2.3105, -0.1417, -0.2474,  1.1224,  1.4952,  0.0549, -1.0391, -1.4478,
        -0.0829, -1.5420,  0.6850,  0.5361,  1.0293, -2.8179,  0.5855,  0.5655,
        -1.1801, -1.4471, -0.1950, -1.5263, -0.2578, -0.0472, -0.8164, -1.5616,
         0.8703, -0.1732, -0.6589,  0.7849,  1.5111, -0.1006,  0.7411, -0.7502],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,257 - myNeural - INFO - Forward Pass: tensor([-1.0492, -1.6479, -0.8938,  ..., -0.3954, -0.8319,  0.5204])
2021-05-25 09:09:59,274 - myNeural - INFO - Forward Pass: tensor([ 0.8707, -1.5615, -0.0817, -0.3225,  1.1211, -0.8659,  2.9171,  0.8736,
         0.3072,  1.1275, -2.3251, -1.5283, -0.6713,  0.9594, -0.4996,  0.4045,
         3.2182, -1.0398,  1.0017,  2.1561, -0.1097, -0.0301, -0.1279,  1.5773,
         0.4761, -0.7142, -0.5149, -0.2535, -1.2006,  0.5386,  0.4429, -1.0200,
         1.5804, -0.0155,  0.2141, -0.5967,  2.1900,  1.1732,  0.7728, -0.4331,
         1.9826,  0.4297, -0.2515, -0.7549, -1.1783, -0.1301,  0.3386,  1.1875,
         2.0903,  1.2692,  1.0955,  0.2516, -1.6010,  0.6910, -1.2684,  0.4856,
        -1.4549,  1.6423, -0.7264,  0.5035,  1.1905,  2.0911,  0.6535, -1.5668,
         1.3979, -0.6701,  1.9909,  0.5479, -1.5192, -0.7103,  0.5823,  2.1411,
        -1.0400, -0.4560, -2.6473, -1.4419,  2.0027,  0.2128, -2.4417, -0.7048,
        -2.1763, -1.1951,  2.4811,  0.6310, -0.1756, -1.6876, -0.0662, -0.0573,
         1.3638,  0.2839,  1.0566, -1.9370,  0.3993,  0.5436, -0.5992, -0.7973,
        -1.7952,  1.0493,  1.2856, -0.1411,  0.4158, -1.3981,  0.7555, -0.9708,
        -1.3078,  1.0774, -0.3295,  1.2654,  0.6702, -2.1704,  1.7268,  0.9839,
         2.5813, -0.7133, -1.6422, -1.5055,  1.8910,  0.1305,  1.0924,  0.2884,
         0.3841, -0.7111, -2.7413,  0.9713, -0.6513, -0.7788, -0.2759,  0.2987],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,289 - myNeural - INFO - Forward Pass: tensor([-1.4108, -1.9218, -1.3443,  ..., -0.8221, -1.2907,  0.2432])
2021-05-25 09:09:59,304 - myNeural - INFO - Forward Pass: tensor([-1.8771, -2.2401,  2.4390, -0.8449, -0.9440,  0.3924,  0.2098,  1.8147,
         0.3006, -2.4987, -0.7896,  0.8835,  0.4460, -0.6714, -1.7252,  1.6746,
         1.1298,  0.6044, -2.3897, -0.7403,  0.6299, -0.0915,  0.7365, -1.8917,
         1.1885,  0.2347, -1.3411, -1.5074,  0.1295, -1.2318, -2.8159, -2.8960,
        -0.3338, -1.5277, -1.5947, -0.5671, -1.3764, -2.2282, -1.5042,  1.2285,
         0.3348,  0.4203,  0.2991, -0.5905,  0.2039, -2.9502, -0.2568, -0.8854,
         1.6381, -0.3950, -0.6632, -1.3669,  1.3004, -3.0170, -3.3738, -1.8660,
        -0.3455,  0.6941, -1.3680,  1.3603,  0.6357, -1.5264, -0.5939, -1.3015,
        -0.1066,  1.4624,  2.4511, -1.8995,  0.3302, -2.7509, -0.5486,  1.8181,
         0.3399, -0.9414,  1.4443,  0.3735, -0.7529, -0.1432,  1.5757, -0.3463,
        -1.1828,  0.6783, -0.8800, -0.9298, -0.4863, -2.2257,  0.5739, -2.1491,
        -0.9918, -1.5584, -1.7529, -0.0814,  1.1851, -0.7655,  0.5716, -0.8943,
         0.3716,  1.1163,  3.1791,  1.1728, -1.2691,  0.4272, -0.6537, -2.6785,
         1.7756, -1.0880, -0.4134,  2.4154,  1.0960, -1.6502, -0.8702, -2.6438,
        -2.0244, -1.0986,  1.6779,  2.0718, -0.4710, -0.3485,  0.2452, -1.7135,
        -2.2149,  0.9136, -1.4415,  1.5884,  0.8440,  1.3262,  1.3432, -0.0312],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,319 - myNeural - INFO - Forward Pass: tensor([-1.0465, -1.7933, -1.0528,  ..., -0.4451, -1.0071,  0.4492])
2021-05-25 09:09:59,334 - myNeural - INFO - Forward Pass: tensor([-1.1150e-01, -6.3989e-01,  6.3063e-01, -1.4485e-01, -6.6538e-02,
         1.5370e+00,  1.5203e+00,  2.4679e+00, -1.4594e+00,  1.7971e+00,
         1.5513e+00,  4.1740e-01, -8.3840e-01, -3.8753e-01, -1.1032e+00,
        -1.7678e+00,  1.8298e+00,  5.1977e-01, -4.5946e-01,  2.0601e+00,
        -1.1107e+00,  9.2070e-01,  1.4555e+00, -1.3571e+00, -2.2170e+00,
         3.4984e-01, -5.2942e-01, -1.6294e+00,  1.9867e+00, -1.3042e+00,
        -9.0109e-01, -1.8216e+00, -1.9711e+00, -2.0216e+00, -7.1154e-01,
        -1.3635e+00,  5.1171e-01, -1.1009e+00,  2.9629e-01,  1.5199e+00,
        -1.1649e+00, -6.3504e-01,  1.6554e+00,  5.6221e-01,  2.7137e+00,
        -7.9129e-01,  1.6153e+00, -2.1913e+00,  4.4107e-01,  7.4791e-01,
         6.8284e-01, -3.1788e+00,  6.1856e-01, -1.6721e+00,  1.2818e+00,
         8.3486e-01, -1.6289e+00,  1.4339e+00,  6.2496e-01,  3.3217e-02,
         4.1956e-01, -1.1163e+00, -4.5254e-01, -1.2416e-02, -5.8947e-01,
         1.3243e+00, -7.8408e-01, -1.9271e-01, -4.8083e-01,  1.6501e+00,
         3.2834e+00,  7.2019e-01,  2.6342e+00, -4.5946e-02, -2.5814e+00,
         3.1667e-01, -1.3057e-03, -1.0035e+00, -3.6159e-01,  3.3176e-01,
        -7.9643e-01,  2.4200e-01,  2.7313e+00,  1.2835e+00, -1.7260e+00,
        -5.4812e-01, -5.9095e-02,  7.9410e-01, -1.1367e+00,  2.9878e-01,
         2.5424e-02,  2.0157e-01,  3.1351e-01, -1.2708e-01, -1.7908e-01,
         8.6836e-01, -7.5074e-01, -3.0067e-01,  1.1177e-01,  2.7684e+00,
         3.7519e+00,  1.5912e+00,  1.2083e+00, -5.4797e-01,  2.3808e+00,
         2.3476e+00, -3.5489e-01,  1.0954e+00, -6.3466e-01,  2.8579e+00,
        -6.6049e-01,  1.0036e+00,  1.3595e+00,  1.0652e+00, -2.0118e+00,
        -8.2355e-01, -1.1111e+00, -1.6676e+00,  1.0941e-02,  3.3239e-01,
         8.0752e-02, -6.6515e-01,  2.4539e-01, -1.0392e+00,  1.3188e-01,
        -2.2726e+00,  1.8274e+00, -1.1654e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,348 - myNeural - INFO - Forward Pass: tensor([-1.1504, -1.7817, -1.1105,  ..., -0.5206, -1.0930,  0.5185])
2021-05-25 09:09:59,363 - myNeural - INFO - Forward Pass: tensor([ 0.5200,  1.1036,  1.4323,  0.9815,  3.2549, -3.0347,  0.2609,  0.8211,
        -0.4327,  1.5872, -1.2313,  1.4915,  0.2988, -0.9310, -0.2207,  1.8641,
        -0.0629, -2.1078,  0.0708,  1.6987,  0.7659, -1.1189, -1.1402, -2.5141,
        -0.1676,  0.1190,  1.4652,  1.4257,  1.0118, -1.2011,  0.1756, -1.9189,
        -0.6295, -1.2975,  0.5529, -1.2712, -0.5561,  1.9970,  0.8993, -0.6465,
         1.6891,  1.5784,  1.0254,  2.2230, -0.2478, -0.2248,  1.8369,  1.0360,
         0.7156,  2.3653,  1.1570, -0.8494, -1.5080,  0.6398, -0.4039, -1.4930,
        -2.0502, -0.8744, -0.5165,  0.2036,  1.2048,  3.1805,  0.3042,  1.9565,
        -1.2941,  0.2295,  0.6411,  2.0545,  0.0494, -0.2620, -0.2227, -1.4919,
         1.6851,  1.4208,  0.4218, -2.0095, -0.6224,  1.5970, -0.6207,  0.1290,
         0.1282, -1.0603, -1.1873, -2.4077,  0.8308,  1.7315, -0.2144, -0.0515,
         0.9140,  3.4457,  1.0468,  0.8961, -0.8624, -0.6833,  1.7399, -1.1939,
        -2.0462, -0.1660, -2.2098, -0.1918,  2.5246,  0.9994, -0.4504,  0.7504,
        -0.6371,  0.2613,  2.7760,  2.0443,  1.7231, -2.5308, -2.0484, -1.8276,
         0.8725,  1.9286,  0.6122,  0.5687, -0.7527, -1.4033, -0.6281, -0.8824,
         0.3466, -1.7699,  1.3107,  2.6296, -1.8052, -1.8450, -2.9467,  0.5234],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,379 - myNeural - INFO - Forward Pass: tensor([-1.4287, -1.9807, -1.3233,  ..., -0.5728, -1.0629,  0.4622])
2021-05-25 09:09:59,395 - myNeural - INFO - Forward Pass: tensor([-1.6063,  0.6039,  1.5734,  0.3835, -0.5418, -0.3671, -1.1979, -0.5131,
        -0.1634,  0.6593,  0.2149, -2.0437,  0.3538,  0.5729, -1.5567, -0.1490,
        -0.4935, -1.2992, -1.4441,  2.1608,  0.8538,  1.7453,  0.5876,  0.7379,
         1.9495, -1.4087, -1.0060, -0.6797,  0.6010,  0.8990, -0.5971, -3.3027,
        -1.2029, -1.3604, -2.4546,  2.0010, -1.3870,  1.6903, -0.5422,  0.4774,
         0.0507, -1.2035,  1.5236,  1.6550,  1.2011, -2.6915, -0.9375, -1.2999,
        -0.0580,  0.1546,  1.8657, -0.1925,  2.3280, -0.4101, -1.3739, -1.5519,
         1.2550,  1.0538, -1.5483, -2.6024,  0.4582, -1.6650, -1.4403,  1.6254,
         0.2638,  1.7328, -1.2454, -1.4858, -0.7678, -0.4914,  0.2561,  2.7269,
        -0.3574, -0.8687,  2.1372,  0.6497, -1.3885, -0.8563,  1.2419, -1.1159,
         0.0057,  1.0996,  3.1112,  0.2803, -1.9313,  1.0744, -0.1358,  3.1159,
        -2.2230,  0.2737,  1.8781,  0.7599,  2.6325,  0.7757,  1.8843, -1.0328,
        -1.6124, -3.4079, -1.4297, -0.7757,  0.4688,  0.8810,  2.3459, -0.2681,
         0.5465, -2.5167, -1.5580, -0.4659,  0.7756, -0.7118, -0.6381, -0.8468,
         2.8240, -1.7737,  1.3880,  0.9009,  1.0560, -0.6040,  2.7818, -1.3439,
         0.7157,  1.0456, -0.1389, -1.5911,  0.1394, -1.0479, -0.2833,  0.3445],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,410 - myNeural - INFO - Forward Pass: tensor([-1.1859, -1.8315, -1.0254,  ..., -0.2772, -0.7522,  0.6685])
2021-05-25 09:09:59,424 - myNeural - INFO - Forward Pass: tensor([ 2.1522e+00, -4.0896e-01,  1.2693e+00, -1.0465e-01, -2.4132e+00,
         1.4797e+00, -1.7191e+00, -1.8627e+00, -2.1543e+00, -3.3896e-01,
         3.0569e+00,  5.6183e-01, -1.2203e+00,  8.5896e-01,  1.7279e+00,
         1.9907e+00,  2.5750e+00, -9.5812e-01, -5.7570e-01, -1.3759e+00,
         1.0165e+00,  1.9150e+00, -3.5637e-01,  8.1714e-01, -1.2331e+00,
        -9.8795e-01, -2.3019e+00,  2.1545e+00,  8.9089e-01,  1.5709e+00,
        -1.0510e-01,  2.6753e+00, -4.8958e-01,  6.6292e-01,  7.0796e-01,
         3.0835e+00,  2.0081e-01,  1.4799e+00,  1.8305e+00,  5.3684e-01,
         1.0103e+00,  5.9134e-01, -7.3477e-01,  8.1199e-01,  1.0948e+00,
         3.7386e-01,  1.6087e+00, -4.8662e-01,  1.6713e+00,  1.4050e-01,
         2.5532e+00, -5.3842e-02,  2.8193e-01, -5.3062e-01, -4.0254e-01,
         1.0644e+00,  1.5228e+00,  3.3498e-01, -9.0500e-01,  6.1304e-01,
        -2.3758e+00, -4.1333e-01, -1.0205e+00,  2.2072e+00,  7.1627e-01,
         6.7992e-01,  4.4655e-02, -2.0896e+00,  1.1229e+00,  1.7241e+00,
         3.3064e+00,  1.4731e+00, -2.1970e+00,  1.1341e+00,  1.2254e+00,
        -9.8395e-02,  4.1130e-01,  2.6064e+00,  5.6550e-01, -7.6581e-01,
         2.5730e+00,  7.7758e-01, -1.1541e+00, -1.6944e+00,  1.4123e+00,
         1.0427e+00, -1.0748e+00,  1.7033e+00, -1.6910e+00, -1.5535e+00,
         1.9346e+00, -1.9035e+00,  2.7600e+00,  1.8870e+00, -1.4509e+00,
         2.3020e+00,  8.4300e-01,  1.6087e+00,  8.5834e-01, -1.6563e+00,
         1.0108e+00, -6.6277e-01, -1.7485e+00, -1.2310e+00,  1.4574e+00,
         4.3353e-01,  1.7345e+00,  9.3553e-01, -8.0583e-02, -1.1699e+00,
         3.5380e+00,  1.5326e+00,  1.5828e+00,  9.9078e-01, -3.1394e+00,
         1.5971e+00,  6.3354e-01,  4.1773e-01, -1.5363e+00,  9.1706e-02,
        -1.6272e+00,  4.1964e-01,  3.0759e+00,  9.7231e-01, -2.3760e-03,
         2.4814e+00,  2.7033e+00, -1.9006e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,439 - myNeural - INFO - Forward Pass: tensor([-1.2457, -1.8979, -1.1733,  ..., -0.3042, -0.7664,  0.6445])
2021-05-25 09:09:59,453 - myNeural - INFO - Forward Pass: tensor([ 2.5996, -1.6918,  0.5843,  1.2833,  0.5955,  1.6182, -0.9072,  1.2090,
        -1.4793, -0.8191,  0.1800,  0.6557,  1.7963, -0.7133, -2.5139,  0.6186,
        -0.6256, -1.9408,  2.0637, -1.8602,  0.7956, -1.0799, -1.2257,  2.6835,
         0.7163, -0.4905,  1.7896, -1.5392, -1.3509, -0.2967, -1.0553, -2.0292,
         1.2778,  2.2161, -1.3916, -0.5422, -0.2905,  1.0752, -1.0147,  1.8979,
         0.7818,  0.0934, -2.1220, -1.2270,  1.3032,  0.8379, -0.5702,  1.1709,
        -1.9024, -1.6948,  0.0252, -0.1001, -1.6931,  0.0429, -1.0632, -0.4866,
        -1.3303,  1.0297, -0.1694,  0.6219,  1.2327, -0.9781,  0.4630,  1.4764,
        -1.5606,  0.7898, -2.0926, -1.2903,  1.1819,  0.2591, -0.5906,  0.3863,
        -0.2038,  1.4244, -1.6840,  0.4320,  0.3119, -0.1897, -2.2988,  0.0954,
        -0.2720,  0.6911, -0.2560, -0.1863, -0.6306,  2.2946,  1.2149,  2.9111,
        -1.7736, -0.3430,  1.4289, -0.0985,  2.2594, -2.2146, -0.6289,  3.4146,
         2.5620,  1.0534,  0.4312,  0.8952, -3.0508,  2.6023,  2.8335,  1.4860,
         0.0898,  0.9054, -1.7839,  2.1556, -1.5618,  2.4087,  0.6371,  0.2538,
         0.4992,  0.1249, -1.6641,  0.9971,  2.3253, -1.7139,  2.3465,  1.6527,
         0.8985, -0.1759,  3.0187, -1.6085,  1.9092,  0.0285,  3.1341,  0.6602],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,468 - myNeural - INFO - Forward Pass: tensor([-1.4833, -2.1001, -1.4699,  ..., -0.3223, -0.9487,  0.5407])
2021-05-25 09:09:59,483 - myNeural - INFO - Forward Pass: tensor([ 1.4079,  1.3278,  1.5037,  0.1925, -1.4861, -0.6685,  0.6160, -0.7846,
        -2.0379,  0.4983, -0.4793, -0.7711, -1.3243, -1.6120, -0.1798, -0.7325,
        -0.6496, -0.3191,  2.8879, -1.6362, -0.3667, -0.7581, -0.7331,  1.4030,
         1.4411, -0.1930, -2.1976,  4.0045,  1.5033,  1.6368,  0.0342,  1.1372,
         0.1757, -1.8812, -1.0238,  0.2908,  0.8331,  0.8425, -0.6663,  2.8658,
         1.2198,  1.9595, -1.1648,  0.6806,  0.4038,  0.5032,  0.1026,  1.3147,
        -1.3299,  0.6027,  0.3987,  0.4434,  0.0407,  0.4431, -2.1353,  0.4766,
        -1.4719,  4.3061, -2.9253,  1.9113, -1.4619, -0.9333,  2.5677,  1.7020,
        -1.5955, -3.3573, -0.3110, -0.9434,  1.0933, -1.1320,  1.0548, -0.8021,
         1.0318, -2.9130, -1.0472, -2.0109, -0.2021, -0.0655,  2.1656,  2.8407,
         1.3540,  2.1539, -0.1518,  3.2591, -1.6175,  2.0830, -1.2553, -1.9686,
         1.4673, -0.3494,  2.3386, -2.3838, -1.3428, -2.1850, -2.6343, -2.2682,
        -0.7595,  0.4290,  0.3733,  0.9475,  1.6706,  0.9181,  2.5928, -0.2114,
        -3.2047,  0.8393, -0.0195,  1.4131,  1.8319, -1.1432, -1.2439, -2.1735,
         3.2787,  1.7487, -0.5138,  3.4982,  1.4380, -0.4166,  1.6011, -0.0647,
         1.1644, -0.9267,  2.3981,  3.7630,  2.0619, -1.5283, -0.3478,  2.3603],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,499 - myNeural - INFO - Forward Pass: tensor([-1.2437, -1.7877, -1.2198,  ...,  0.0417, -0.6184,  0.7961])
2021-05-25 09:09:59,514 - myNeural - INFO - Forward Pass: tensor([ 7.5532e-01, -4.4112e-01,  9.7392e-01,  4.4605e-01,  8.5675e-01,
        -8.1712e-01,  2.0171e+00,  8.4880e-02,  1.1982e-01, -1.4004e+00,
        -1.7016e+00,  8.5487e-01, -7.4875e-01,  2.0710e+00, -1.0076e+00,
         2.1208e+00,  4.2563e-01,  7.3381e-01, -4.8047e-01, -1.5954e+00,
        -6.6015e-01, -6.4406e-02,  2.7934e+00,  2.4871e+00,  2.6810e+00,
        -5.3816e-01, -1.2869e-01, -1.5588e+00,  1.5600e+00, -3.9573e-01,
        -2.2303e+00,  3.8648e-01,  2.7846e+00,  8.0458e-01,  2.8990e+00,
         4.9311e-01,  1.5798e-02, -5.5000e-01,  7.4197e-01, -1.5902e+00,
         1.1923e+00, -1.2261e+00,  1.3786e+00,  9.7334e-01,  2.0831e+00,
        -2.0931e+00, -3.3356e-01,  8.7816e-01, -2.3732e-01,  2.2504e+00,
         2.1161e+00,  3.4429e-01, -1.3177e+00,  2.0510e+00,  3.3394e+00,
        -3.6096e+00, -2.7768e-01, -7.8329e-01, -2.2416e+00, -1.8831e-01,
        -1.0260e+00, -2.2732e+00, -1.3369e+00,  3.8516e-01,  1.8863e+00,
        -4.3504e-01,  6.0480e-01,  3.4060e-01,  2.7765e-01, -2.5958e-01,
         8.8248e-01,  7.8396e-01, -4.5185e-01, -1.8807e+00, -4.6221e-01,
        -1.8872e+00,  1.3991e+00,  1.7262e+00, -9.1671e-01,  8.4779e-01,
        -8.9325e-01, -3.0601e-01, -1.8563e+00, -1.1742e+00,  4.8421e-01,
        -8.6484e-01, -1.1020e-01,  8.0313e-01, -1.0295e+00,  8.5254e-01,
         2.6256e-01,  7.4426e-01, -3.3847e+00,  1.4849e+00,  9.7520e-01,
         2.2314e+00, -1.6866e+00, -3.9143e-03, -7.4397e-01,  2.3275e+00,
         3.6837e-01, -2.6120e+00,  2.3173e-01,  3.9101e-01,  5.2377e-04,
         8.3574e-01, -8.2698e-01,  1.2990e-01, -1.3088e+00,  1.6193e+00,
         2.1600e+00,  1.4018e+00, -1.5569e+00,  1.7508e+00,  1.0282e+00,
         1.9679e+00, -8.4067e-01, -8.7456e-01, -2.4997e-01,  2.5884e+00,
         1.4820e+00,  2.4291e-01, -1.7215e+00, -9.7758e-01, -7.4176e-01,
         1.4199e+00,  6.1192e-02, -9.7182e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,529 - myNeural - INFO - Forward Pass: tensor([-1.3107, -1.8570, -1.4844,  ..., -0.0888, -0.6569,  0.8493])
2021-05-25 09:09:59,544 - myNeural - INFO - Forward Pass: tensor([-0.5915,  0.4641,  2.8693, -2.2514,  1.1836,  0.7216, -0.9522, -0.2823,
        -3.1930,  0.9229, -1.2827, -0.1055,  2.2697,  0.5985,  1.9088,  0.5657,
        -1.3481, -1.7966, -0.1149,  2.7947,  1.0834,  0.4812,  1.5505,  0.5920,
         1.7628,  0.1616,  0.5889,  1.5651,  0.2638, -1.0389, -1.2199, -2.0400,
        -0.5479,  2.5758, -0.2251,  1.0192,  0.1818,  3.4345, -1.1131,  1.2094,
        -1.2900,  1.7275,  1.7597,  2.1814,  0.9887,  2.7915,  0.7178, -0.2192,
         2.4748, -2.7680, -0.0474,  1.2773,  1.2095,  2.7007,  3.5444,  2.8664,
         2.7099,  2.5712,  1.8714,  2.6271,  1.3163, -2.2911,  2.6597,  2.0949,
         0.6500,  2.9247,  1.1717,  1.0619, -0.7263, -0.5796, -2.1229,  2.9606,
         0.5264, -0.9978, -0.9436, -3.1511,  1.5530,  1.8835,  0.9369,  1.0348,
        -0.4816,  2.3903, -0.8583, -2.5851,  0.8564, -3.0203,  2.0216, -1.0942,
        -2.3764, -1.5467, -1.2911, -1.3825, -1.1252,  0.3606, -0.1394, -1.5202,
        -1.8850, -1.3321,  0.4100, -1.3297, -2.4184, -1.5575,  1.3604,  1.9673,
        -0.4600,  1.3508,  0.2276,  0.2531,  1.5322,  1.0799,  0.6167,  2.6565,
        -0.8742,  0.9521, -0.4784, -0.1517,  0.4513,  0.5613,  2.4523,  1.3572,
         0.2950, -0.9160,  0.2528,  1.2883, -2.0159, -0.7162, -0.4769, -4.0984],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,558 - myNeural - INFO - Forward Pass: tensor([-1.5385, -2.1089, -1.8352,  ..., -0.2810, -1.0099,  0.6258])
2021-05-25 09:09:59,573 - myNeural - INFO - Forward Pass: tensor([ 1.1790,  2.5161, -1.9315, -0.1511, -1.8262, -1.1389,  0.6427, -3.3852,
         0.4325, -1.5189, -3.0792,  2.5274, -0.1741,  2.0674,  0.7032,  0.2448,
        -3.7813, -0.3905, -0.6683, -1.0219,  1.5432,  0.8475, -0.3332,  2.1123,
         3.1945,  2.3125,  0.0285, -1.1106,  1.1641, -0.3024, -0.5646, -0.6666,
         2.9996, -1.6826, -1.5535, -1.5606, -0.1856,  2.3505,  1.6127, -1.3919,
        -2.5037, -2.2715, -1.5668, -0.3341, -3.9522, -1.0286, -1.5537,  1.2402,
         1.4307, -3.7557,  2.6831,  2.5930, -0.3754,  4.2105, -2.1046,  2.8955,
         1.9053,  1.7591, -0.2385, -3.2112, -0.5636, -0.4017, -0.4384,  4.1446,
         0.6193, -0.7549, -1.4877,  2.4826,  0.5698,  1.8370,  2.2309,  0.1561,
        -1.2719,  1.4853,  0.5511, -2.7055,  2.5083, -0.9336,  1.3980,  3.2116,
         1.7455,  0.8890, -1.7174,  2.6292, -0.9145, -0.1777, -0.5932, -0.4297,
         0.7111,  0.4205, -0.2121, -2.8088,  0.6748,  1.3474, -1.8249, -3.9642,
        -1.0950,  1.6598, -2.8335, -0.1172,  3.3794, -2.5755,  1.9596,  2.5139,
        -1.7647, -2.7378, -2.3766,  0.3708, -0.2394, -0.9975, -2.8240, -2.6970,
        -0.3938,  1.7916,  0.8842, -0.0432,  2.3844,  2.7865,  0.4226, -1.3283,
         0.0600, -1.0167,  2.7526,  3.2275,  0.2267,  0.3588, -1.6705, -0.7779],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,588 - myNeural - INFO - Forward Pass: tensor([-1.7588, -2.2525, -2.0815,  ..., -0.6106, -1.3271,  0.3684])
2021-05-25 09:09:59,605 - myNeural - INFO - Forward Pass: tensor([-9.9570e-01, -2.3138e+00, -1.3162e+00, -2.1822e-01,  1.8945e-01,
        -2.8218e+00, -1.2632e+00,  7.1769e-01,  6.1363e-01, -2.4109e+00,
        -1.5228e-01,  1.0550e+00,  1.2333e+00,  1.0938e+00,  7.2759e-01,
        -7.3975e-01,  9.3847e-01,  7.1834e-01, -2.9163e+00, -2.8558e+00,
         3.0205e+00, -1.6270e+00, -1.1597e+00, -2.7522e+00,  1.2506e-01,
        -1.3865e-01,  2.7626e+00, -6.0751e-01,  1.4107e+00, -2.4715e+00,
        -2.7407e+00,  2.0032e+00, -1.9528e+00, -1.2935e+00, -1.0215e+00,
         2.2451e-01,  1.1544e+00, -1.4623e+00,  4.7567e+00, -1.1189e+00,
         6.5631e-01,  2.2794e-03, -8.3691e-01,  1.7209e+00, -1.2577e+00,
        -7.0213e-01,  5.0957e-01, -8.2203e-01,  1.8478e+00, -7.6878e-01,
         2.6231e+00, -2.1817e+00, -1.0576e+00, -2.3725e+00, -1.2409e+00,
         2.1759e+00,  2.0297e+00,  8.9850e-01,  5.0250e-01,  2.6667e+00,
        -2.3496e-01,  6.4284e-01,  3.1714e-01, -2.9711e-01, -2.1072e+00,
        -2.1105e+00, -1.4922e+00,  7.9434e-01,  1.5252e+00, -1.0143e+00,
         1.0252e+00,  1.3494e+00, -1.7457e+00,  3.8983e+00,  1.2003e+00,
        -2.4802e+00, -3.3772e+00, -1.2567e+00, -8.5075e-01, -2.0312e+00,
        -1.3518e+00,  7.5352e-01,  3.2853e-01,  1.4992e+00, -5.0880e-01,
        -5.2875e-01,  7.0052e-01, -1.0582e+00,  1.0852e+00, -1.8723e+00,
        -2.8767e+00,  4.5684e-01,  6.9172e-01,  2.9918e+00, -3.3658e+00,
         7.2477e-01,  3.8519e+00,  1.6305e+00,  3.6329e-01,  7.1378e-01,
        -2.5756e+00, -1.7775e+00, -2.0360e+00, -2.3692e+00,  2.1521e+00,
         2.9116e-01, -7.7195e-01,  5.9096e-01,  1.0356e+00, -2.7062e+00,
        -1.2072e+00,  1.0238e+00, -1.2949e+00,  2.7579e+00,  6.2863e-01,
         1.8217e+00,  6.4204e-01,  2.7036e+00,  1.5310e-01, -1.8251e-01,
         5.8313e-03, -1.3455e+00,  1.5236e-01, -4.4196e+00,  4.9847e-01,
         1.8212e+00,  7.0672e-01,  2.5162e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,621 - myNeural - INFO - Forward Pass: tensor([-1.6671, -2.2672, -1.8091,  ..., -0.2917, -1.1031,  0.4787])
2021-05-25 09:09:59,636 - myNeural - INFO - Forward Pass: tensor([-0.3292, -0.7992, -1.9271, -2.2541,  1.4074,  2.6598,  2.3664, -1.4895,
         0.1059, -1.7423,  2.0061,  2.5691,  1.6626,  0.9042,  3.0282,  0.4476,
         0.7711,  2.0411, -2.3681,  0.0619,  1.7481,  0.1115, -1.5996, -1.9729,
        -0.8702, -1.8504,  0.0205,  0.7667, -2.4097, -1.3176, -0.2081,  1.6842,
        -2.3195,  1.0415, -1.4318,  0.2792, -1.6868, -0.3969, -0.8151, -3.5702,
         2.1343, -0.7449,  0.3404,  2.6585,  2.3775, -3.5484, -1.3875, -2.8960,
         0.9959, -1.9010,  0.3415,  0.3278,  2.1304, -2.8390, -0.3202, -2.2046,
        -4.6322, -1.5228,  4.0531, -0.9468,  0.0344,  3.8879,  0.6835,  1.7021,
         2.2051, -0.5721,  0.2256, -0.9428,  0.3808,  0.2649, -1.2272,  1.1024,
        -0.9226, -2.4104,  0.3537,  0.1005,  1.2612,  0.9538, -0.1952, -0.3400,
        -1.7158,  0.1603,  1.2854,  1.7636, -1.7660,  0.5087,  2.5552,  1.1573,
         1.2248,  1.8901, -2.1010,  0.7558, -2.7785,  0.4642,  1.2738, -0.4168,
        -0.0459,  1.8643,  0.4099, -0.8555,  2.5719, -0.6924, -1.0866,  1.2132,
         1.3617, -2.1524, -0.1499, -1.7140,  2.4838, -2.0320, -0.2772, -0.7790,
         1.8520, -0.5488,  0.6652,  1.1638, -2.7133, -1.0943,  1.2460, -0.5149,
         1.0589,  2.4049,  0.1721, -2.3079, -0.3285, -1.5106,  2.6382, -0.3782],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,652 - myNeural - INFO - Forward Pass: tensor([-1.7317, -2.2826, -1.7446,  ..., -0.3760, -1.0778,  0.5983])
2021-05-25 09:09:59,664 - myNeural - INFO - Batch 60 -- TrainLoss: 0.41125 -- TrainAcc: 82.81250% -- TestAcc: 80.55000%
2021-05-25 09:09:59,668 - myNeural - INFO - Forward Pass: tensor([-0.7940, -1.9744,  2.1180,  0.4639, -1.1871,  1.2816, -0.8584,  1.7868,
        -2.3020, -0.8934, -2.7162,  2.5506, -0.9713,  1.8868, -1.0387, -1.6680,
        -0.3643,  0.8026,  2.1410,  3.9393, -0.2324, -1.5658,  0.5235,  1.0945,
         3.6830, -0.9830,  0.8773, -0.6606,  2.9418, -1.1679, -2.5924,  0.9498,
         3.4026, -1.9975, -0.6960, -2.4115, -0.4213, -1.4724,  1.7806,  0.9025,
         1.6895, -3.9921, -0.8349,  3.5523,  1.2672,  0.0433,  0.6200, -0.2439,
        -2.2442,  0.5529,  0.0664,  0.3687,  1.3719,  1.0452,  0.9749, -1.3166,
         1.1681,  1.6442, -1.1976, -1.8990,  0.6623,  0.1178, -1.7668,  3.2982,
         4.0618,  0.1730,  0.0276,  2.1934,  0.0188, -1.0912,  0.7413, -0.5058,
        -0.1206, -0.5085,  2.7028,  0.7120,  0.4835, -0.2062,  2.0576, -0.7317,
        -3.9564,  1.8271,  0.8097, -0.9482,  2.0469, -2.6129, -0.2808, -2.5930,
         0.6304,  0.9076, -2.1574,  0.8473, -0.7125, -1.6751, -0.8439,  2.5341,
         0.1082,  0.5163,  2.0768, -2.3326, -1.4187, -2.4032,  1.4267,  3.0474,
         0.5881, -0.8989, -3.0790, -1.5919, -0.0460, -2.6936, -0.4039, -1.9995,
         0.9199, -3.4457,  1.7699,  2.7173, -0.9552, -1.7399,  2.6638,  0.9156,
        -3.1326, -0.9178, -0.1880,  2.6704, -0.9053, -0.3499,  0.4258,  1.2524],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,683 - myNeural - INFO - Forward Pass: tensor([-2.0215, -2.3194, -1.8031,  ..., -0.6057, -1.3806,  0.5644])
2021-05-25 09:09:59,700 - myNeural - INFO - Forward Pass: tensor([ 1.6342, -0.4334, -2.1852,  0.9305, -3.0831, -2.6233,  3.0338,  1.4608,
        -0.1409, -3.6177,  1.0239,  3.4119,  1.6572, -3.4504,  1.0748,  0.3710,
        -1.4860,  3.3792,  0.5336, -0.5898,  5.2580,  3.5485, -0.7041,  0.1296,
        -2.1361,  2.4241, -3.9878, -2.6277,  1.4751, -1.1948, -3.8901,  2.9599,
        -1.8701, -1.0040,  1.7519,  2.4828,  0.1471,  0.8933, -1.0928,  0.3710,
         1.4806,  3.5793,  1.2084, -2.6277,  1.2915, -1.1365, -0.7186, -1.0726,
         0.8282,  2.3447,  3.3593,  2.1607,  0.2279, -2.1974, -2.2086, -2.8558,
        -1.6374,  3.0122, -0.4015,  0.5315,  0.2977,  2.1087, -4.2013, -1.6002,
         0.6727, -1.8236, -0.3626, -1.3243,  3.5818,  0.4991, -0.3481, -1.7551,
        -1.0543, -0.1699, -1.0062, -0.5382, -0.9913, -4.2433,  1.3500,  0.5082,
        -1.6898, -0.5387, -0.1410,  3.1119, -1.4940,  0.9583, -3.3120,  0.3059,
         1.4519, -2.8860,  0.4995,  0.5603, -0.4708, -0.3547, -1.9969,  0.7694,
        -2.2655, -0.4795,  0.2047, -1.2272, -1.2434, -3.8723, -0.3825, -1.6915,
        -2.1726, -0.0372, -0.0225, -1.8914,  3.1267, -0.3119,  0.1332, -1.8883,
         0.2022, -1.3622,  1.1024, -1.5440,  0.9346, -0.1003,  3.3571,  0.0514,
        -0.8301, -0.4968,  1.2216,  0.0463,  2.6999,  1.2932, -0.6013,  2.5695],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,715 - myNeural - INFO - Forward Pass: tensor([-2.4664, -2.5805, -2.1316,  ..., -0.8909, -1.7223,  0.3196])
2021-05-25 09:09:59,732 - myNeural - INFO - Forward Pass: tensor([-1.5800,  2.2062,  0.9858, -2.1792,  4.6765,  2.1831, -1.2772,  0.2858,
        -1.8168,  0.5989, -0.7721, -0.3420, -0.9945,  0.6696,  0.4868,  2.2627,
        -2.1617,  0.0121, -0.1406,  2.6871, -0.9020,  0.1606, -2.3883,  0.3782,
        -1.4870,  0.1083,  1.2327, -3.0138, -1.2414,  2.9501, -0.3310,  2.6611,
        -1.8345,  0.1887,  1.0627,  1.7130, -3.2404, -1.2257,  1.1800,  0.6404,
         0.1314,  1.7596, -1.1736, -2.5637,  0.8580, -0.9663,  0.1833,  1.6592,
         0.6798, -3.7883, -1.7693,  1.4278, -1.8242, -0.2910,  2.7509, -2.6720,
        -1.8037,  2.8952, -2.1705, -2.2510, -1.8872, -0.4529, -3.5968,  2.2703,
        -0.5403, -0.1378, -2.7400, -1.8930, -0.8830,  1.3479,  0.6686, -2.4041,
         2.7603, -1.4440,  2.9868, -2.5577,  0.3424,  0.3243, -2.2998,  1.7837,
        -0.5606,  2.4687,  1.9202,  2.2059,  1.5570, -0.7158,  0.6250,  1.0257,
        -0.9349,  0.0457, -0.2095, -0.5292,  0.5330,  0.1390, -0.9325, -2.6081,
         2.1725,  2.8413, -2.8812, -0.1899, -1.1525, -1.7230, -0.6896, -2.8338,
        -0.6313, -1.9891,  1.2415,  1.4039, -1.7252,  4.0716, -0.9840, -1.0852,
        -0.0653, -3.4437,  1.5465,  1.1900, -1.8969, -0.0328, -2.2424, -2.0414,
        -2.4883,  0.0416,  3.0123,  0.0187, -0.4421, -0.6005, -0.6637,  2.3971],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,746 - myNeural - INFO - Forward Pass: tensor([-2.2862, -2.4756, -2.0550,  ..., -0.7736, -1.4930,  0.3639])
2021-05-25 09:09:59,762 - myNeural - INFO - Forward Pass: tensor([ 0.1204,  2.0973,  1.8691, -2.7216, -0.0817,  1.2435,  0.5420, -1.0697,
        -0.2524,  1.2391, -2.8148,  2.4390, -2.0378, -2.3681, -2.9075,  2.2714,
         0.2119, -1.2420, -2.4780, -2.0589, -2.1221, -0.8465,  3.3926,  1.2987,
         1.5689,  0.2646,  1.9865,  1.4119,  1.0699, -0.2382, -0.2382, -1.0538,
        -0.0736, -2.1684, -2.1024, -2.7779, -1.9191, -3.6253,  0.8461,  2.6722,
        -3.9906, -0.8464, -0.1287, -0.7394, -0.9631,  4.5158,  1.8658,  0.3283,
        -3.5256,  0.3410, -1.7001,  0.2463,  2.1398, -0.9664, -2.5380,  1.3315,
         2.6466,  1.9901,  0.4643, -1.9440, -1.8996, -1.8924, -1.6605, -1.0523,
         2.0861, -2.6651, -3.3459, -1.1099, -1.3788, -1.8884, -1.2921, -2.4450,
         0.9051,  4.5008, -3.8473, -0.6712, -1.4826, -0.9524, -0.3831, -2.8267,
         2.0631, -1.6375,  0.6237,  0.1431, -0.0514, -3.0749, -0.9729,  0.1407,
        -2.8132,  2.7168, -2.1738,  2.3954,  0.7717,  0.2705, -0.8233, -0.1273,
         0.8558, -0.3016, -0.6991, -0.5910, -2.0810,  2.4707,  3.1271,  0.0443,
         0.0438, -2.1145,  0.9028,  0.5261,  0.9693,  1.2637, -5.5305,  0.9008,
         1.3308, -3.1638,  2.8593,  0.5951,  0.6482,  1.7583,  1.7038,  2.2733,
        -1.3829,  3.9483, -0.8088,  0.3516, -2.4924, -1.5486,  1.8894, -0.1783],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,777 - myNeural - INFO - Forward Pass: tensor([-2.5863, -2.7267, -2.3333,  ..., -1.1462, -1.8620, -0.0205])
2021-05-25 09:09:59,792 - myNeural - INFO - Forward Pass: tensor([-0.4555,  3.9110, -0.8981, -1.7402,  0.4971, -3.0893,  0.3388, -1.9545,
        -1.1952,  0.3727,  0.4812, -1.0168,  2.9262,  0.6011,  2.3138, -1.7047,
        -1.1569,  0.1572, -3.5787, -0.5117,  3.5103,  1.4772,  1.1829,  0.2197,
        -1.9915,  1.6839,  2.2787, -1.9385, -1.1434, -2.4950,  1.2831,  0.4485,
         0.8095, -0.9150,  1.1308, -0.1525,  3.3155, -0.6392, -1.1500, -2.7485,
        -0.9624, -1.0845, -2.3067, -3.6084,  2.4848, -0.3386, -0.7003, -1.0742,
         1.4038,  1.4605, -1.9455, -3.0266, -0.8033,  0.0747,  1.4753, -2.4956,
        -6.0774, -0.9901, -1.2646,  0.9284, -2.4386,  0.1564,  1.0251, -1.8307,
         2.0209,  0.3858, -2.5471, -3.8014, -1.2020,  3.6219, -1.6598, -0.1419,
        -0.5276,  1.8626, -2.2472, -1.1025,  1.0193, -0.8261, -0.4357, -3.6699,
        -3.6363,  0.4552, -2.5468, -2.9254, -0.5840, -2.1246, -2.5161,  0.9453,
        -1.4456,  2.1161, -0.9131, -2.7542,  3.8568, -1.4450,  2.7708, -0.4919,
         2.9816,  2.2117,  1.9616, -1.6296, -0.0424, -0.2017, -1.4358,  0.4609,
         0.6202,  0.2850, -1.8987,  0.2596, -2.4856, -0.4758, -0.2209,  1.6077,
        -2.8408,  1.0751,  1.3451, -2.2111, -1.2794, -2.6557, -0.4552,  0.2840,
         2.0422,  1.0615, -0.2092, -2.1307,  0.8972,  1.0473, -4.1558, -2.2913],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,806 - myNeural - INFO - Forward Pass: tensor([-1.5077, -1.9735, -1.6032,  ..., -0.0262, -0.8895,  0.6255])
2021-05-25 09:09:59,823 - myNeural - INFO - Forward Pass: tensor([-0.7326,  1.3872,  0.3519, -0.4501,  0.9067,  1.2242,  1.6231,  0.5294,
         3.1974,  1.8880,  0.0976,  2.8157, -3.3914, -1.8176,  3.5473, -0.9457,
        -3.5744, -0.3022,  3.1282, -0.4477,  0.5832,  2.0099, -0.3741,  1.5005,
         3.0707, -0.6615, -0.8418,  3.1222,  0.8192, -1.6451,  2.7115,  2.3638,
         3.2243,  1.6679, -0.3853, -1.7075, -0.9393,  4.2821,  4.2425,  0.0776,
         0.1314,  3.1691, -0.2265, -1.0515,  1.3805,  1.1902,  0.7705, -2.6000,
        -1.5446,  0.8724,  0.3741,  1.1878, -2.0930,  2.8701, -1.9346,  0.0718,
         0.5795,  0.2037, -0.7075, -2.7351,  2.9906,  5.5206,  1.2867, -0.9293,
         2.1349, -0.6020,  0.1582,  2.8223,  2.2788, -0.2114, -2.7112, -2.1843,
        -2.4798,  1.1288,  3.4685,  0.2489,  1.6847, -1.9347, -2.5135,  0.3297,
         3.7701, -0.2433,  0.5889,  2.7041,  2.4067, -1.1915, -2.4953, -0.4081,
        -1.5369,  2.4077, -0.6294, -0.6615, -1.6032,  0.7882,  0.2783,  1.6397,
         2.6891,  2.5845,  0.7646,  0.4384, -0.8836,  1.6184,  3.2930,  1.2016,
         2.4246, -1.1540, -0.2375,  2.1795, -1.3406,  0.3905,  3.1493,  5.9175,
        -0.4213,  3.0460,  0.7891,  1.3587,  0.5064,  2.7454,  2.3832,  1.5451,
        -2.4770, -1.0303, -0.3942, -2.6497, -1.1529,  0.1436,  2.3602, -2.0401],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,838 - myNeural - INFO - Forward Pass: tensor([-2.6186, -2.8895, -2.6318,  ..., -1.2017, -1.8938, -0.3811])
2021-05-25 09:09:59,854 - myNeural - INFO - Forward Pass: tensor([ 1.2295, -3.4044, -2.4905,  1.7632,  0.2438, -2.0603,  0.6753, -0.3234,
        -3.9027,  1.1445,  0.3085,  3.1127, -1.9591,  1.0058,  0.2278,  1.3866,
        -1.4725, -0.3017, -0.1449, -0.7331, -0.7475, -0.8638, -4.7315, -1.5105,
        -3.2940, -0.0506, -0.9858, -4.8561,  3.1614, -2.1304,  1.0031, -2.0315,
        -3.1587, -1.2457, -2.3233, -3.2664, -0.5082, -3.3298, -2.9216,  2.9352,
         2.2625,  0.8330,  0.5848, -1.8553, -2.9428, -0.8590,  0.6640,  1.1691,
         3.3444,  2.2572, -0.8579, -2.4992,  0.9658, -1.1697, -1.9166, -0.0465,
        -0.1214,  0.4942, -0.1380, -1.3626, -2.3756, -3.2515, -1.6951,  0.6446,
         2.5709, -4.3744, -1.4471, -0.3367, -1.0367, -0.2147,  0.9671,  0.2474,
        -1.0795, -1.1777, -0.0280,  0.6698, -1.0951,  1.8160,  2.0626, -2.9895,
        -2.3162,  0.3672, -1.9347, -2.2746, -2.0336, -0.4084,  0.3295, -2.0633,
        -0.4548, -3.8206, -1.5282, -1.1777,  1.8566,  0.8015, -1.5620, -0.4613,
        -1.7729, -1.3466,  1.2651,  2.6839, -0.5644,  2.8760, -0.7293, -0.9455,
        -2.2696, -1.7135, -3.0360,  4.9200, -3.3901, -4.0300,  2.5005,  1.6897,
        -0.8259,  0.5770,  1.2094, -1.8487, -2.2960, -2.2861,  0.7239,  1.8688,
        -0.0926,  0.0292,  4.9781, -2.6178,  4.9004,  2.6489, -1.9553,  2.6251],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,871 - myNeural - INFO - Forward Pass: tensor([-2.1258, -2.4821, -2.0823,  ..., -0.6813, -1.5515,  0.2869])
2021-05-25 09:09:59,889 - myNeural - INFO - Forward Pass: tensor([ 0.9922, -1.8372,  1.1862,  2.6369, -1.4759, -3.4310, -1.8786, -3.0075,
         2.4904,  3.0761, -0.2643, -0.0917,  2.1144,  3.8977,  0.1968,  2.2224,
        -1.2511, -1.2105,  0.4883, -0.7200, -4.6638, -0.5460, -1.8456,  4.3169,
        -1.4004,  0.5096,  1.8638,  1.0503,  0.2096, -2.5917,  1.9962, -2.0888,
        -1.6912, -3.3160,  2.0281, -2.4241, -1.8357, -1.0813,  0.7264, -2.6334,
         2.3549,  0.3096,  0.5174, -1.5896,  4.4633,  1.8184, -3.3117,  2.6624,
         2.3967, -0.3427,  3.5270, -0.1172, -4.5481, -1.8576, -1.3588, -0.7476,
        -2.2403, -1.7082,  1.8341,  0.9374,  0.9302, -2.8895,  4.2652, -1.6691,
         3.9608,  1.7522, -0.0921,  0.1755, -2.4494, -1.2007,  1.9470, -0.4612,
         2.2859,  0.9652, -0.0311, -4.2860, -3.3478,  1.4111,  2.3650,  0.9855,
        -2.1952, -2.5373,  3.0924,  0.4818, -2.4458, -1.0282,  2.1838, -1.4216,
         1.0763, -1.8118, -1.2061, -0.0236, -0.7403,  2.6527, -0.5178,  2.3524,
        -0.2918, -1.2839, -1.6778,  2.8074,  2.8720,  3.3275,  2.3716, -2.7112,
         1.0087, -2.4472,  2.3640,  2.5151, -2.3299,  1.2571, -0.7127, -0.1094,
        -0.9360, -2.0592, -2.2266,  1.4242, -1.1304,  0.9912,  0.9301,  1.0631,
        -1.7662, -0.4707,  0.5001,  5.5482, -2.8428, -3.7820, -1.3533, -2.7385],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,905 - myNeural - INFO - Forward Pass: tensor([-2.1021, -2.4715, -2.0869,  ..., -0.8176, -1.6011,  0.2760])
2021-05-25 09:09:59,920 - myNeural - INFO - Forward Pass: tensor([ 6.2446,  1.6507,  1.3463, -0.3834, -1.2588,  0.8044, -2.9213,  0.1224,
        -1.5697, -0.4683,  2.8174,  3.1581, -0.7884, -0.5887, -0.8058,  2.1695,
         2.9190, -0.6832, -1.4045, -0.8402, -3.2566, -0.4002,  0.1891,  3.2458,
        -1.7592, -1.5220, -0.4092, -3.6823, -0.0373, -2.7231, -2.6290, -1.5338,
         1.4646, -0.9500,  0.0171, -0.7523, -2.3577, -0.6228, -3.5500, -1.7610,
        -4.0820, -0.8380, -2.4297,  2.4623,  1.5833,  4.0294, -2.2693,  1.2428,
        -2.5251,  0.0338,  1.1191, -0.0596,  1.6408, -2.5131,  2.4583, -0.5099,
         1.1612,  0.0883, -0.1253,  2.4226,  2.8174, -2.4550,  2.3892, -2.7049,
         0.6268,  0.5493, -0.7389,  3.4131, -0.2248, -2.6429,  2.1259,  0.6862,
        -1.5656,  4.8176, -0.2329,  0.5897, -1.9276,  2.1433,  0.4800,  1.4490,
        -1.7004, -1.1095,  0.9958,  0.0371, -1.8357, -2.3200, -2.6805, -2.9382,
        -0.7783, -1.6729,  0.3713,  2.4873, -0.1558, -0.5526, -3.1092,  3.4326,
         2.3012, -2.9973, -2.3165,  1.2669, -1.0993,  0.1913, -1.5727,  0.6180,
        -4.5764,  2.6007,  1.8450, -0.5210,  0.1456,  1.7450, -2.0778,  0.0845,
        -1.8546,  2.2725,  1.3123,  2.2588, -2.5430, -1.6226, -0.2698,  1.3064,
        -3.6867,  3.4777, -1.4798,  3.6133,  2.3315, -1.4858,  0.5021, -0.9469],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,934 - myNeural - INFO - Forward Pass: tensor([-1.8053, -2.2805, -1.8159,  ..., -0.5485, -1.3096,  0.6194])
2021-05-25 09:09:59,949 - myNeural - INFO - Forward Pass: tensor([-4.3044e-01,  1.6614e+00,  1.1598e+00,  7.4310e-02,  2.3561e+00,
         3.3634e+00, -7.1917e-01, -1.0866e+00,  3.0882e+00,  6.1684e-01,
         1.7705e-01,  4.4449e-01,  2.6927e+00,  5.2249e+00,  2.6540e-01,
         4.8328e+00,  1.6304e+00,  1.1406e+00, -2.7242e+00,  2.8352e+00,
         9.5040e-01, -1.0969e+00,  1.2215e+00, -1.7531e-01,  3.4980e+00,
         3.6198e+00, -7.2654e-01, -7.3114e-01, -2.7283e-01, -2.9444e+00,
         2.6408e+00,  1.6512e+00, -9.2418e-01, -2.1869e-01, -3.1588e+00,
        -1.4089e+00,  2.6797e+00,  2.7864e+00, -1.7630e+00,  2.7176e+00,
         2.3721e+00, -1.5592e+00, -1.4773e+00, -4.6141e-01,  1.9150e+00,
         1.9145e+00, -7.9939e-01, -7.2303e-01,  1.6243e+00, -8.5327e-01,
        -9.3164e-01,  1.7236e+00,  3.1992e+00,  2.3986e+00,  4.0126e+00,
        -6.3460e-01, -2.2671e+00, -3.2111e+00, -3.6587e+00, -2.3788e+00,
         6.9503e-02,  4.1004e+00, -2.8618e-01,  2.2229e+00,  3.4228e+00,
         1.2745e+00,  1.8859e+00,  2.2279e+00, -2.8457e+00, -9.7190e-01,
        -3.8967e+00,  4.2143e+00, -2.6445e-01, -4.4313e-01, -1.6690e+00,
        -6.6380e-01,  2.6668e+00,  3.1114e-01,  4.8244e+00, -1.9454e-01,
         2.7444e+00, -2.8259e+00,  1.2242e-01,  2.6304e+00, -1.7476e+00,
        -1.4229e+00, -5.9376e-01, -1.3601e+00, -1.0199e+00, -1.9884e+00,
        -2.8988e+00, -1.6816e+00, -1.3603e+00, -2.0548e+00, -3.1746e+00,
        -3.0908e+00, -1.5865e+00,  2.3844e+00,  3.1838e+00,  2.0310e+00,
        -4.1524e-01, -1.2093e+00,  1.9368e+00, -3.0911e-01, -1.9069e+00,
        -3.7130e+00, -1.9854e+00,  3.0800e+00, -7.6635e-01, -2.3718e+00,
        -2.8446e-03,  3.7609e+00, -2.8889e-01, -2.6592e+00, -1.1406e+00,
        -2.2064e+00,  5.8505e-01,  2.8929e+00, -8.3535e-02,  2.2915e+00,
         2.1898e+00, -1.0671e-01, -9.6859e-01,  4.7987e+00, -1.8167e+00,
         1.0243e+00, -3.6531e+00,  3.0494e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,964 - myNeural - INFO - Forward Pass: tensor([-2.3574, -2.8249, -2.1557,  ..., -0.9108, -1.8078,  0.1003])
2021-05-25 09:09:59,980 - myNeural - INFO - Forward Pass: tensor([-0.8026, -2.3310, -2.7777, -1.9325, -0.6686, -1.3610,  1.8639,  0.6201,
        -0.5154, -4.6643, -0.2483,  2.9084,  4.4777, -3.2820, -1.2929,  2.8333,
         1.1957, -3.6152, -1.3136, -2.6553, -1.0222, -1.0875, -0.7531, -1.2525,
        -0.4017,  0.1706,  0.1811,  0.7385, -2.0616, -1.6659, -0.2512,  0.0537,
        -0.9351, -2.6424,  2.7106,  2.3333, -1.0810, -1.2380,  2.0270, -1.1940,
        -0.3207,  0.3876,  1.9389,  0.9386,  1.6891,  3.7564,  0.9271,  0.3881,
        -0.0794, -3.9132, -2.4352,  1.9954,  1.1840,  0.1137, -0.1991,  2.4255,
         0.1311,  3.8454, -3.3331, -3.6803,  2.4826,  0.5313,  0.8095,  3.2608,
        -1.6484,  2.4290, -2.9759, -2.4746,  0.2465, -1.1064,  1.6843,  0.9386,
        -1.0972,  5.2939, -0.4849, -1.0317, -0.0717, -3.5699,  0.3215,  2.5763,
        -3.9334, -1.5752, -1.7405,  0.4429,  1.6980, -0.3685,  1.8661, -1.0810,
         0.3973,  1.0893, -1.2867, -3.2938, -0.5734,  0.3733, -0.3533,  1.8239,
        -0.9107,  3.6092, -0.6358, -1.9080, -1.8157,  0.0215,  2.3329,  1.2184,
        -0.5563,  3.5236,  3.0109,  2.2888, -2.9495, -4.4425, -0.9248, -3.6044,
         1.9382,  0.9366,  1.1171, -2.7315,  2.2292, -1.5426, -2.3257,  1.6333,
         2.1619, -1.1873, -2.1466, -3.4666,  4.4373,  2.3522, -3.1823, -2.7668],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:09:59,995 - myNeural - INFO - Forward Pass: tensor([-1.8815, -2.5671, -1.6401,  ..., -0.4389, -1.5419,  0.1912])
2021-05-25 09:10:00,011 - myNeural - INFO - Forward Pass: tensor([-2.2152e+00,  1.7909e+00, -2.2451e-01, -4.2968e+00, -1.6217e+00,
        -2.7374e+00,  5.1855e-01,  4.6231e-01,  2.3505e+00,  1.3103e+00,
        -3.8617e+00, -2.5364e-01, -2.4030e+00,  2.0996e+00,  5.2540e+00,
         2.8364e+00,  1.5632e+00,  1.9987e+00, -3.7801e-03,  1.6067e+00,
         2.6387e+00, -2.0679e+00,  1.8021e+00,  1.5797e+00,  1.1440e-01,
        -3.3486e+00,  4.8086e+00, -1.8316e+00, -2.2204e+00,  1.3203e+00,
         1.5384e+00,  1.3146e+00, -8.9773e-01,  9.2827e-01, -4.4138e+00,
        -3.4256e+00, -3.3202e+00, -1.7536e+00,  1.6851e+00, -5.8406e-01,
        -7.1112e-02,  8.6195e-01, -4.9633e-01,  2.8197e+00, -2.9505e+00,
        -1.6538e+00, -6.4659e-01, -5.6879e-01,  8.0887e-01, -3.7418e+00,
        -1.3686e+00, -2.0009e+00, -1.1833e+00, -1.1459e-01,  3.5143e+00,
        -2.0633e+00, -2.2861e+00,  2.2059e-02,  1.6964e+00,  2.5267e+00,
         2.5960e+00,  1.2651e+00,  2.9809e+00,  1.6969e+00, -1.5105e+00,
         2.1399e+00, -8.5621e-01,  3.9895e+00,  2.5568e+00, -5.1949e+00,
         2.3340e-01, -3.4650e+00, -5.2283e-01, -2.5353e+00, -7.5602e-02,
        -3.6320e+00, -4.7720e+00, -3.8403e+00, -1.6826e+00, -1.4852e+00,
         2.7234e-01,  2.4326e+00,  1.7179e+00,  6.4883e-01,  3.2752e+00,
        -8.9224e-01, -4.6102e-01,  4.1656e+00, -1.6672e+00, -7.9857e-01,
         2.1397e+00,  2.7659e+00,  6.1004e-02,  7.1473e-01,  6.4153e-01,
         4.9702e-01,  1.2679e+00,  1.2344e+00, -3.0053e+00,  9.0462e-01,
        -2.9352e+00,  2.7279e-01,  8.6849e-01, -3.7719e+00,  1.4652e+00,
         4.8818e+00,  2.0769e+00,  2.4721e+00, -3.3881e+00,  8.4751e-01,
        -3.1253e+00,  3.7569e-02,  2.1702e+00,  1.8163e+00, -2.7506e-01,
         1.3934e+00,  1.0882e+00,  5.2589e-01,  3.6330e+00, -2.0930e+00,
         2.9234e+00, -4.6920e-01,  1.9449e+00,  1.8198e+00, -3.5566e+00,
        -2.5413e+00,  3.4413e+00, -1.2356e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,026 - myNeural - INFO - Forward Pass: tensor([-2.0509, -2.6084, -1.7552,  ..., -0.5138, -1.5324,  0.1312])
2021-05-25 09:10:00,041 - myNeural - INFO - Forward Pass: tensor([-0.7295,  2.5133, -3.5773, -0.4283, -1.6863,  0.6481, -1.9964,  0.5306,
        -1.2845,  1.7162,  1.2757,  0.9277,  1.9251, -0.2206, -0.8213,  0.0519,
        -1.5860,  0.5541,  3.3407,  1.4439, -0.0362,  0.2335,  0.8700, -1.6095,
        -3.0672,  4.1447,  0.0649, -1.5926,  2.4289, -3.7976,  1.2461,  1.2196,
        -0.2254,  2.9838, -1.4938,  0.0886,  3.5930,  3.4807, -1.6976,  2.4421,
        -2.5371, -2.4314,  2.2414,  0.6252,  0.4840,  0.3454, -1.8624,  2.4290,
        -2.7224, -0.0902, -1.5160, -1.4415,  2.7464, -1.7851, -0.6928, -0.0511,
        -2.4708,  0.5235,  6.1382,  1.6428,  0.3191,  3.6626,  3.1896, -2.1204,
        -1.5629,  3.6745,  0.7908, -3.6191,  2.2407, -0.5226,  0.3240, -0.4791,
         0.8891,  1.5672,  3.8023, -0.3105, -5.3443, -2.2111, -1.2381,  4.8837,
         0.6209, -0.0525, -0.4553, -4.3170,  1.5710,  0.2535, -1.1463,  4.9333,
         2.1360, -0.7839,  2.8949,  0.6556, -1.2247, -0.7510,  2.4547,  3.1784,
         0.5979, -0.8126, -0.2906, -1.0980, -2.7183, -0.5514, -1.1412,  0.4937,
        -0.9887, -1.9074,  1.5228, -1.0295,  2.3024,  5.1114,  3.1475,  2.5058,
        -0.9512,  0.1752, -0.0496,  0.5157,  3.7989,  6.2849, -2.3508, -0.4901,
        -1.4298,  0.0144, -4.1246, -1.1127, -2.3651, -2.1866,  3.2174,  2.2624],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,057 - myNeural - INFO - Forward Pass: tensor([-2.0483, -2.6863, -1.7836,  ..., -0.4828, -1.5591, -0.0279])
2021-05-25 09:10:00,071 - myNeural - INFO - Forward Pass: tensor([-0.6057,  2.0893,  0.0634,  1.3639,  3.6752,  3.7430,  0.6537, -3.0373,
        -0.0907,  1.7307,  2.0459, -2.4461, -0.2032, -2.1128, -3.8205, -2.4000,
        -2.4213,  0.2288,  0.7894, -0.8723,  4.8025,  3.3179, -0.9669, -1.4656,
         0.9458, -0.5319,  2.6381, -0.5947, -2.6292, -1.0691,  3.3147,  3.1799,
         2.6581,  0.0168,  0.4279,  1.1583, -0.9168, -3.0007, -4.1797,  1.4879,
        -3.2303, -1.9422,  3.7110,  1.1228,  0.8716,  1.2179,  2.8807, -3.6899,
        -0.6836, -2.2234,  3.3092,  1.8497,  1.2308, -4.4172,  2.1354,  3.1595,
        -2.4845,  2.8458, -3.5867, -1.3848, -0.9625, -0.9182, -3.3421,  3.8839,
        -3.7481, -2.7817, -2.8549,  0.5537,  2.3845, -0.5571,  2.9462,  3.2813,
         0.3639,  0.7532, -2.3102,  4.0270, -0.0927, -3.8350,  1.3548,  4.4382,
         0.8810,  3.9204, -1.4177, -4.1093,  1.6063, -1.8533, -1.4970, -0.7406,
        -2.3959, -0.7150, -3.4539,  0.7205,  1.1992,  1.9432, -0.3016,  2.0878,
        -1.3752, -1.8522,  0.0778,  4.1460, -2.1216, -2.6925, -1.6460, -0.8738,
         2.3464, -2.2372, -1.5613, -0.4651, -0.0547,  1.1204, -1.1298,  3.6080,
         1.1678, -0.4701,  1.9086,  1.3292,  0.2819,  1.2002, -0.3005,  3.6387,
         4.4801, -2.2689,  0.4932,  1.0244, -2.0145, -1.0945,  1.8575,  2.1773],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,085 - myNeural - INFO - Forward Pass: tensor([-1.8019, -2.5442, -1.6742,  ..., -0.2436, -1.3206,  0.2760])
2021-05-25 09:10:00,100 - myNeural - INFO - Forward Pass: tensor([ 1.9927,  0.4686, -0.8542,  3.7733, -0.5133,  1.0018,  1.7880,  0.5659,
        -2.5969,  1.8440,  0.5038,  3.1462, -0.4878, -1.3875,  2.8097, -0.4743,
         0.8222,  4.0294,  2.5830, -3.0112, -1.9746,  3.4419, -5.4836, -2.9653,
        -3.3268,  0.5697,  1.4642, -3.3214,  0.1363,  0.5954,  5.4002,  3.2770,
        -1.1737,  1.4227,  1.8205,  0.4482,  1.9657,  1.4646, -1.8086,  0.3195,
         1.6698,  0.0397, -2.0814,  1.4763,  1.0507, -1.7428, -1.6715, -0.4126,
         3.3170, -0.7891,  0.0526, -1.8874,  4.0544, -2.5697, -1.0028,  3.3362,
         0.7098,  1.2155, -3.6874, -1.6800,  3.2442,  4.2950, -1.4347,  2.2209,
        -2.4146, -1.6957,  1.1364,  0.3993,  1.4343,  0.0875,  0.2941, -0.0930,
         0.0716, -0.9881, -3.7033, -1.6948,  2.9069, -1.1081,  1.1655, -0.8686,
        -0.6404,  0.6103, -1.1810,  0.5204,  2.9847, -0.5652, -1.6514, -1.7613,
         0.0778,  3.4383,  3.7970,  3.1283, -1.3773, -3.9236,  4.3714,  0.3301,
         0.0984, -1.6722, -1.4273,  3.9621, -0.1900, -3.8155, -2.0330, -1.6105,
         1.0009, -1.7385,  1.1148,  2.7452,  1.6117, -0.1488, -1.7135,  0.9514,
         2.0542,  1.9498,  3.0035, -2.8056, -1.1019, -2.8908,  0.4161,  2.6693,
         0.3773, -0.3499,  0.9295, -0.9205, -1.7118,  2.9308, -2.7870,  2.6226],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,115 - myNeural - INFO - Forward Pass: tensor([-1.8889, -2.7988, -1.6240,  ..., -0.3972, -1.3199,  0.3206])
2021-05-25 09:10:00,129 - myNeural - INFO - Forward Pass: tensor([-7.5253e-01,  1.3774e+00,  7.9795e-01, -3.4396e+00,  1.4227e+00,
         7.9645e-01, -1.4236e+00, -5.8633e-01, -5.9084e-01, -5.1925e-01,
         8.1977e-01, -2.0114e+00, -7.2528e-02,  1.8509e+00,  5.2268e+00,
        -1.4524e-01, -1.1033e+00,  1.8310e+00,  2.1532e+00, -1.4421e+00,
         4.1491e+00,  1.1580e+00, -2.4579e+00,  1.1453e+00,  2.3924e+00,
         3.3080e+00, -1.6263e+00, -2.8370e+00,  1.6346e+00, -2.8464e+00,
         6.7121e-01, -6.2737e-01,  3.2552e+00, -8.6569e-01, -4.2849e-01,
        -5.9695e-01,  2.7688e+00,  6.4396e-01, -3.0367e+00,  1.5514e+00,
        -9.9200e-04, -2.4766e+00,  3.0127e+00,  2.6608e+00,  2.7102e+00,
         2.3132e-01,  4.3539e-02,  4.0421e-01, -3.6958e+00, -1.8485e-01,
         9.4220e-01,  3.9182e+00,  2.7257e-01,  1.5562e+00,  1.4287e+00,
         4.8838e+00,  2.5738e-01,  3.1992e+00, -6.7165e-02, -7.9712e-01,
        -3.2126e+00, -5.1664e-01, -3.2083e+00,  2.4954e+00,  8.6723e-01,
        -8.0173e-01, -2.4959e+00,  2.6017e+00, -8.5292e-01, -2.2537e+00,
         8.9543e-01,  3.3122e+00, -2.3814e+00, -8.1396e-01, -2.0131e+00,
        -1.2723e+00, -1.2944e+00,  5.9067e-02, -9.7360e-01,  1.7282e+00,
         2.8455e-01,  4.4756e+00,  6.4595e-01, -3.9918e+00,  1.4075e+00,
         7.5668e-02,  1.6159e+00, -3.3725e+00,  4.2491e+00,  3.2101e+00,
         2.1556e+00,  1.6189e+00,  1.8644e+00, -1.1763e+00,  3.9451e+00,
        -1.8121e+00, -3.9853e+00, -3.9670e+00,  2.3925e+00,  8.8808e-01,
        -1.5945e+00,  1.9324e+00,  1.1893e+00, -3.3841e+00, -8.9382e-01,
        -3.9047e+00,  1.4266e-01,  2.2102e+00, -2.5337e+00,  3.8798e+00,
        -2.7991e+00, -2.9194e-01,  5.0762e-01, -4.8742e-01,  9.8439e-01,
         4.7189e+00,  2.2876e+00,  1.5087e+00,  1.8635e+00, -1.5306e+00,
        -2.8807e+00,  1.3474e-01,  9.8615e-01, -2.2466e+00, -3.9695e+00,
         4.8721e+00,  4.5431e-01,  1.8429e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,144 - myNeural - INFO - Forward Pass: tensor([-2.2517, -3.2448, -2.2213,  ..., -0.7460, -1.7539,  0.0708])
2021-05-25 09:10:00,159 - myNeural - INFO - Forward Pass: tensor([-3.1752e+00, -5.1341e+00,  2.9225e+00,  3.8240e+00,  8.4313e-01,
         9.1004e-01,  2.3805e+00,  4.4670e-01,  2.4625e+00,  4.3880e-01,
         8.4997e-01, -8.1721e-01, -2.3125e+00, -7.7861e-01, -1.9602e+00,
        -1.6731e+00,  3.4876e+00,  3.7778e+00,  3.3851e+00, -7.1704e-03,
         2.1698e+00,  2.8520e+00, -1.5451e+00,  2.0699e+00, -9.1174e-01,
        -1.3400e+00, -2.6174e+00, -1.0598e+00, -4.7649e+00, -3.2340e+00,
         5.2744e+00, -2.7934e+00,  1.5728e+00,  2.0717e+00,  7.3307e-01,
         2.5425e+00,  7.8602e+00, -1.4945e+00, -2.3990e+00, -2.6156e-01,
        -5.6507e+00,  2.4582e+00,  1.7553e+00, -2.7580e+00, -6.6569e-01,
        -8.3618e-01, -4.1383e-01,  6.3813e-01,  2.5102e+00, -1.9846e+00,
        -1.1670e+00,  2.6886e+00,  2.6189e+00, -1.3251e+00, -1.6746e+00,
        -5.4598e-01, -1.4033e+00,  8.7385e-01,  1.8245e+00,  1.1518e+00,
         1.0874e+00,  4.9445e+00,  3.0202e+00,  4.3174e+00,  3.2061e+00,
         3.5134e+00, -4.9471e-01,  9.3646e-01, -1.4875e+00,  9.7509e-01,
         4.1986e+00, -2.0546e+00,  2.6285e+00, -1.4008e+00, -3.6284e+00,
        -1.2054e+00,  1.8400e+00,  2.6982e+00, -1.9410e+00, -2.8154e+00,
         2.7427e-01, -4.6878e-01, -5.9244e-01, -2.6189e-01,  1.3181e+00,
         5.7634e-01, -1.6096e+00, -1.6254e+00,  4.2527e+00,  2.1390e+00,
         1.1703e+00, -1.9143e+00, -2.5132e+00,  4.6222e-01,  3.8560e+00,
         4.9676e+00,  3.5687e+00, -4.4474e-01,  1.7401e+00,  2.5636e-01,
         1.5612e+00, -4.8091e-01, -2.3649e+00, -2.2994e+00,  2.1500e+00,
         4.4009e+00,  2.5603e+00,  3.6884e-01,  1.5377e+00,  2.7211e+00,
         3.9197e-01,  3.6174e+00, -3.8533e+00, -2.6884e-01,  4.7006e+00,
        -3.4731e+00, -1.6167e+00,  2.1568e+00,  2.3389e+00, -1.0619e+00,
         3.5050e-01,  3.5715e+00,  5.5639e-01,  2.0128e+00, -8.5270e-01,
         4.1789e+00, -2.2662e+00,  1.6675e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,174 - myNeural - INFO - Forward Pass: tensor([-2.1825, -3.1310, -1.7776,  ..., -0.6079, -1.8079,  0.0535])
2021-05-25 09:10:00,190 - myNeural - INFO - Forward Pass: tensor([-1.9706, -2.8971, -0.9615, -3.1173, -1.8324,  0.2630,  0.3884,  1.8827,
         1.5661, -0.7045, -2.3296,  0.2091,  4.7424,  1.1167,  0.1860, -0.5334],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,206 - myNeural - INFO - Forward Pass: tensor([-0.0866, -1.5779, -0.5829,  ...,  1.4578,  0.4034,  1.3805])
2021-05-25 09:10:00,252 - myNeural - INFO - Forward Pass: tensor([ 2.1319,  1.7512, -0.6112, -0.0622, -2.5116, -1.7341,  6.0378,  2.8108,
         1.3245, -4.3925,  6.0301, -0.3968,  2.5711, -0.8536, -2.2867,  0.9982,
         5.2105,  0.5546, -1.4485, -2.7348,  5.5687,  5.2888,  2.6463,  2.5521,
         5.5050,  4.8628, -1.0901,  3.2401,  3.5898,  0.9382, -0.3875, -1.9934,
        -1.0536,  5.6386,  6.8661,  2.7299,  0.8080,  4.3256,  1.9926,  2.1102,
        -1.7628,  3.6979,  1.4301, -0.0313,  0.8584, -1.3312,  3.3330,  5.7526,
        -0.7290,  4.5118, -3.4536, -2.1891, -1.4393,  0.8785,  4.0248, -0.4936,
         1.7398,  4.0391, -2.6677,  3.4910,  0.6228,  4.4636,  5.2036,  1.8816,
         4.8449, -0.5353,  0.7862,  1.4064, -0.9598, -0.1242,  1.6620,  1.0006,
         4.9302,  2.8143,  3.5201,  0.7090,  2.8828,  3.5349, -0.2897, -1.1646,
         5.0520,  3.6801,  4.8016, -2.8362,  1.0639,  3.5203,  3.6180, -0.3492,
         0.0294,  2.2518,  5.2497,  2.6193,  4.4184, -1.6762,  2.9411,  7.0892,
         0.9051,  4.2558,  4.3635,  2.1658, -1.5328,  2.3732,  1.3182,  3.7725,
         0.0895,  0.5226, -0.2951,  2.0788, -2.7871,  2.5883,  1.8293, -0.1949,
         6.6422, -1.9059, -1.1149,  3.3858,  3.9571, -0.0208, -0.7212, -0.3859,
         1.5570,  3.3113,  4.1079,  7.1292,  0.8429,  1.4663,  2.5291,  3.8528],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,267 - myNeural - INFO - Forward Pass: tensor([-2.4322, -3.0341, -2.3962,  ..., -0.5205, -1.6524, -0.3898])
2021-05-25 09:10:00,282 - myNeural - INFO - Batch 0 -- TrainLoss: 0.57641 -- TrainAcc: 77.34375% -- TestAcc: 82.00000%
2021-05-25 09:10:00,286 - myNeural - INFO - Forward Pass: tensor([ 0.8368,  0.2835, -0.6354, -0.2455, -1.6027,  0.0780, -0.8150,  0.5728,
        -1.0747, -3.9556,  0.6514, -1.4866, -3.0710,  0.0072, -2.7862,  1.1047,
        -3.2895, -0.9641, -3.7512, -2.9359,  4.5268,  4.4898,  1.6159,  1.0373,
         0.3252,  0.9305, -0.4051, -1.7281,  2.7861, -1.7217,  2.8737,  4.2665,
        -1.7724,  2.0953,  2.8437,  2.6191, -1.0009, -2.5956,  2.4623,  2.3263,
        -1.8666, -2.3199,  2.3274,  1.6845,  1.5851,  2.5440, -0.2331,  3.0896,
        -5.5840,  2.6552,  3.1486,  2.7788,  2.2020, -1.5282, -0.2626,  3.2419,
        -2.5470,  2.5429, -0.8203,  0.9065,  0.3649,  0.3603,  0.0375, -2.5421,
         2.7568,  1.7701, -0.5952,  4.1055,  1.3342, -1.8214, -2.6875, -0.7765,
        -1.1581, -2.8985,  3.4305,  2.7573, -1.4369, -1.5696,  4.0216, -2.5332,
        -4.6055, -0.7677, -0.1491,  1.9258, -2.9378, -1.6596, -1.4088, -3.7677,
         0.3810,  2.4740, -0.5144, -4.9831,  1.3820,  0.0765,  3.7004,  3.5755,
         1.3931,  0.8340, -0.9204, -1.2108, -3.9973, -3.9694, -1.6340, -0.7378,
        -1.6372, -1.3538, -1.4498,  2.5752, -1.9855, -1.7926,  4.6473, -0.6955,
         1.6019, -2.5730, -1.9895,  0.3302,  1.2872,  0.5277, -0.5383, -1.4759,
         3.9938, -0.6226, -0.1109,  3.0888,  4.6662,  3.0518, -0.2998, -2.9401],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,302 - myNeural - INFO - Forward Pass: tensor([-2.3634, -2.6543, -2.1197,  ..., -0.0797, -1.3777, -0.1373])
2021-05-25 09:10:00,319 - myNeural - INFO - Forward Pass: tensor([ 4.2820, -1.8606,  0.0941, -2.9117,  0.6944,  3.3976,  2.5953,  0.2226,
         4.7507, -2.6989, -1.2709, -1.6783,  3.1606,  0.1651, -2.6520,  0.4580,
        -2.7257, -0.8282, -3.4712,  0.5000,  0.2708, -1.2577,  0.5635,  2.5390,
        -1.6953,  0.3074,  0.2161,  2.3397, -2.7261, -1.8842, -1.1306,  0.1373,
        -0.4310,  2.0503,  0.5622, -2.3589,  0.7422, -1.3055, -1.3227,  0.2202,
        -2.4160, -1.2060,  3.0034,  4.0691, -1.8162, -4.5576,  2.2629,  2.6396,
        -2.3460,  2.0644, -1.6061, -2.9289, -0.8064, -1.9559,  0.0198,  3.6536,
         2.1288, -3.4398,  2.9242, -4.1978,  2.6319, -2.6210,  3.1122,  1.6424,
        -2.4184, -1.4407, -0.1198,  0.0250,  1.9455, -2.9920, -0.7856,  0.6326,
        -0.2969,  3.2780, -3.0330, -1.3326, -3.4573, -1.5410,  0.3274,  0.0224,
        -1.5096, -2.7075, -1.6699, -1.9584,  1.0747, -0.3013,  0.7677, -0.9933,
        -0.0656, -0.2134,  0.0083, -2.1124,  2.1791,  3.5775, -0.3293, -1.8166,
         2.3908, -0.4079,  2.9202, -0.0446,  3.7033, -0.7586, -0.8945, -4.4614,
        -1.4924, -0.5326,  3.8026,  0.7221, -1.3200, -2.2862,  4.6210, -0.6332,
         1.6130, -1.1548, -1.2375,  0.6694,  1.0624,  3.3169, -1.3978,  3.7525,
         1.1185,  2.1015,  2.2354, -2.2754, -3.1980, -1.2575,  0.5713,  1.7135],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,334 - myNeural - INFO - Forward Pass: tensor([-2.4438, -2.7656, -2.1438,  ..., -0.2554, -1.6131, -0.2929])
2021-05-25 09:10:00,352 - myNeural - INFO - Forward Pass: tensor([ 3.9454,  0.3619,  3.3747, -2.1797, -3.5381, -0.2542, -4.1691,  3.8609,
        -2.5579, -3.3957, -0.8982, -2.1044, -4.1479, -1.7092,  1.1881,  2.0280,
         2.0121,  4.9794, -1.1101,  2.1881,  0.0119,  0.8579, -0.5660, -2.2726,
        -1.9972, -1.1789,  2.9340, -3.1577, -3.5801, -2.7742, -2.5819,  1.9269,
        -0.6044,  1.5643, -1.3335,  1.7294,  5.9422, -0.9281, -3.7377,  4.3675,
         1.7429, -1.2945,  5.6049,  0.4391, -1.1319,  3.0333, -0.8310, -1.2370,
        -2.0130,  1.2125, -3.3612,  2.9898,  0.9600, -0.4754, -2.1788, -1.0769,
        -2.8764,  2.0209,  1.8162, -2.5607, -1.1588, -0.3902,  1.0579, -2.6438,
         1.2633,  3.5644,  0.6333,  2.5282, -3.2605, -4.2276,  4.6685,  3.9698,
         0.9691, -2.2337,  2.9452, -2.8908,  3.0695,  1.1064, -3.6297, -1.9125,
        -1.9958,  2.2982,  3.1445,  1.6977,  1.6291, -1.6759, -2.6394, -0.1891,
        -2.4103,  0.6087, -3.9542,  0.1749,  1.1234,  3.4586,  2.8678, -1.4014,
        -1.6629,  3.7374, -1.8783,  4.0177, -3.6604, -0.4162,  1.2083,  0.7025,
        -2.0070,  1.8075,  0.5718, -4.2050, -3.4347, -2.4597, -2.5601, -3.3319,
        -1.1179, -3.1031,  1.1942, -4.8857, -1.2656,  2.7737, -2.2681,  1.1505,
         1.5875,  3.5803, -4.2254, -1.9480, -1.2016, -1.5846,  2.4481,  2.2033],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,370 - myNeural - INFO - Forward Pass: tensor([-2.8898, -3.2343, -2.5790,  ..., -0.9270, -2.2757, -0.7343])
2021-05-25 09:10:00,386 - myNeural - INFO - Forward Pass: tensor([-2.1007,  2.2661,  0.7172,  0.4284, -2.4558, -4.7212,  3.9672,  1.2589,
        -0.7860, -0.6091,  1.1156,  2.1377, -0.3342,  0.7387, -3.0468,  0.8529,
        -2.6158,  0.9397, -4.4578, -2.0389,  0.8526, -2.1910, -3.0602, -2.7950,
        -0.5530,  3.0041,  1.7596, -3.8175,  1.2432,  0.3393, -3.0986, -0.2433,
        -0.5329,  1.8492, -2.4385, -3.0636, -1.9005,  3.2022, -3.2381, -1.0424,
        -3.0690, -1.4188,  2.4477, -2.3591, -2.6530, -0.9615,  2.0391, -0.7224,
         3.1723,  0.1617,  1.0315, -1.6416,  3.3878, -0.0328,  3.0775,  2.3641,
        -5.4762,  0.8724, -1.5481, -1.8035,  2.0807, -1.7628, -4.4625, -0.8646,
        -1.1627,  0.7511, -2.7294, -1.7948, -1.8723,  1.5339,  0.0135, -1.8472,
        -0.7251, -3.7480, -1.5939,  0.3992, -1.3804,  3.5899,  0.3211, -0.3824,
        -3.6255,  0.8867, -0.1258,  2.5254, -4.6168, -2.1622,  2.3425, -0.8462,
         1.8157, -1.3470,  2.9372,  0.4090, -4.2562,  2.7891, -4.1255,  1.6631,
         2.3562,  3.4750,  1.8951, -2.3783, -5.0430,  3.6983, -3.2453,  2.9929,
        -4.5831,  1.0873, -4.5381, -0.5373,  0.9312,  2.3049,  4.9698,  3.3286,
         1.5046,  3.0629,  0.2775,  1.5934, -1.4741,  0.5297,  1.2168, -0.0438,
        -3.1289, -1.8906,  3.3584, -5.5919, -1.5210, -1.3225, -1.5072, -3.8212],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,400 - myNeural - INFO - Forward Pass: tensor([-2.1786, -2.6794, -2.0813,  ..., -0.1457, -1.4883, -0.0687])
2021-05-25 09:10:00,418 - myNeural - INFO - Forward Pass: tensor([-1.7609, -1.4482,  3.3191,  1.5024,  1.2392, -3.3985, -2.6693, -2.6256,
        -1.4372,  2.5227,  3.3068, -3.2603,  2.2798, -3.8997,  2.4811,  1.3519,
        -2.4486,  3.2300,  2.1220, -3.1932,  0.4429,  1.5528,  1.9933,  3.2717,
         2.8313, -4.2041,  0.4285, -2.0779,  1.6587,  2.5932,  2.9253,  0.9747,
        -1.2642, -3.2952,  1.5739, -2.4718,  0.9393,  0.6184,  2.2958, -2.7739,
        -0.6352, -0.6775,  2.4708,  2.8040, -3.6509,  1.0132, -3.5604, -0.9313,
         0.9379, -0.7171, -1.8789,  3.7179,  1.4830,  4.4998,  0.6440, -1.1606,
         0.0663,  1.6971, -1.5656,  3.5292,  0.9861,  3.0350,  4.2853,  1.0352,
         1.7393, -0.5440, -1.0714,  1.5642,  3.9963,  1.1714, -0.5382,  0.5427,
         1.9293, -0.1201,  1.1773,  2.8685,  2.8221,  2.3981,  2.0141, -0.8807,
         4.8691, -3.2161, -2.3802, -3.7257, -3.6811, -2.1724, -1.9654,  3.0653,
         1.8455, -2.8424,  0.3522, -0.4272, -0.1897,  5.4148, -0.0579, -0.0265,
        -0.2657, -1.7040,  4.6292, -1.9055,  1.9900,  3.3287,  2.4588, -3.8725,
         0.0622, -0.9120,  2.3487, -3.6415,  5.3205,  1.3286, -0.1523,  4.7417,
         0.8667, -1.5182, -2.5772, -3.4602, -0.6734, -1.7635,  2.8440, -0.0147,
         0.5220, -1.5686,  1.4651,  1.0758,  1.8458,  2.2385,  3.4282,  0.9850],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,432 - myNeural - INFO - Forward Pass: tensor([-2.0971e+00, -2.6508e+00, -2.1415e+00,  ..., -9.3233e-02,
        -1.4808e+00, -1.3112e-03])
2021-05-25 09:10:00,445 - myNeural - INFO - Forward Pass: tensor([-1.1331, -2.4580, -1.7071,  2.8260,  1.1823,  3.2004,  0.6011,  1.8622,
        -3.4237, -0.3866, -5.4220,  3.7254,  5.8245,  0.6324,  5.0117, -1.8027,
        -2.4903, -2.3190, -2.3957,  0.6080,  2.6735,  3.7629,  1.6587, -3.6632,
        -3.8782,  3.5323, -0.2616,  1.7329,  4.2852, -1.3876,  1.6984,  2.7323,
        -1.0169, -2.9567, -1.0865,  0.3480, -2.3584, -0.2521, -4.6736, -0.1290,
         1.6021, -0.3734,  1.3952,  5.0571, -3.6426,  1.2254,  5.0274,  2.9975,
         4.3344, -0.4446,  2.3625, -0.7115, -0.9854,  2.9027,  0.1277,  1.4557,
        -0.8269,  0.3698, -0.1035,  1.3377,  4.7061,  1.9244, -0.8655, -3.9410,
         1.2677,  0.9682,  0.8818, -0.1220,  1.1382,  2.5272,  1.9039,  3.4074,
        -1.3772, -1.8145,  2.0959,  4.1658,  2.7767, -1.6899, -0.4336,  4.4425,
         4.3592, -1.3354,  1.5851,  2.9429,  0.1239,  4.3205,  2.9459,  4.4899,
        -6.5203, -2.2012,  2.2236,  0.6535, -1.5415, -1.4657,  2.4263,  1.7591,
         0.3232, -0.7977,  2.6876, -1.5458,  4.3205, -3.3279, -0.6836,  0.7437,
        -1.6985, -0.3484, -2.6700,  3.9466,  0.2548, -1.4162, -3.4796,  2.6397,
         0.4199,  0.7602,  1.4251, -1.0011,  2.6782, -1.7737,  0.3281,  3.1419,
        -0.6536, -3.7303, -0.4746, -0.9667, -1.6186,  1.2815,  2.2445, -1.7771],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,460 - myNeural - INFO - Forward Pass: tensor([-2.4836, -3.1850, -2.6726,  ..., -0.5763, -1.9676, -0.3576])
2021-05-25 09:10:00,474 - myNeural - INFO - Forward Pass: tensor([-1.7143,  2.3159,  3.0715, -4.0746, -0.9770, -2.9752,  0.4500, -0.3780,
         3.4896,  1.0821, -3.2481,  4.2945, -1.7701,  0.7809,  2.6667,  2.1811,
        -0.8881, -0.8039, -3.4086, -2.2434, -0.6597, -2.1796,  3.4087, -3.5865,
        -1.3934,  2.9961,  2.3050, -0.3036, -4.5503, -1.2387, -2.6784, -0.5821,
        -4.4726,  2.2689,  0.4523,  0.7316,  0.7886, -1.0845,  3.6432,  4.8118,
         2.5910, -0.3238,  0.1670,  2.0811,  0.2539, -2.3645, -1.2297, -0.2482,
        -2.9608,  4.0114,  0.7917, -0.5032,  1.3209, -2.2269,  3.7763, -0.8723,
        -2.2142,  5.1412,  0.3229,  0.3339, -4.2883, -4.4736,  0.0821, -2.7483,
        -3.4023, -3.5824, -3.5985,  2.3701,  3.1130, -0.5899, -1.2452,  0.8909,
         3.4608,  1.8299,  1.8193,  1.0230,  2.9306, -1.5360, -2.7048, -2.5783,
        -0.5890, -1.2094,  3.4780, -5.3515,  0.6737,  0.4058,  2.4951,  0.6177,
        -2.8000, -1.7470, -3.8934, -4.2256,  1.5789, -2.5490,  0.7290, -0.2356,
         1.6648,  2.3966, -2.4473, -3.5015, -4.0316, -0.4375, -0.4124,  4.2360,
        -5.0807,  6.1594, -0.5718,  3.1273, -1.1730, -0.9390,  2.1108, -5.2651,
         2.5783, -0.1875,  0.8015, -2.3612,  0.3493, -3.2091, -3.9806, -0.9411,
         1.9710,  4.2003, -2.8619, -0.8225,  0.9127, -3.6368, -1.3537,  0.6335],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,489 - myNeural - INFO - Forward Pass: tensor([-2.2808, -3.2362, -2.4863,  ..., -0.4450, -1.6834, -0.0976])
2021-05-25 09:10:00,504 - myNeural - INFO - Forward Pass: tensor([ 2.8882e-01, -2.0881e+00, -1.0162e+00,  6.1712e+00,  1.7338e+00,
        -3.3715e+00,  1.9418e+00, -1.4186e+00,  1.5522e+00, -6.9095e-01,
         3.1955e+00, -3.8523e+00,  1.8955e+00, -3.0231e+00, -2.4143e-01,
         3.2396e+00, -3.1979e+00, -2.6789e+00,  6.3472e-01, -2.6191e+00,
         1.4755e+00, -4.4662e+00,  3.4616e+00,  2.0689e+00,  4.4625e+00,
        -8.8234e-01,  1.5111e+00, -1.1037e+00, -2.8149e+00, -3.6583e-01,
        -1.7071e+00,  3.0890e+00,  3.6267e-01, -9.0550e-01,  2.5616e+00,
         3.0880e-01,  1.5621e+00, -2.9093e+00, -2.9020e+00,  6.7895e+00,
         1.9146e+00,  1.2174e-01, -2.9358e+00, -2.5155e+00,  5.6967e+00,
        -1.9454e+00,  5.9840e-01, -1.1296e-01,  1.1630e+00,  1.1239e+00,
         2.2204e+00,  1.1377e-01,  1.0238e+00, -8.3195e-01, -3.0103e-01,
        -1.7652e+00,  5.7100e-01,  1.5614e+00, -3.6589e+00, -2.4793e+00,
        -1.3895e+00,  2.0004e+00,  2.0763e-03,  9.8320e-01, -2.3359e-01,
         1.8928e+00, -2.3896e+00, -4.3951e+00,  1.3713e+00, -1.8171e+00,
         4.0115e+00, -2.2190e+00,  6.2522e+00,  3.5004e-01, -4.2030e+00,
         5.4651e-01, -2.9944e+00, -2.1094e-01,  1.2178e+00,  4.6992e+00,
        -3.6744e+00, -2.3156e-01, -2.5101e+00,  2.1172e+00, -2.7422e+00,
        -2.7377e+00,  1.0601e+00,  1.6004e+00,  4.1310e+00, -1.7616e+00,
         1.0918e+00,  3.9858e-01,  1.0617e+00,  1.9267e+00,  7.4318e-01,
         1.4680e+00,  2.0947e+00, -3.8429e-01, -4.0738e-01,  3.0538e+00,
         5.8575e-01, -6.4675e+00, -4.6268e+00, -1.7116e+00,  5.6541e-01,
         2.7189e+00,  1.6999e+00, -1.0968e+00, -2.1921e+00, -4.9778e+00,
        -1.3071e+00, -1.0686e+00,  2.6507e+00,  4.9690e+00, -3.8343e+00,
         1.6860e+00,  2.6570e+00,  2.0369e+00,  3.6637e+00, -2.0981e+00,
        -1.1088e+00, -2.9008e-01,  2.4492e+00,  1.9182e+00, -1.6306e+00,
         3.3079e+00, -9.7448e-02, -4.0503e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,519 - myNeural - INFO - Forward Pass: tensor([-2.1648, -3.3911, -2.5317,  ..., -0.2989, -1.5540, -0.2191])
2021-05-25 09:10:00,533 - myNeural - INFO - Forward Pass: tensor([-3.4593,  4.3890, -4.1964, -2.5557,  0.0948,  7.3136,  2.0360, -2.2937,
        -1.3424, -0.7394,  3.9093, -2.4980, -2.8856, -4.8313,  2.6073,  3.1993,
        -4.3760,  1.3270,  2.2285, -1.4944,  2.6234, -3.0039,  0.9113,  0.6829,
        -2.9797,  1.6737,  5.4079,  3.2961, -1.0727, -2.9993, -1.6124,  2.5187,
         1.5826, -2.4939,  0.6216, -2.2413, -3.5809, -2.5367,  2.3289,  2.8186,
         2.6922, -5.3697,  2.2974, -1.4522,  3.0341, -0.4750, -3.3986, -1.6021,
         2.2364, -3.3046, -5.6673,  2.0757, -1.4421,  2.3506, -0.8055, -4.2267,
        -2.2499, -2.3696, -5.1228, -3.6111, -3.5811, -1.8420,  4.7641, -3.7087,
         3.3789,  4.3547, -3.1873, -0.0568, -3.0467,  1.7254, -1.2544,  3.0507,
         1.7442, -2.8498, -0.5751,  0.4576,  3.0456, -0.0378,  1.0536,  1.0493,
         0.6061, -4.9363, -3.9786,  0.5056, -1.0046,  0.4955, -2.8638, -4.8814,
         4.1613, -0.1005, -0.9562, -0.5248,  2.2745,  2.6144, -1.2729, -3.9463,
        -4.5020, -2.5171,  1.6671, -5.0926, -0.2725, -0.7151,  1.3261,  0.8778,
         1.2551,  0.7577,  4.4904, -4.1742,  1.0797,  1.0817, -0.6196,  2.6779,
        -0.7779, -3.1797,  2.5670,  3.0460, -0.9526,  3.4189,  1.5702, -3.7989,
         0.4911, -2.8049,  1.1908, -5.2849,  0.5119, -3.5449,  1.1789, -0.5124],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,548 - myNeural - INFO - Forward Pass: tensor([-2.0137, -3.1740, -2.1037,  ...,  0.0126, -1.3231,  0.4631])
2021-05-25 09:10:00,563 - myNeural - INFO - Forward Pass: tensor([-3.0440, -0.8589, -0.6843, -4.2716, -0.2524,  2.4487,  0.4224,  2.6082,
         5.9362, -1.9383, -0.5117, -0.0626, -0.4604, -0.8327, -2.4172, -4.0933,
        -1.5896, -1.6542,  2.0844, -0.9404, -1.6792, -0.4340,  0.9725,  4.1604,
         7.1868,  4.9692, -3.6747,  1.2339, -1.0098,  0.5061, -1.1744,  7.1602,
         4.3282, -2.1143,  6.2904,  2.7718, -1.9668,  3.5401, -2.1935,  2.0330,
        -1.6684,  0.8419,  3.2373,  1.8739,  0.5708,  0.1049,  0.2649,  1.5999,
        -0.7262,  1.7307,  0.9717,  3.0112, -4.5898,  6.6833, -1.4017,  1.3673,
         0.6755,  4.8727, -0.5933, -3.2663,  3.3558,  2.0787, -2.3263,  5.1467,
        -0.1859, -0.5774, -1.2874,  0.3304,  1.2803, -1.4410,  0.8127,  1.7759,
        -3.0251, -0.5605, -6.0339,  5.3180, -0.8891,  2.2386,  1.8172, -1.6643,
        -3.0069, -2.5317, -1.5824,  1.2710,  2.4261,  0.7420, -0.9538,  4.2339,
        -4.2389,  0.5517, -7.8231, -1.1557, -0.9494,  3.5357,  0.5612,  0.0850,
         5.6452, -1.5282,  0.7338, -2.7834,  3.1886,  5.0935,  3.0726,  2.9727,
         5.0137,  0.1250, -3.1566, -3.2702,  0.4009, -1.4370, -1.2445, -1.9763,
         0.2115, -1.7673,  4.5145,  3.8537,  0.2991, -1.8511,  2.9888,  0.8729,
         0.3518,  2.2357,  6.0433,  2.0955, -4.1729,  1.3201,  4.1458,  5.6381],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,578 - myNeural - INFO - Forward Pass: tensor([-2.0808, -3.1445, -2.3188,  ..., -0.6199, -1.3061,  0.0272])
2021-05-25 09:10:00,598 - myNeural - INFO - Forward Pass: tensor([-4.7799,  3.8319,  0.1082,  3.1949,  0.5230, -0.7229, -0.5452,  5.5596,
         1.7583,  1.4663,  0.8446, -0.8392,  6.2617, -3.0377, -2.8734, -1.5682,
        -1.6422, -3.0655,  0.5181, -0.9218,  4.2935,  5.3968, -0.3206,  4.8643,
         4.7148,  0.5347,  2.6661, -2.4628,  5.8719,  0.5949,  2.2628,  1.8764,
        -0.7738,  3.5066,  0.9709,  4.7658, -3.5011, -6.6090, -1.2557,  1.1683,
         2.0987,  4.2982,  2.9675, -3.2476,  1.2503,  1.6303, -2.9741,  4.9422,
        -0.1682, -2.4133, -1.6884, -0.2227,  1.5350, -0.3119,  2.5164,  3.2188,
        -3.8467,  2.0680,  0.8897,  4.5072,  4.8359, -0.2518,  4.5890, -0.7221,
         5.4156, -0.5052, -1.8698, -0.7070,  0.4131, -2.6710,  3.5237,  0.5382,
        -0.4756, -4.0475,  2.1058, -4.9355,  1.2237, -4.1194, -1.6901,  0.9756,
         1.2629,  0.7889, -3.7256,  1.9050, -3.4039, -2.7518,  2.6410,  1.0979,
         4.2436,  2.0498,  2.7242,  2.0160, -0.7479,  2.5938,  5.6740,  3.7713,
        -0.4908,  3.2282,  2.7031, -1.3658, -4.4028, -1.5175,  3.2813,  0.5660,
         5.3209,  4.2844,  0.9670,  3.1130, -0.0506, -0.6497, -2.9160,  2.3188,
         3.0427,  1.4367, -2.6389,  2.6347,  3.1207,  1.4653, -3.3311,  3.3075,
        -0.3045, -0.6162,  1.5577,  5.4943, -1.4162,  1.3331,  1.0177,  4.7235],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,616 - myNeural - INFO - Forward Pass: tensor([-1.7308, -2.9276, -1.9571,  ..., -0.3589, -0.9852,  0.1350])
2021-05-25 09:10:00,635 - myNeural - INFO - Forward Pass: tensor([ 0.0451, -1.6253,  2.5383, -0.4872, -2.5189, -1.3942, -1.6224, -4.3940,
        -4.1919,  3.0312, -0.0813, -3.9998,  0.9304, -1.0805,  1.9167,  4.3468,
        -0.9146, -2.2697,  2.4313,  3.1361, -3.8600,  4.9443,  1.5692, -2.8038,
        -0.1573,  1.8492,  3.1057, -1.8889,  7.5142,  1.5627,  2.1058, -2.3112,
        -4.5572, -1.2345,  3.6923, -4.5262, -1.7990, -1.7161, -1.2427,  1.3061,
         4.7180,  5.3464, -2.0926, -4.7515, -3.5477,  0.3724,  3.4631, -3.8928,
         0.8027,  1.2610, -3.0569, -2.4335, -5.4505, -3.2081,  4.4785, -6.0193,
         0.9814,  1.1346,  3.7873,  0.4540, -1.1670,  0.0122,  4.4505, -3.1372,
        -3.5705, -2.5444, -2.3659, -0.5112,  0.5799,  4.4653,  4.3356,  4.5180,
         0.5920, -1.0478,  0.3613,  2.7000,  1.1809,  1.3714, -2.9546,  0.8818,
        -3.4978,  3.7831, -1.7558,  2.3430,  3.0562,  0.7234, -0.5485,  2.9709,
        -1.6846,  0.1466, -0.2753,  2.4372,  2.7375,  3.4320,  3.2095, -2.3008,
         4.5880,  3.1650, -3.3228,  0.3790, -1.7802, -2.1178,  5.2144,  2.7494,
         0.7651,  5.7797, -1.9472, -6.1086,  1.6185,  1.6389,  2.0735,  5.0019,
        -4.4861,  0.0992,  2.7554, -1.9932, -1.7260,  1.5759,  2.4202,  0.4620,
         6.1268, -3.7316, -3.7368, -1.6361, -2.3078, -4.5751, -2.5398,  2.9346],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,651 - myNeural - INFO - Forward Pass: tensor([-2.1528, -3.2015, -2.2577,  ..., -0.6349, -1.1326,  0.3969])
2021-05-25 09:10:00,666 - myNeural - INFO - Forward Pass: tensor([ 1.6091,  2.2741, -0.3065, -2.9321,  2.7895, -3.4198,  1.2498, -3.1503,
         2.1751,  1.9013,  2.1240, -4.5732, -1.3200, -0.4109,  0.1460, -1.9692,
         0.2651, -1.6985,  4.8599,  1.1040,  1.4342, -0.3933,  2.4255,  1.4856,
        -4.4709,  2.6107,  0.6353,  1.3979, -2.0691,  3.7163,  0.0204,  0.7754,
         2.4503, -3.9102, -2.4238,  4.8973,  0.5780, -1.2228, -2.1816, -0.7204,
        -2.5354,  1.0706,  1.2855,  1.2761,  3.8163,  1.0458, -3.9930,  2.7683,
         1.3590, -1.1162,  0.2099,  1.6683,  3.3345,  4.3343, -1.3569, -3.3191,
        -3.5293,  1.5361,  1.9937,  1.0865, -3.4851, -1.9474, -3.5972,  0.7674,
        -0.3352, -1.5242,  1.0129, -3.6223, -2.3000, -0.0690, -0.4603, -1.2608,
        -1.9695,  0.6824, -2.1238,  0.1624,  1.0789,  1.8333, -2.7922, -0.6799,
         2.7314, -2.5109,  0.3788,  2.4148,  3.4513,  0.4702,  2.3025,  1.6130,
        -0.7066, -2.8330,  0.9361,  0.3549, -2.9597,  4.6324,  0.5490, -0.8958,
        -3.5632,  0.0618,  2.0911,  1.9511,  0.0302, -2.3302,  5.8342, -2.9535,
        -5.3320, -1.2476,  1.2135, -2.5517,  1.8879,  2.5889, -0.1735, -6.2880,
         1.0755,  1.5199,  1.7086, -0.2275,  0.8732,  3.3506,  3.4947, -2.5949,
         2.3924,  1.9590,  3.1222, -3.3811,  4.6967, -0.8962,  0.1359,  3.5508],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,683 - myNeural - INFO - Forward Pass: tensor([-2.3679, -3.5143, -2.6642,  ..., -1.1418, -1.7575, -0.1855])
2021-05-25 09:10:00,702 - myNeural - INFO - Forward Pass: tensor([-0.5583,  0.7516, -0.9138, -0.0244,  2.6104,  1.8510,  2.1316, -3.0834,
         2.4184,  1.7227, -0.8883, -1.9193,  2.6842, -0.6831, -2.0153,  4.4758,
         2.3959, -3.4013,  3.4379,  3.3643, -2.1353, -5.5136,  5.6621,  0.9410,
        -3.7196,  4.8038,  3.2696, -4.1236, -1.2585, -2.1395, -1.0952, -3.0645,
        -5.3719, -1.3305,  0.8740, -2.9704, -2.0820,  4.7050, -1.7852, -1.4823,
        -2.7371,  2.3031, -1.5158, -1.5440, -5.7074, -0.6912, -0.4430, -4.5656,
        -0.1331, -5.5459, -0.4198, -1.0824, -0.4758, -2.7753,  3.4720, -1.7993,
        -1.3308,  2.7241, -5.1428, -4.5350, -3.3810, -3.5273, -1.9812, -3.5895,
         1.6644, -2.6354, -2.1368,  3.2710,  1.4179,  2.1882,  0.2188, -1.8537,
         3.0965,  1.4868, -3.0591,  4.3742, -3.8224,  2.8334,  0.2431,  0.1470,
        -3.2673, -5.2055,  2.7796,  3.9993,  1.3460, -2.0407, -5.2869, -3.6553,
         0.7741,  3.9104, -2.7949, -0.6771, -2.3377,  5.1553, -5.6371, -2.0708,
        -3.9513,  5.7580, -5.0489,  2.5481,  1.4388, -2.0079,  3.9679, -0.6263,
         0.8501, -2.6170, -3.5952, -0.2153, -3.2201, -1.9393, -0.7974, -2.8982,
        -4.2765, -1.3878,  3.4372,  1.7811,  0.1185,  2.5228,  1.6376,  1.1062,
         1.2575,  4.3258,  0.8153, -0.2790, -2.1467, -4.8993,  2.4013, -0.8295],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,719 - myNeural - INFO - Forward Pass: tensor([-2.3805, -3.4704, -2.6081,  ..., -1.2842, -1.7411, -0.0510])
2021-05-25 09:10:00,737 - myNeural - INFO - Forward Pass: tensor([-2.0479, -0.0611, -2.1216, -1.0063,  0.9139, -0.3516, -0.6474,  5.7550,
        -1.0472, -0.9644, -2.4806, -2.9134,  2.3542,  0.8834, -2.6497, -3.2165,
         1.0713, -1.1525, -2.9236, -4.1902,  1.0727, -3.4143,  0.7062,  2.8434,
         3.1518,  1.2124,  2.3037,  0.2615, -1.0286,  1.7267,  1.1864, -5.6700,
        -3.7451, -2.4116,  0.9277, -2.9028,  1.3790,  0.6875, -0.3347, -5.2104,
        -2.9385, -2.5386,  1.0627, -2.1464, -3.2851, -2.6337, -1.2266, -1.0407,
        -3.7745,  5.9184,  1.2324, -1.5371,  0.9875,  3.8803,  1.9498,  1.2880,
        -0.0841, -1.3770, -0.4340, -3.2956, -2.7046,  0.6633, -1.4757, -3.6599,
        -4.8122,  1.0317, -0.2533, -2.9392, -4.4793,  2.3142, -0.4581,  4.2548,
        -3.7972, -0.4725, -2.2973, -5.2891,  3.5954,  1.9053,  2.7569,  0.8300,
        -1.0719,  0.6506,  2.8812,  0.8655,  2.7118, -0.6047, -4.6783, -4.1494,
        -2.7285,  1.0643, -3.7822, -3.2266, -4.4534,  0.4182, -2.4008, -5.9152,
         1.6024, -2.5174, -4.8601, -3.8719, -3.4432,  1.5824, -1.4593, -3.6992,
         5.2286,  0.3501, -1.4068, -5.0204,  3.0445, -1.2609, -3.0496,  2.7574,
         0.9854, -3.8197, -4.1666,  4.1579, -0.2951,  2.3122, -3.5303, -2.0553,
         4.7124, -2.0668,  0.6049, -2.7760, -0.5224,  0.3687, -0.3218,  3.1122],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,753 - myNeural - INFO - Forward Pass: tensor([-1.6554, -2.9303, -2.0886,  ..., -0.7540, -1.3996,  0.2100])
2021-05-25 09:10:00,769 - myNeural - INFO - Forward Pass: tensor([-0.6510, -2.4722,  4.6523,  2.5176,  4.6845, -0.8719,  0.2320, -1.6600,
         3.3790, -2.1457,  0.7077, -1.4108, -2.5144, -1.9210,  5.4087,  2.5041,
         2.3203,  3.1171, -4.7061,  2.6885,  3.8500,  0.9227, -2.1660, -2.3128,
        -1.8880,  0.3980,  4.9475,  3.2114,  1.9643,  2.6400,  3.8185, -4.7280,
         0.8444,  3.9696,  2.0746, -1.5219,  0.0766,  0.0720, -5.1606, -2.2632,
        -0.9901,  6.1803, -4.2651, -1.0100, -0.1363,  3.3998, -1.9187,  1.1721,
        -3.4123,  4.8696,  0.4602, -1.4346, -2.8513,  5.8737,  0.6115, -0.7254,
         3.5817,  4.0239, -3.3441,  1.4512,  3.1347,  2.8863, -1.3306, -0.3202,
        -1.9634,  1.0258, -1.6578, -2.3162, -3.6829,  2.3038,  0.6997, -0.9839,
        -0.3182, -4.1537, -4.4202,  1.9998, -0.8238,  4.8026, -0.5285, -2.6251,
         3.5875, -2.6468,  2.0386,  2.7427,  1.6766, -0.5836, -4.7072, -3.7211,
         2.0483, -4.8593,  0.8982,  2.9511, -1.7170, -1.4085,  1.9476, -3.1988,
        -3.0034, -5.2765, -3.1344, -1.5089, -1.1240, -2.4936, -1.1589, -3.2264,
         2.5988,  1.5925, -3.6761, -0.2976,  1.5798, -3.2531,  0.9340,  0.1041,
         4.2525, -0.2052, -3.6302, -4.1553,  0.1005, -1.1037,  0.4096,  2.8107,
         0.0766,  2.5790, -5.8735, -1.5957,  3.6126, -2.4072, -0.4270,  2.3792],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,786 - myNeural - INFO - Forward Pass: tensor([-2.5455, -3.3315, -2.4884,  ..., -1.4577, -2.0470, -0.3651])
2021-05-25 09:10:00,804 - myNeural - INFO - Forward Pass: tensor([ 0.9372,  3.8715, -3.9198, -3.9015, -1.9946, -0.3246, -1.8484, -1.3014,
         3.0627,  4.1859, -3.4465, -2.0159, -1.5452, -0.3469, -3.5360,  0.8905,
        -0.2910,  1.8392,  5.2239,  4.8927,  3.5669, -1.1284,  3.1248, -1.1079,
        -2.0478, -2.6923, -6.0849,  2.9407,  1.9074, -0.0237, -3.9866,  0.8107,
         2.8973, -0.9332, -2.1188, -1.9436, -2.9816, -3.2627, -2.9960, -2.0333,
         0.0841, -3.6293,  3.6797, -0.3127, -3.2540,  4.1048,  0.4377,  0.3035,
        -1.8701,  0.7587,  2.5755,  2.2166, -0.3304,  5.3600,  2.2384, -1.0481,
         2.5325,  0.0951,  2.8535,  2.5679, -1.7880,  1.9281,  0.6526,  3.4069,
        -2.9158,  0.4473,  1.5950, -0.7453, -0.6032,  1.3792, -1.0489,  0.5789,
        -3.7498,  0.5405,  1.8796, -2.7277, -4.0798,  1.2716, -1.9113, -1.6850,
        -3.5540, -3.5316,  1.6611,  3.6012,  5.8349, -2.8642,  4.1189,  3.1424,
        -0.6923, -3.3885,  2.4788,  3.7507,  0.6333, -0.4319, -0.4979, -1.1171,
        -1.7716, -2.2293, -3.5573, -3.8866, -3.6766,  1.7538, -0.2436,  2.1454,
        -4.1504, -3.1142,  2.6631, -0.9771, -2.2006, -4.0502,  1.3698,  2.8573,
        -2.3703, -3.3107, -0.7090, -3.0341, -1.2978, -1.7302, -3.1892, -3.9232,
        -4.4440,  3.3096,  2.8872, -0.1955, -2.7304,  5.4497, -0.5337, -1.9108],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,821 - myNeural - INFO - Forward Pass: tensor([-1.9054, -2.9505, -2.1849,  ..., -0.6990, -1.4584,  0.0962])
2021-05-25 09:10:00,838 - myNeural - INFO - Forward Pass: tensor([ 1.2851, -1.3147, -4.9235,  5.3935, -2.4828, -0.8291,  2.6295,  4.7185,
         1.0131, -3.0574,  3.1040,  2.4046,  2.5099, -2.5255,  5.7750,  6.6542,
        -0.4822,  1.1533, -1.5150,  4.3500, -2.7732, -1.4699,  5.0225, -0.2558,
        -0.7869,  0.7265,  1.3357,  3.1640,  3.8752, -0.7016, -0.5754,  1.3280,
         1.3359,  2.1486,  4.4019,  3.4146,  1.5854,  1.9220,  4.0380,  2.2169,
        -1.9932,  4.9419,  1.0448, -3.3338, -2.8838,  4.1649,  4.0719,  4.5675,
        -3.0319,  3.0750, -3.7757, -1.3110, -0.2582, -1.2240, -0.2690,  1.0868,
        -5.4520,  1.9320, -3.9948,  5.1058, -1.4976,  4.5967,  1.4964,  2.7772,
        -0.9733, -3.4855, -1.1499,  2.3830, -1.0594, -5.2647,  4.1853,  0.7432,
         2.8976, -1.9519, -1.9597,  3.1892, -1.0402, -2.1132, -2.6042,  3.2236,
        -1.8513,  5.2538,  0.7582, -4.1824,  3.1789,  2.2156,  3.3471, -0.6561,
        -2.9793, -2.7030,  1.2119,  2.7490,  0.8212,  4.4019,  3.5404,  0.2374,
         0.8512, -1.5895,  3.4956,  0.7851, -0.5669, -2.3383,  1.8098, -0.0258,
        -1.8639, -2.2107, -1.7405,  5.4014,  4.8361, -3.3382, -3.0733, -2.0128,
         3.9191,  2.9302,  3.4274, -3.2517,  0.5871, -2.1271, -0.1259, -2.5464,
        -1.0017,  1.1514,  3.6256,  4.4067, -1.7803, -0.2650,  5.9944,  1.0877],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,856 - myNeural - INFO - Forward Pass: tensor([-1.7488, -2.6331, -2.3774,  ..., -0.6039, -1.3630, -0.1831])
2021-05-25 09:10:00,874 - myNeural - INFO - Forward Pass: tensor([ 3.1479e+00,  2.9469e+00, -2.7968e+00, -4.2494e+00,  2.6332e+00,
        -3.2005e+00, -1.3529e+00,  1.9463e+00,  5.5112e-01,  2.4924e+00,
         2.8179e+00,  4.3782e+00, -1.6347e+00,  2.1142e+00, -5.9266e-01,
        -1.3420e+00,  1.4616e+00, -3.7974e-01,  8.0996e-01, -2.1951e+00,
         7.4824e+00, -1.3191e-01,  3.3373e+00, -3.8401e+00,  1.0062e+00,
         1.5410e+00,  1.1580e+00, -5.2846e-01,  1.5924e+00,  3.4044e+00,
         1.2941e+00,  2.1450e+00, -8.8568e-01,  3.8697e+00, -8.5345e-01,
         9.6916e-01,  2.7416e+00,  8.9213e-01,  1.2451e-01,  5.5064e-01,
        -2.5793e+00,  3.2725e+00, -1.3745e+00,  3.1798e+00, -2.4927e+00,
        -2.7965e+00, -1.0813e-01,  2.8202e+00, -7.5700e-01,  1.3173e+00,
        -4.1234e-01, -5.8032e+00, -2.7815e+00, -4.6378e+00,  4.3338e+00,
        -3.0890e+00,  1.8572e+00, -1.3411e+00,  1.0491e+00, -3.2017e+00,
        -1.1262e+00, -2.9295e-01, -2.4744e+00,  6.2065e+00,  3.2908e+00,
         3.0780e+00, -1.0631e+00, -4.0141e+00, -2.0258e+00, -3.9769e-01,
        -2.8844e+00,  6.3200e+00,  1.6345e+00,  5.2797e+00,  1.2609e+00,
        -2.9967e+00,  1.2308e-01,  4.3678e+00, -7.2032e-01, -1.7752e-01,
         2.7097e+00, -3.5605e+00,  2.5499e+00,  2.1686e+00,  3.0263e+00,
         9.5820e-01,  7.2839e-01,  2.9941e+00,  2.0873e+00,  5.7777e-01,
        -2.8843e+00, -3.0311e+00, -3.5620e+00,  2.7443e+00, -3.9998e+00,
        -2.7451e+00,  4.5645e-01,  4.5062e+00,  3.0233e+00,  3.9577e+00,
         3.8659e+00, -5.2387e-01,  3.0278e+00,  5.2289e+00, -3.0037e+00,
         1.5937e+00, -1.4659e+00, -5.2176e+00, -1.3293e+00,  1.1725e-01,
         3.1253e+00, -9.2044e-01,  5.0542e+00,  4.5668e+00, -2.9025e+00,
        -3.3543e-01,  8.1314e-01,  1.5301e+00,  3.0358e+00, -7.1747e-01,
         2.1054e-01,  2.2496e+00, -4.6027e+00,  1.6074e+00, -2.3634e+00,
         3.3201e-03, -4.7469e+00, -7.4289e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,890 - myNeural - INFO - Forward Pass: tensor([-2.1371, -2.6907, -2.5596,  ..., -0.8399, -1.4963, -0.5576])
2021-05-25 09:10:00,907 - myNeural - INFO - Forward Pass: tensor([-1.1001,  1.2404, -2.3792, -2.0646,  1.5539, -1.4857, -0.7341, -0.4599,
         0.9817, -4.1647,  5.3648, -1.9741, -5.2150, -1.2313,  1.2470,  2.1020,
        -0.5935, -4.6743, -3.6527, -3.5134,  1.9174, -3.3704,  3.3288,  4.6092,
        -0.1643, -4.8428,  0.5258, -4.6931,  1.8147, -3.2540,  0.7680,  1.8011,
        -3.5502,  1.1037,  6.6118, -1.5637, -2.2352,  0.4718,  4.0418,  2.1569,
        -4.5612,  0.4288, -2.2922, -0.8913, -2.8856, -7.0162, -2.0041,  2.9869,
         1.5485, -2.9677,  0.0455,  2.4897, -2.4010, -0.8053, -3.1039, -3.8021,
         0.2645,  3.5289,  4.7810,  3.9776,  2.4051, -5.2619,  1.7633, -3.1551,
         2.7081, -0.9726,  1.7192,  0.5099, -2.0854, -4.2963,  4.2262,  2.3018,
        -1.3227,  4.2862, -1.7202, -0.8172,  0.2589, -2.1812, -4.2681, -0.7032,
        -2.5887, -0.4301,  1.9823,  2.7015,  7.2727, -4.8906,  0.4478, -0.2313,
        -1.1529, -1.8550, -4.4652, -2.6798, -3.8403,  1.3269, -1.9505, -2.7901,
         2.7474, -1.6507,  0.5829, -1.5259,  0.0942,  4.2798, -2.9710, -2.4246,
        -0.3043, -1.2295, -5.6520,  1.3324,  2.1592, -0.8165, -0.6547,  1.5394,
        -1.3895,  0.2205, -3.3044,  4.4238, -1.7986,  4.5723, -1.6174, -1.5593,
        -2.6049, -2.5150, -2.4346,  5.3002, -1.7397,  2.2109,  0.4624,  2.3928],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,924 - myNeural - INFO - Forward Pass: tensor([-2.5502, -2.8997, -2.7788,  ..., -1.1722, -1.6498, -0.8635])
2021-05-25 09:10:00,938 - myNeural - INFO - Batch 20 -- TrainLoss: 0.25593 -- TrainAcc: 91.40625% -- TestAcc: 82.10000%
2021-05-25 09:10:00,942 - myNeural - INFO - Forward Pass: tensor([ 1.9571, -6.1803,  0.6231, -1.9036,  3.1947,  3.6865, -0.9299, -0.7032,
        -3.6270, -4.2892,  2.2859, -5.5093, -3.7215,  3.0708, -0.0194, -2.1622,
         2.1958,  2.2412, -4.1449, -4.8701, -3.2587, -0.7494,  1.3486, -0.6017,
        -1.3682, -0.7597, -2.6674, -0.9238, -0.2522, -4.5386,  0.3950,  0.2854,
        -2.6135, -1.9552,  4.0964, -1.1168, -0.8939,  2.9031, -1.4136,  4.6235,
        -2.5369,  1.3714, -5.7849, -2.9828,  1.2846,  1.6367,  0.2005, -2.8845,
        -2.2247,  1.4840, -0.5510,  1.9268,  3.4189, -4.2794, -3.0195, -1.9795,
         2.4519,  4.0365,  0.4821, -4.2733,  1.7348,  1.3853, -1.1559, -1.8986,
        -0.4477, -2.6842, -3.1715,  3.9347,  2.4405, -4.2289, -4.5980, -0.4013,
         1.4369, -4.2393, -0.5762, -3.1442,  0.9033,  0.3912, -0.1715,  1.1637,
        -0.7819, -4.9470,  0.3243, -1.5274, -3.1621,  0.0605,  2.9932, -1.7390,
         3.2086, -1.2348, -4.1704, -2.1802,  1.0655,  0.8095,  2.6426, -1.3150,
         2.9707, -0.3274,  4.6347,  1.9368, -1.6444, -1.7643, -1.9297, -3.4455,
         1.0242, -1.9384,  1.9525, -2.3395,  3.9354,  1.8729, -2.0876,  1.6485,
        -2.0313,  2.1085, -1.3569, -0.4610,  1.3775, -3.5061,  0.0264,  2.8467,
        -2.4897,  5.1403,  1.2129, -2.5862,  6.8695, -0.7750,  0.6474,  1.3752],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,959 - myNeural - INFO - Forward Pass: tensor([-2.3019, -2.5632, -2.2820,  ..., -0.5677, -1.3173, -0.3895])
2021-05-25 09:10:00,976 - myNeural - INFO - Forward Pass: tensor([-4.2942,  2.9629,  1.7206, -1.4392,  5.8224, -0.1822,  4.3919, -1.7848,
         2.8705,  1.9585, -2.7034, -1.1113,  1.9778,  0.1351,  3.3802, -2.4345,
         1.3414,  1.5469, -2.6317, -5.8690,  4.7453, -6.1215, -1.2985,  1.2163,
         4.3257, -2.1202, -4.0764, -1.4733, -5.7326,  0.7522, -4.9298, -3.1849,
        -1.7692, -1.0078,  0.3764,  4.0199,  0.9658,  2.0173, -0.0869,  1.3558,
         2.4726, -3.0213,  3.1443,  3.9159,  0.9096,  2.2076, -0.0214, -1.3211,
        -2.9102,  2.3418, -1.4486, -0.7948, -0.6402,  1.3179,  0.6024, -0.6561,
        -3.4320, -0.6581,  3.1865,  3.4360,  2.8906,  2.3916,  2.6464,  1.6344,
         0.1511, -1.2560,  6.1208, -4.3277, -5.9363,  2.0041, -2.9543,  1.1163,
         4.7887, -0.3371, -0.2521, -2.3046, -2.3279,  4.1166,  5.5251,  5.9950,
         0.7611, -1.3067, -0.4472,  3.8201, -1.3469, -1.3383,  4.9922,  1.7437,
        -2.4245,  2.8422, -1.5810,  3.6043,  4.8614,  4.8301, -0.0080, -1.4638,
         2.6549,  3.2850,  5.0942,  5.6566,  1.6397,  0.4097, -1.1183, -0.7253,
        -2.8230,  4.7142, -4.6883, -0.2293, -0.7034, -4.7293, -3.5906, -0.1190,
         1.2653,  3.4770,  3.4317,  2.6660, -1.6412, -3.7213, -1.2095, -2.3473,
         4.0172,  2.0118, -0.2236,  0.5502, -4.0813,  0.0156, -1.5723, -1.9375],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:00,992 - myNeural - INFO - Forward Pass: tensor([-2.4784, -2.6244, -2.3711,  ..., -0.7298, -1.4027, -0.4625])
2021-05-25 09:10:01,010 - myNeural - INFO - Forward Pass: tensor([ 4.1741, -5.2035,  2.2644,  2.0251,  1.6380,  0.7034, -3.7384,  3.8897,
         1.0443,  0.6170, -4.6227,  2.9236, -0.2631, -2.5378,  1.9363,  5.0609,
        -0.6354, -2.5253, -6.3054, -0.2013, -1.7504,  1.4157, -1.4562, -2.9355,
        -0.0248, -2.2954, -1.2906, -1.8930,  3.3673,  0.8237, -4.8571, -1.9772,
        -4.3486, -0.1466, -3.6642, -0.3264, -1.3945,  3.1711, -1.9265, -1.2056,
         1.4268,  2.0132,  1.2527, -2.0109, -1.7435, -4.7403,  3.7560, -3.3381,
        -1.8803, -3.5760,  5.3789,  5.1603,  3.6996, -1.7132,  5.7134,  2.5035,
        -2.7901,  3.5719, -1.9339, -4.7983, -2.6170, -1.6095,  0.9009,  2.6578,
         1.2939,  6.2509,  6.3193, -1.3701, -2.1381,  1.6450, -2.3408,  1.1661,
        -6.6706, -3.2001,  1.8238,  3.7972, -3.5299, -2.3053,  0.2236,  2.5846,
        -4.5794,  1.6896,  0.9873,  4.3749,  5.0765, -2.5404,  4.2600,  5.6885,
         2.7219,  1.4937, -1.7545, -4.4295, -0.0539,  4.5287, -1.7342, -0.2389,
         0.8843,  1.9232, -1.0473,  2.0909,  1.2443, -3.8548, -0.9626,  2.9246,
         0.9834, -2.4140,  0.4122,  1.5293, -1.1041, -2.2625,  2.5777, -0.7603,
         1.2670,  0.6270,  4.1832,  1.0053, -1.9219,  1.3331,  4.8608,  1.6204,
         3.5965,  4.0505,  2.8662,  2.5484,  0.6207,  2.7135,  4.1134, -2.8730],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,026 - myNeural - INFO - Forward Pass: tensor([-2.8293, -2.7152, -2.3519,  ..., -0.7447, -1.4632, -0.5847])
2021-05-25 09:10:01,046 - myNeural - INFO - Forward Pass: tensor([-4.0430,  0.1142, -3.0189, -2.2179, -1.4349,  3.9693,  0.6949, -1.5853,
        -5.1042,  2.5062,  2.7986, -3.2002, -1.2889, -0.4231,  3.9677, -1.9775,
         1.9803,  3.3616,  4.5541,  4.5082,  0.0885, -2.3852,  0.8835,  0.1769,
        -1.8991,  5.0457,  4.1830, -0.5344, -1.9871, -0.7391,  2.2912, -4.4770,
         4.4934, -0.6576, -2.1789,  1.5086, -1.8492, -4.4007,  4.8659,  4.8708,
         2.3730,  5.3184,  4.9171, -2.9092,  0.6521, -1.1376,  2.5587,  3.2017,
        -0.8656,  0.7657,  1.8751,  5.2272, -2.1233,  0.5975,  1.1193, -2.6574,
         1.1246,  1.9203,  2.5192,  2.2358, -1.7704, -1.1595, -2.0007, -3.5857,
        -4.0091, -2.6503, -0.7492, -1.8638, -4.3037,  2.0326, -2.1695, -4.0988,
        -1.9111, -2.0658, -2.1114,  2.6727, -1.5486,  4.8826,  3.1719, -2.5518,
         1.3022,  3.5786,  2.3182,  1.3612,  0.7298,  2.1549, -2.2282, -2.9180,
        -3.3940,  3.4376,  1.3582,  3.5285,  1.1060, -1.3098, -4.2735,  4.2737,
         3.7569, -2.0276,  1.4659, -2.8328, -6.0500, -3.4445,  3.3006, -4.5864,
        -4.4544, -1.1146,  1.1423, -4.9492, -1.8239, -0.0140,  1.3356,  1.4698,
         1.1906, -4.2023,  0.6427, -2.6726,  2.8847,  2.4313,  0.7800, -1.4350,
        -1.3684, -1.4145,  4.9216, -0.4363,  1.0690, -5.9918,  3.6582, -3.3245],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,063 - myNeural - INFO - Forward Pass: tensor([-3.1608, -2.9168, -2.7329,  ..., -1.0606, -1.7752, -0.9502])
2021-05-25 09:10:01,085 - myNeural - INFO - Forward Pass: tensor([-1.5564, -5.3868, -5.4388,  4.5691, -3.6108, -4.0063, -3.5116, -2.3945,
         0.6837,  0.5938,  2.0955, -2.5481,  0.6676,  1.9624, -0.4658, -3.3431,
        -4.9981, -0.1232, -4.0679,  1.5502, -2.9885,  5.1943, -4.7342, -2.0925,
        -0.9509,  3.2460, -0.5334,  1.2944, -2.5304,  4.8025, -0.8998, -3.5588,
        -1.9272,  3.1691,  2.7675, -3.6204,  1.5858,  1.4630, -0.6480, -3.8573,
        -2.5648,  3.3767, -1.7542,  0.0442,  3.0076, -2.7443,  4.8815, -2.9148,
        -3.5022,  1.6583,  2.2425, -2.6728,  0.3104,  1.2377,  0.5778,  4.7227,
         4.1732,  1.7188, -0.3430, -6.3002, -0.2137, -1.1710,  2.8546, -1.5254,
        -1.3693, -2.7128, -0.7066,  1.2115, -2.0205,  2.5071, -1.9330, -1.4853,
        -5.1282,  1.3145,  0.5611, -4.0255, -4.6443, -1.3220, -5.0096,  2.9620,
         1.5362,  1.4817, -2.1373, -3.3102, -3.6839, -0.9259,  0.2994,  0.9287,
         3.3159, -0.7337,  2.3192, -2.8602, -5.3618,  0.2217,  3.8232,  2.7422,
         0.1544, -3.7761,  4.7908,  1.3470,  1.8736, -0.7678, -3.1553, -0.8049,
        -3.9325, -0.6982, -2.3190,  0.8938,  5.9798,  4.5469, -0.7265, -3.0607,
        -4.1694,  2.0460, -2.0678,  2.1865, -1.6634,  0.1525, -1.0553,  2.3050,
        -2.4214,  2.6649, -1.8837,  2.0241, -4.9341, -0.0626,  2.0069, -0.1019],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,100 - myNeural - INFO - Forward Pass: tensor([-2.3853, -2.5890, -2.2705,  ..., -0.3606, -1.2867, -0.4373])
2021-05-25 09:10:01,116 - myNeural - INFO - Forward Pass: tensor([-0.8399, -3.2458, -4.8773,  1.6306,  2.3821, -1.3004, -2.4112,  2.8869,
         0.5684,  0.6993,  5.4759, -0.7298,  0.8210,  3.9054,  2.9968, -1.8471,
        -2.5236,  7.3604, -5.1653, -1.8233,  0.5256,  2.6572,  5.7412,  0.2379,
         2.1674, -3.9554, -4.3198,  3.8771, -5.8580, -0.0998,  4.7292,  1.9499,
         0.7629,  1.2007,  2.7582, -1.8745,  1.9840,  2.7796, -0.1129,  3.1548,
        -2.5324,  5.8933,  2.4231,  1.3616,  0.7640, -0.7355,  1.9252, -0.5340,
        -1.3814, -0.3814,  1.0822, -0.6147, -0.0820, -0.6850,  0.7489,  1.5353,
         1.8151,  0.9661,  3.0324, -1.6797,  4.1055, -2.2452,  4.9148,  1.0671,
         4.0906,  0.5754, -3.6326, -1.7181,  1.5805,  1.7951,  4.0583,  4.2998,
         1.9032,  1.2475, -4.6120,  0.6624,  2.8754,  5.3492,  4.7755,  5.8114,
        -0.2224,  2.0145, -0.2364,  0.5963,  4.5990,  2.8746, -2.5464,  1.1834,
         0.9967,  0.2278, -1.7509, -2.3893, -2.6599, -1.2083, -4.8771,  5.3220,
        -1.1056, -3.6923,  0.6687, -3.6440, -4.2060,  4.8533, -3.6085,  2.2130,
         3.4600, -3.5709,  1.8717, -1.8599,  1.9016,  0.6914,  4.6223, -2.3832,
        -0.5539, -3.6173,  0.1369, -0.6028,  2.1741,  3.5496, -0.7786,  1.7215,
        -1.8044,  2.3151, -3.8189, -5.1542,  2.5773,  5.7814, -1.9023,  1.2236],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,134 - myNeural - INFO - Forward Pass: tensor([-3.3436, -3.0691, -3.1116,  ..., -1.4942, -2.2440, -1.1484])
2021-05-25 09:10:01,150 - myNeural - INFO - Forward Pass: tensor([-4.2336,  3.1547, -1.3512,  1.3100,  0.0943,  2.1757, -5.6012,  2.1619,
        -0.6556,  1.8436,  1.4686, -2.6835, -1.9424, -2.3284,  3.8885, -1.8930,
        -0.5566, -4.9668,  1.8860, -3.9341,  0.8810, -2.1328, -3.4027,  1.1150,
        -0.3904,  1.5407,  1.2668, -6.1011, -1.9843,  1.6557,  0.1161,  1.9594,
        -2.2944, -3.6556,  1.1995,  0.8624, -1.9803, -0.8150,  2.3836, -4.1447,
        -3.7098, -2.6409, -3.2510, -4.3719,  0.4441,  1.5692, -1.2905,  0.2854,
        -0.9953, -6.2830,  0.9924,  0.3668,  5.3916,  5.7118,  0.9043, -3.4762,
         3.2381, -0.8069,  2.2448, -3.4351, -2.5381, -0.4022, -0.4304,  3.2901,
        -1.1366, -3.7678, -0.4186,  2.3448,  3.0641,  0.6424,  4.0340,  4.5081,
         2.2788, -3.4383,  0.5637, -3.4256, -2.9735, -0.5591, -0.1494,  1.5653,
         0.7484,  3.0915, -1.9722,  4.8233, -1.9396,  2.9340, -0.0266,  3.3131,
         1.8576, -1.2429,  5.1721, -1.1340,  2.2356, -1.6233, -3.5925, -3.9354,
        -1.8675,  1.7412,  3.8438, -0.9645, -1.5946, -4.5507, -2.0863, -5.1193,
        -4.4655, -1.5431, -1.3426, -1.3158, -1.6580, -4.3568,  1.7922, -0.0844,
        -3.2435, -3.0110, -0.7460,  0.6649, -3.5801, -3.2946, -3.1211,  1.2646,
        -0.3898, -2.6192, -2.9566,  2.0517,  3.0324,  0.7688, -2.1841, -3.6242],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,166 - myNeural - INFO - Forward Pass: tensor([-3.1984, -3.1625, -2.9192,  ..., -1.3793, -2.0746, -1.0737])
2021-05-25 09:10:01,181 - myNeural - INFO - Forward Pass: tensor([-2.7461, -3.7724, -2.5852, -1.5335, -2.1276, -4.1854,  3.6381,  2.0166,
         2.2031,  2.8592,  1.9278, -6.2908, -1.9680, -3.3919, -1.1481, -4.0647,
        -5.2470,  3.5460,  1.6036, -4.6329, -2.9137,  4.0189,  3.0014, -3.2323,
         3.0872, -3.4275, -2.3753,  2.4151, -2.1031, -3.5303, -3.4796, -0.9068,
         0.1383, -3.3621,  1.7392, -0.6508, -0.7945,  5.4116,  4.8566, -3.4687,
        -0.8025,  0.5680, -1.5889,  2.8472, -0.4685, -2.0586,  1.6666, -0.8283,
        -1.3118, -0.7298, -7.0430,  0.3138, -1.4164,  1.7021, -3.2750, -4.4905,
         1.7308, -1.2812, -1.9568, -4.8956, -2.3783, -0.2299, -2.3858, -4.1544,
        -0.9390,  1.3653, -2.1388,  2.3662, -2.7318, -2.7387, -1.9774,  3.1741,
        -3.4267,  2.5675, -3.7501, -2.9687, -4.2577, -2.4068,  2.3223,  0.5195,
        -4.8332,  2.2380,  1.5456,  2.2749,  1.7036, -4.6093,  3.3389,  0.3223,
        -3.1089, -3.8608, -0.9144, -0.6795, -1.7379,  0.2537, -3.4797,  1.9970,
         3.8808,  1.0359, -2.0935, -0.2344,  2.3060,  0.2460, -3.3722,  3.2840,
         0.2084,  4.3792, -2.1910,  1.4546,  0.1383, -0.0288,  1.6859, -2.9510,
        -0.0683, -2.4131,  2.5928,  3.7639, -3.6788, -0.7764,  0.9193, -2.4119,
         1.5682, -4.1801, -0.8837,  1.0610, -1.0949,  1.1510,  2.3115, -1.8319],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,197 - myNeural - INFO - Forward Pass: tensor([-3.1891, -3.1074, -3.0084,  ..., -1.3977, -2.0095, -1.0623])
2021-05-25 09:10:01,215 - myNeural - INFO - Forward Pass: tensor([ 0.3789,  3.9839,  3.9232,  1.2692,  2.7741,  1.7227, -2.1273, -3.7682,
        -1.7861, -3.2419,  1.4756,  3.4854, -0.8718, -0.2166,  2.1006, -0.0275,
        -0.7412, -4.0254,  0.4900, -0.0461,  0.1225, -3.2570, -1.4371,  3.3802,
        -3.0172, -0.2054, -0.7703, -4.8162,  3.7295,  3.6628,  1.8995,  0.0454,
        -7.6045, -4.0223,  3.1895, -0.8999, -2.9733, -2.3826, -0.4315,  0.3503,
         1.3717,  3.2012, -1.5578,  2.3396,  0.3170,  0.8243,  4.4937,  1.7504,
         3.0951, -2.4275, -3.8318, -2.1036, -2.9698, -2.6837, -4.3710, -0.2906,
        -4.0594,  0.4869,  4.3761, -0.5609,  1.3116,  3.6047, -1.8684,  2.1318,
        -2.0556,  1.4609, -4.3870,  2.0357, -3.9072, -2.6652,  2.9342, -1.1783,
        -4.8318, -0.6979,  0.6922, -1.1543,  1.7562, -3.3985, -1.7405, -2.0464,
         2.1728,  1.0193, -1.1768,  2.1547,  4.0096, -0.9668,  0.0647,  2.2094,
         1.5630,  0.7663, -0.7269,  1.2271, -2.7451, -3.3937, -4.1399,  1.3320,
         3.4438,  3.0212,  0.3237, -1.4516, -2.1529,  2.9347,  2.3074, -0.6382,
         4.7978, -0.9554, -0.0898,  2.8267,  5.0125,  4.2315, -1.3001,  4.8962,
        -1.3818, -2.9567, -2.6317, -4.2121, -1.1567, -5.1008,  4.9510, -0.2774,
        -5.5069,  2.4883,  5.2966, -3.5563,  2.0992, -1.4178, -0.2291,  2.8866],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,232 - myNeural - INFO - Forward Pass: tensor([-2.3588, -2.6163, -2.7010,  ..., -0.5850, -1.1996, -0.9034])
2021-05-25 09:10:01,251 - myNeural - INFO - Forward Pass: tensor([-3.7988, -5.8182,  0.0138,  2.3498, -0.2134,  0.8775,  0.5536, -3.9162,
        -2.3001,  6.0276,  3.3242,  6.0643,  2.9442, -2.3740,  2.0089,  5.0054,
        -1.0879, -2.3143,  1.4287,  5.6086,  2.7778,  0.1217,  3.1339,  4.0215,
         1.4558, -1.2360, -2.0427,  1.9328, -2.7953,  1.9696, -0.1108,  5.0281,
         1.5702,  3.5515,  2.2276,  0.0534,  5.7855, -2.5685,  5.9793, -0.0684,
         0.0587, -2.2248, -2.0572, -1.1647,  2.9887, -1.6825,  0.8639, -2.9541,
         0.3173,  5.5305,  3.1772, -0.2900, -5.1556,  0.2056, -1.4551, -1.3886,
         4.4782,  1.8605, -2.9070, -0.5829,  2.7583,  0.6460, -5.8391,  6.0451,
        -1.3254,  7.5303,  4.3920,  0.3116, -2.6240, -3.7837,  1.7181,  1.2448,
        -3.3723, -3.6156, -3.2076, -1.6632,  2.5404,  0.8728,  4.2172,  4.3955,
         1.6468, -3.5757,  5.6691, -3.8105, -0.2150,  3.4549,  5.8271, -1.9900,
        -4.1939, -4.6656,  8.0819, -3.7293, -1.1793, -3.4231,  4.4456, -2.4622,
         2.8957,  5.0401, -3.1963, -2.2692,  3.9075, -6.2631,  0.1949, -3.2449,
         1.8513,  4.2011,  6.9277,  0.2187,  3.5204, -2.5474, -1.0400, -2.4712,
         2.8618, -3.0157,  0.2948, -0.6963,  2.5260,  3.8873,  1.5154, -4.6410,
         4.5276,  1.9179,  5.4711,  6.5888,  4.4312,  0.3520,  1.7920, -2.2180],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,268 - myNeural - INFO - Forward Pass: tensor([-2.3332, -2.7410, -2.7496,  ..., -0.5110, -1.4544, -1.0512])
2021-05-25 09:10:01,284 - myNeural - INFO - Forward Pass: tensor([-3.0282e+00, -1.1314e+00, -3.9189e+00, -3.9961e+00, -6.2785e+00,
        -2.6548e-01, -7.6528e-01, -2.0587e+00, -3.9575e+00,  1.2149e+00,
         4.3733e-01,  2.8832e+00, -1.7815e+00, -3.5147e-01, -3.8179e+00,
         4.6073e+00,  1.8552e+00, -5.3949e+00, -2.5755e+00,  1.3175e+00,
        -9.9281e-01, -1.5033e+00,  5.3115e+00, -7.2886e-01, -3.7055e+00,
        -1.5788e+00,  6.5098e-01, -2.9951e+00,  1.0964e+00, -2.3302e+00,
         3.9692e+00, -9.0334e-01,  1.4981e+00,  4.0710e+00,  3.3927e+00,
         3.4711e+00, -1.5853e+00, -1.3228e+00, -4.7993e-01, -2.9066e-01,
         1.8931e+00, -2.6939e+00,  3.1929e+00,  1.0387e+00, -2.0347e+00,
         6.3702e+00,  4.2262e+00,  1.7694e+00, -3.8036e+00,  1.5122e+00,
         1.4722e+00,  2.1733e+00,  1.8819e+00,  2.2906e+00, -5.8105e+00,
         6.7925e-01, -1.2330e+00,  1.6511e+00, -5.6434e-01, -1.7906e+00,
        -4.4760e-02,  3.3245e+00,  2.9266e+00, -1.2439e+00,  2.1163e+00,
        -1.4401e+00,  5.3587e+00,  1.3122e+00, -1.8856e+00,  2.0916e-01,
         4.2418e+00,  4.4064e+00, -1.7186e+00,  2.5496e+00,  2.0359e+00,
         2.6225e+00, -2.5612e+00, -6.1901e+00,  1.0779e+00,  1.2076e+00,
         6.9586e+00,  3.2220e+00,  3.5129e+00,  1.7595e+00,  1.1979e+00,
         4.8791e+00,  5.3510e+00, -4.3241e+00, -1.5883e+00, -1.4888e+00,
        -3.9467e+00, -1.7363e+00, -3.3579e+00, -4.2774e+00, -2.0470e-01,
        -1.8823e+00, -1.4351e+00, -4.3027e+00,  5.3433e-01,  2.9013e+00,
        -4.2944e+00, -3.7571e-02, -9.7775e-01, -2.2011e+00,  1.5828e+00,
        -9.7251e-01, -3.8042e+00,  3.7522e+00,  2.7253e+00,  3.3003e+00,
         9.1354e-01, -3.0322e+00,  1.7117e+00, -3.4473e+00,  1.0814e-01,
         6.9220e+00, -4.3527e+00,  2.6247e-01,  2.3204e+00,  2.5958e+00,
        -6.5417e-01, -5.9181e-03,  3.8368e+00,  2.2021e+00,  2.5345e+00,
         6.7271e-01,  2.4189e+00, -5.2602e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,299 - myNeural - INFO - Forward Pass: tensor([-2.6950, -3.0441, -3.0818,  ..., -1.1949, -1.9150, -1.4727])
2021-05-25 09:10:01,317 - myNeural - INFO - Forward Pass: tensor([-4.5996,  0.5674, -4.6474, -6.3822,  0.5370,  2.6423, -2.5491,  3.8974,
         0.9913,  2.6747, -3.6133, -2.4990, -1.2361,  0.8229,  2.4465, -2.3164,
         1.7190, -2.0200,  5.6245,  1.6235,  5.4012,  2.7000, -1.6117, -2.8013,
        -4.4634, -1.0216,  3.4018, -2.5239, -1.5071, -0.1164,  4.6852,  1.6492,
        -0.6232,  1.9656,  0.0068, -4.7101, -0.3223,  3.8242, -6.5355, -1.6247,
         1.2971,  4.4607, -3.6062, -1.2752, -3.3413, -3.5972,  4.6539,  3.2841,
         0.4977, -2.4070, -2.7075, -0.9706, -0.3622,  3.3231, -4.3306, -3.8643,
         6.0015,  4.4201,  1.3710,  1.8536,  1.5978,  0.0817, -1.8750,  4.9836,
         1.4139, -2.2599,  3.7166,  2.2369,  2.1352,  0.7784,  4.1805,  3.2616,
         0.9072,  2.1366,  2.8761, -1.9781, -2.9270, -0.5767,  4.4669,  2.5834,
        -3.8438,  1.7100, -1.9475,  2.9355,  2.5339,  1.2623,  3.0274,  1.4077,
         2.0540,  3.7026,  1.7061, -5.2582,  1.3344, -2.0677,  0.0461, -3.9453,
         2.9033,  0.7195, -2.5612, -4.1990, -4.1047, -1.4186,  0.4621, -2.5483,
         0.1538,  4.0088,  0.8248,  2.9559,  5.4781,  2.3204, -4.5208,  3.4122,
        -1.9090,  1.5849, -3.5883,  1.3611, -1.3721, -5.1615,  1.3501, -0.3898,
         1.1819,  4.5989,  0.9975, -0.3842,  4.6598,  1.9932, -0.3463, -3.4000],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,333 - myNeural - INFO - Forward Pass: tensor([-2.3301, -2.8340, -2.7844,  ..., -0.8072, -1.5145, -1.0127])
2021-05-25 09:10:01,348 - myNeural - INFO - Forward Pass: tensor([-0.2298, -3.3443, -2.9910,  0.6268,  3.8319, -1.7970, -3.7916,  1.1202,
        -5.0137, -0.8292, -6.1241, -2.5643, -2.4396,  3.0989,  5.1600,  2.6936,
         1.1936, -1.2658,  6.3411, -2.3408, -3.1274,  4.8195,  0.3347,  0.0815,
        -1.6503,  0.9159, -3.1813, -4.3664,  2.0915,  1.1039, -0.2135, -1.3600,
        -2.9171, -2.3376,  1.0894, -1.5073, -4.7837, -3.4589, -0.2871,  1.0895,
        -2.0506, -1.7972,  3.7768,  0.8309,  0.6833, -3.8616, -2.7281, -1.4870,
         2.9033,  2.9929,  0.1084,  0.6261,  3.2017, -1.9083,  9.5227,  2.6096,
         4.6471, -2.7927,  0.5338, -1.0568, -2.9153,  4.0334,  3.3738,  1.3611,
        -4.8047,  8.2348,  2.1504, -2.9155,  3.7689, -0.4021,  0.5761, -3.7852,
         1.9234,  2.5040, -3.1456,  3.3454, -0.4058,  3.5589, -5.5617, -1.6921,
        -2.6581, -1.4987, -3.3057,  1.9931,  1.9439, -0.0166,  3.2432,  3.5147,
         4.3194,  0.7556,  1.4095,  0.1908, -1.9301,  1.7864, -2.4891,  3.5646,
         4.9405,  4.5670, -4.8647,  3.7647, -3.8990,  3.1019, -4.1281, -3.7999,
        -2.4154, -1.6677, -0.0098, -1.8343, -4.9309,  0.0658,  6.0533, -1.3739,
        -2.6894, -3.2046, -0.3121,  3.1592, -3.4876,  1.3242, -1.4294,  3.0982,
         1.1402,  2.7787,  0.0559,  3.2324,  0.0332,  0.1137, -3.8044, -2.8038],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,364 - myNeural - INFO - Forward Pass: tensor([-2.2596, -2.7417, -2.8081,  ..., -0.6397, -1.5777, -0.9259])
2021-05-25 09:10:01,379 - myNeural - INFO - Forward Pass: tensor([ 0.0916, -1.5037,  0.0112,  0.7590,  1.3684, -0.6989,  1.2163,  2.8460,
         2.7137, -3.6834, -3.2875,  3.5289,  5.7678,  2.4393,  1.8768, -0.1267,
        -3.4534,  0.3423, -0.2233,  2.0640, -3.8467,  0.1566, -3.4920,  1.4932,
         3.4868,  2.7544,  3.1404, -1.5580, -1.1898,  4.1517,  0.5309, -2.5419,
        -0.4753,  1.4153, -4.1611,  1.9628,  0.1774,  2.1848, -2.2534,  3.4752,
        -3.9466,  1.1465, -0.6664, -0.1291,  3.1022,  5.8615,  1.3557,  0.1477,
         3.8698, -1.5150,  4.9485, -2.1402,  1.0564,  1.6248, -2.3712,  1.4917,
        -1.5280, -1.0890,  1.9314,  0.8303, -3.4996,  3.6114, -1.2186, -0.8559,
         1.8054, -4.4148,  0.6379, -3.4827,  3.6475,  4.5831,  0.7514,  4.1965,
        -1.3902,  1.1914, -2.5839,  1.9587,  2.6302,  4.3559, -0.1741,  7.0806,
         2.7165, -4.0898, -3.8598, -1.1603,  3.9833,  2.3193, -0.6713,  1.3821,
         1.2002, -3.4697,  2.2264, -0.6928, -1.1085, -0.0938,  2.3106,  4.9285,
        -4.5259, -0.6162,  4.2450,  4.0650,  2.7933,  1.1568, -1.9141, -1.7655,
         1.2567,  2.6676,  3.3639, -1.5852,  5.9338,  2.9275, -1.0886,  0.9167,
         2.9367,  3.1159, -0.4649, -3.0100, -2.9043, -1.2861, -4.4032,  3.8324,
         0.6957, -2.0518, -4.2962,  1.0549, -0.8390,  5.6968,  1.2265,  4.3921],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,394 - myNeural - INFO - Forward Pass: tensor([-2.3706, -2.8285, -2.9044,  ..., -0.5915, -1.6748, -1.0294])
2021-05-25 09:10:01,409 - myNeural - INFO - Forward Pass: tensor([-2.6285,  2.9040,  2.3994,  0.8261, -0.6953,  4.3611,  1.4768, -0.3599,
         0.6806,  5.0826,  2.1409, -0.7698,  5.2508,  3.2000,  0.3649,  0.4873,
         5.0169, -1.8656,  1.7351, -1.1328,  1.0668,  1.5878,  6.0289,  3.1457,
        -2.1053, -1.3281,  2.0030, -2.7910, -5.3106,  2.8152, -1.4544, -3.3923,
         2.4204, -1.2369, -1.0388,  4.1021, -3.4256,  5.8161, -2.8388, -1.9011,
         0.6412,  2.1614, -1.1682, -1.0715, -0.2264,  1.2573,  2.3705,  0.5758,
        -1.2212, -2.5589, -0.2332, -2.8315,  1.1536,  3.3213,  0.2374,  6.0492,
         2.8378,  1.4329,  2.9180,  2.0246,  5.9887, -0.3887, -2.0413,  1.7941,
        -4.3665, -1.6149,  2.9261,  2.7338, -2.9248, -1.2036,  1.7356, -3.7287,
         1.4490, -1.4965,  1.3552, -1.8096,  3.9277, -0.1838, -1.5494, -3.9196,
         3.8562,  1.5177, -0.4782,  1.3657, -2.3689,  0.2627, -2.2179, -4.5499,
         0.9436, -0.4621, -1.3424, -0.6611, -2.6738, -0.3085, -2.3746,  1.0404,
         1.9002,  7.1184,  0.0128,  5.7067,  1.3206,  1.4915,  2.9756,  1.7663,
        -0.2305,  1.4508, -4.4951, -0.0111, -3.0195,  4.0734,  0.6664,  1.6787,
         2.6541,  4.5788,  3.7948, -5.4556, -0.2110,  4.3336, -1.9251, -5.3640,
        -0.5613, -2.2116,  7.5165, -3.1226,  1.6918,  3.4831,  5.7436, -4.6040],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,424 - myNeural - INFO - Forward Pass: tensor([-2.5106, -2.9704, -3.1279,  ..., -0.8136, -1.7995, -1.0493])
2021-05-25 09:10:01,438 - myNeural - INFO - Forward Pass: tensor([-1.9865, -0.2072,  4.5177, -2.1727,  1.0828,  2.1207,  1.9679, -2.1666,
        -1.6351,  0.5091,  0.1199, -2.4317,  0.3529, -0.9070,  3.8242, -2.0619,
         5.2375,  0.2550,  3.6536, -2.3564,  1.5344, -1.7802, -1.1446,  1.5636,
        -7.3637,  1.3767,  1.0297,  5.6021, -3.0358,  0.8460, -3.6969,  2.8601,
        -3.8972,  5.4911, -3.4478, -0.4003, -4.2529, -0.8789,  3.5642,  1.2849,
        -2.0438,  5.1791,  1.0038, -0.1877,  5.0300, -4.8357, -2.7962, -2.9357,
        -2.0377, -2.2316,  0.2517,  1.4740,  0.5251, -3.1205, -3.7004, -2.8677,
         2.6049,  4.9976,  0.1773,  3.1502, -2.2719,  6.2503, -0.8399,  2.2490,
         2.3196, -2.9538,  0.0622, -2.0523,  0.0622,  6.1796, -3.0564,  0.0956,
         1.2442, -3.7627, -0.4828,  1.2302,  3.5680, -0.6887,  0.0619, -0.9213,
         0.2502,  2.3408, -2.5996, -5.7275, -1.4395,  2.8647, -1.5153,  3.3351,
        -4.3107, -3.3696,  4.4261,  0.9000, -0.6857,  3.6539,  1.4505, -1.5365,
         0.1525, -2.6766, -2.1696,  0.9528, -3.9024, -4.1975, -1.1173,  1.3553,
        -2.2123,  4.5361, -4.5167,  0.2967,  1.0223,  0.2005,  0.9583,  0.9017,
        -2.6959,  0.1488, -1.2607, -3.1623,  1.4370,  3.7628, -0.9940,  0.7913,
         0.0691,  3.6376, -2.8501,  4.8676,  4.6391, -1.7930, -2.0248, -3.8801],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,452 - myNeural - INFO - Forward Pass: tensor([-2.8400, -3.2319, -3.5985,  ..., -1.2534, -2.2859, -1.5224])
2021-05-25 09:10:01,468 - myNeural - INFO - Forward Pass: tensor([ 0.9809,  3.2281,  1.2916, -6.0655, -1.7564,  1.4606, -0.1515,  0.7035,
        -2.9485,  5.7838, -2.3356, -5.2418,  0.6408,  4.2904, -3.8151,  2.2755,
         1.0323,  2.7231,  3.2206,  1.8783, -5.8946,  3.3467, -2.7427, -3.0910,
        -0.2905, -2.2116, -0.8851,  1.6254,  1.7936, -0.7355,  1.9546,  1.6972,
        -1.0992,  1.1154, -0.3573, -3.8702, -1.6110,  3.0131,  0.8859, -4.3114,
         0.0744,  1.5091, -1.5953, -2.9656,  1.4171,  4.4870, -1.7854,  2.8700,
         3.1115, -0.9967,  1.7476, -0.9586, -0.2748, -1.4522,  0.7884, -2.3155,
         3.8143, -0.3684,  2.6405,  2.3673, -1.4389, -4.1404, -0.1712,  3.2565,
         2.5279, -0.2419, -0.7277, -1.9948, -6.4333,  1.4730, -1.1893,  0.4968,
        -2.4273, -4.1138,  2.6224,  5.7974, -2.2768,  3.1996, -5.7578,  3.9534,
        -3.2773,  3.7123,  4.0808, -2.1690,  2.3210, -3.6210,  3.5849,  4.5311,
        -3.7060, -0.7182, -2.0505, -4.5512,  2.8374,  2.3538,  1.9150,  1.6843,
        -0.7128, -4.8727, -1.8204, -1.1890,  4.0557, -4.0324, -2.3726, -2.6049,
        -0.8018,  3.1742, -3.8765,  4.2389, -1.0235, -0.5640, -5.6122,  3.0519,
        -2.9479,  2.7712,  1.9260,  2.8644,  2.4137, -2.1362, -4.2742, -1.9345,
         1.1025,  3.7713,  0.1727,  3.5978,  1.7426, -3.4040,  2.5581, -2.4251],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,483 - myNeural - INFO - Forward Pass: tensor([-2.0443, -2.8809, -3.2440,  ..., -0.7212, -2.0995, -1.2058])
2021-05-25 09:10:01,501 - myNeural - INFO - Forward Pass: tensor([ 4.2234, -3.2469, -2.4060, -1.5767, -6.3515,  1.3837,  0.6783,  1.6183,
         4.4282, -3.1146,  4.0079, -3.4367, -4.0403,  0.4052,  0.1575, -2.3439,
        -1.4858,  0.7673,  0.7549, -0.9107, -2.5798,  1.6778,  3.6860,  5.2660,
         3.4307, -0.5172, -2.9116,  6.5218, -3.4591,  4.9387,  4.2631,  1.6003,
         0.9384,  4.2197, -0.4002, -1.7878,  3.0311, -0.2848,  0.4967,  2.4267,
         1.2253, -1.6355, -1.2776, -2.6830,  0.0724,  1.1480, -4.3670, -2.4051,
        -1.7496,  1.2885,  4.1636,  2.9245,  2.6268,  3.9148,  0.3849,  4.5614,
         3.8047,  1.5086, -1.1159, -4.8995, -3.8158, -1.4927, -1.2189,  3.6634,
        -1.0871, -1.4005, -1.4798,  1.0558,  6.1692,  0.2112,  0.5554,  1.3364,
         1.8451, -5.1489, -1.5934, -4.7731,  5.0368,  1.3503, -2.9212,  3.6201,
         3.5850, -1.4401, -0.8974, -0.2809, -1.0678, -2.0912, -1.9340, -2.1411,
        -4.6689, -1.9659, -0.2561,  0.4671, -1.7726,  3.4843, -1.4252, -1.9226,
        -1.2045, -3.5722,  4.6471,  1.4444,  0.7287,  3.7800, -1.6879, -2.8314,
         0.9073,  4.8385, -3.7973, -2.8706, -0.8292,  2.5458, -1.0757,  0.2332,
        -4.5156, -0.4496,  1.8259,  3.0726,  1.2207, -2.2082,  5.4120, -3.9282,
        -3.4582, -1.5885,  3.2697,  2.5305,  0.1968,  3.9963,  2.7604,  2.2185],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,517 - myNeural - INFO - Forward Pass: tensor([-1.3950, -2.6140, -3.0122,  ..., -0.2647, -1.9478, -0.6195])
2021-05-25 09:10:01,532 - myNeural - INFO - Forward Pass: tensor([-4.2860, -1.4732,  7.2116, -3.5317, -2.2038,  3.2291, -4.4627, -3.3289,
        -0.6794,  2.7579, -0.9789,  1.6335,  0.0446, -0.4313,  0.1402, -3.5120,
        -2.7234, -2.0395,  2.6608,  2.9687,  1.4296,  1.6473,  4.8858, -1.0858,
        -0.5696,  3.3683,  4.8420, -1.5813,  2.7154, -3.5471,  0.8670,  1.5662,
        -2.8865, -5.2066, -0.6159,  5.0105, -4.2079, -0.7855,  3.0340,  0.1400,
        -2.7618, -2.4393,  3.2525,  1.1039, -1.1415,  0.0842,  1.9751,  4.2950,
         4.7666,  1.4104,  0.5378,  2.6031, -1.0257, -4.7347, -3.4518, -0.9590,
        -1.3023, -2.2259, -2.5747, -4.4074, -5.0417,  2.7239, -0.3378, -0.1537,
         4.5212, -1.6537, -4.8016,  5.5614,  0.2205,  2.2848, -2.2385,  1.5294,
         3.8967,  6.2659,  1.9466,  0.7485,  5.9729,  6.1360, -0.5282,  0.8796,
        -2.4498,  5.7048,  2.3993,  3.4243, -3.2984,  5.4510,  5.1858,  2.8494,
        -1.5641, -2.5185,  4.3027,  1.6798,  2.5798,  0.7758, -3.6290,  2.4325,
        -1.0220, -2.2388,  3.7067, -1.9199, -3.9406, -2.2547,  4.4878,  5.4447,
         2.3397,  0.1188,  2.7912, -0.0487,  2.0259,  2.4608, -0.3811,  1.1812,
         2.4599, -0.3034, -2.0213, -1.6387,  1.2561,  5.3901,  3.2178, -4.7946,
         0.8830, -0.5081, -3.5205, -3.3564, -2.1964, -0.3095, -1.2809,  3.1302],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,547 - myNeural - INFO - Forward Pass: tensor([-1.7757, -2.7968, -3.2334,  ..., -0.7089, -2.1375, -0.8487])
2021-05-25 09:10:01,564 - myNeural - INFO - Forward Pass: tensor([-1.0925,  3.1259,  4.5489,  0.5984,  2.8488, -2.8526,  1.0921,  2.5635,
        -4.4174,  2.9002,  1.1324,  5.4113, -2.6991, -0.4705, -2.3998, -3.4741,
        -0.8833, -7.5606,  4.5603, -2.7145,  2.1252,  5.0512,  3.0702, -5.0753,
        -2.4965,  5.3663, -0.3783,  5.1584,  2.2624, -2.4107, -1.5494, -3.8171,
        -5.7877,  2.9991, -2.4023,  0.6185,  2.6191,  3.1994, -3.7673,  1.5339,
         2.1453,  2.9660, -2.1701, -0.8400, -3.8294,  3.4845,  3.2054, -1.7028,
         2.9183, -1.0325,  3.7952,  4.6102, -4.0028, -3.8522, -0.1692,  4.9506,
        -1.2620,  1.6441,  3.0135,  2.9597, -0.1301, -3.1784, -3.6854, -0.4394,
         4.0465, -3.5266, -1.5815, -0.0290, -1.1550,  2.6874,  2.8508,  2.2866,
        -4.0945, -0.6358, -4.4789, -0.8426,  0.2974, -1.0093, -1.9355, -1.2201,
         4.3958,  1.6103,  3.3212, -3.7201, -3.4447, -4.0607,  2.5108,  2.3606,
        -3.6943, -4.6845, -5.1262, -3.2356, -0.6417, -4.4772,  2.1435,  3.5906,
         2.9935, -2.4929,  3.9522, -0.3965, -2.6747,  2.0279,  2.4209,  0.5059,
         0.7808,  0.4507, -0.8921,  5.8668, -0.5816,  4.8650,  3.4523,  2.1249,
        -0.3171,  1.4007,  2.4363, -1.3560,  2.2017, -3.7641,  2.2067, -2.2215,
        -0.9977, -1.1648, -0.0852, -1.4787,  0.0661, -3.4760, -4.8121, -2.5080],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,579 - myNeural - INFO - Forward Pass: tensor([-1.0714, -2.3762, -2.8744,  ..., -0.1908, -1.6139, -0.4251])
2021-05-25 09:10:01,594 - myNeural - INFO - Batch 40 -- TrainLoss: 0.30167 -- TrainAcc: 85.15625% -- TestAcc: 80.85000%
2021-05-25 09:10:01,598 - myNeural - INFO - Forward Pass: tensor([-1.5258,  0.0528, -4.8212, -0.0267,  4.2657, -0.1342, -0.7590,  1.7276,
         3.2225, -1.2906,  0.9152,  3.9461,  0.9388,  4.5456,  2.6141,  4.8631,
        -1.5036, -0.9243, -3.3610, -3.9803, -2.4204,  6.5958,  2.6595,  3.1745,
         4.4445, -1.3446,  4.7245,  1.2602, -2.9700, -2.0501, -0.9679,  5.3117,
         1.8594, -0.7740,  3.1400, -0.7076,  3.0608, -0.3869,  0.6881,  3.0696,
         2.6026, -1.3144,  2.0717,  0.9460,  4.6947,  1.7497,  4.4256,  0.7267,
         6.8023,  1.2729, -1.0568, -2.2223, -2.2549,  1.6144, -2.8910, -3.5872,
         0.9247, -0.1347,  0.1229, -3.9248,  4.4548,  1.1777,  4.8161, -1.8490,
         1.6444,  2.0554,  8.1949, -1.1604, -0.4714,  0.3244,  3.8337,  2.8774,
         2.3775, -2.6844, -0.8450, -0.9076,  3.2117,  5.0177,  3.4921, -1.6278,
        -0.3300, -0.2616,  0.0714,  2.3031,  4.2892, -2.4378, -4.4642, -5.6263,
        -1.4964, -5.0996, -0.8742,  6.1176,  2.5538, -0.4266,  0.2111, -4.5783,
         2.0840, -3.6067, -0.2942,  4.1406,  0.8341, -1.9925, -0.2412,  1.1023,
        -2.9261, -0.3857,  4.7403, -0.0914, -1.0557, -1.9658,  3.0193, -2.7236,
         4.4469,  4.9422, -5.8363, -4.2594, -0.3729,  5.8912, -2.9967, -1.8863,
        -2.7597,  2.0818, -2.9159,  1.7793,  6.5484,  3.5699,  7.0167,  4.8755],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,612 - myNeural - INFO - Forward Pass: tensor([-2.1303, -2.9400, -3.4319,  ..., -0.9245, -2.3786, -1.0875])
2021-05-25 09:10:01,629 - myNeural - INFO - Forward Pass: tensor([ 2.2191e+00,  4.2779e+00,  4.0528e+00,  1.3893e-01,  3.3367e+00,
         1.6279e+00, -2.2261e+00,  2.3122e+00,  2.8330e+00,  9.4185e-02,
         2.3089e+00,  3.3094e-01, -1.5994e+00, -3.0494e-01, -3.7162e+00,
         6.7157e+00,  2.2755e+00, -6.6263e-01,  4.3310e+00,  2.6365e+00,
         3.7390e+00,  2.6572e+00,  7.7186e-01, -2.2896e-01, -6.3656e+00,
        -1.4315e+00, -1.9009e+00,  2.8364e+00, -1.2570e+00, -3.4174e+00,
         2.8110e-01, -2.3773e+00,  1.5657e+00,  5.3142e+00,  1.8027e+00,
         4.3007e+00,  7.0547e-01, -1.8437e+00, -3.7759e+00,  8.0184e-01,
         1.6057e+00, -8.3167e-01,  1.7752e-01, -2.4868e+00, -3.2757e-01,
         1.6178e+00, -1.2937e+00, -3.3491e+00, -7.8188e-01,  1.2430e+00,
         3.4781e+00, -2.0962e+00, -2.1726e+00, -2.9032e+00,  9.5241e-01,
         3.0676e+00, -3.2290e+00, -8.7950e-01, -1.1737e+00, -4.0052e+00,
         5.2775e+00, -1.8721e+00, -1.6846e+00, -3.3433e+00,  3.8186e+00,
         3.0854e+00,  2.7181e+00,  7.7146e-01,  2.0521e+00,  1.6090e+00,
        -2.3939e+00,  1.8540e+00,  1.0115e-02,  3.3225e+00,  2.4032e+00,
         1.0261e+00, -2.0277e+00,  2.2058e+00,  6.1828e-01, -4.3911e-01,
        -2.8925e+00, -3.9520e+00, -2.9180e+00,  3.9283e+00, -1.1154e+00,
         1.7733e+00,  4.0218e+00, -1.8374e+00, -7.8614e-01,  1.0581e+00,
        -8.5714e-01,  2.8628e+00, -1.8449e+00,  9.3824e-01, -3.8985e-01,
        -5.4162e+00, -2.3419e+00,  1.7437e+00,  1.7621e+00,  6.4130e+00,
         2.4502e+00, -2.8431e+00, -1.0445e+00, -5.2784e-01,  4.8171e-03,
        -3.0277e+00,  4.4319e+00, -1.5134e+00,  6.0782e-01,  1.2306e+00,
        -1.7505e-01, -2.8843e+00,  1.9189e+00,  2.0579e+00, -4.5053e+00,
         1.1744e+00, -1.0060e+00,  2.4271e+00,  3.3279e+00, -2.1339e+00,
         6.2296e+00, -9.5766e-01,  3.7697e+00,  2.7876e+00,  4.7353e+00,
        -6.9998e-01, -2.1910e+00,  8.5450e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,643 - myNeural - INFO - Forward Pass: tensor([-2.3122, -3.0794, -3.6485,  ..., -1.1683, -2.6151, -1.1687])
2021-05-25 09:10:01,659 - myNeural - INFO - Forward Pass: tensor([-0.2531, -1.3827,  2.4667,  1.4553, -4.1036,  0.8707,  2.6339,  2.0593,
         3.5212, -2.4401,  4.1349,  4.9033, -1.4173, -0.6602,  2.0794, -2.5726,
         2.9982,  2.8738, -1.7106, -6.3287, -1.8059,  3.2037,  1.7672,  2.5157,
         0.1581, -0.6880, -0.4576,  0.3223, -1.2445,  7.0901, -1.6150,  2.1393,
         4.1033,  1.8140, -1.6288,  1.6641,  0.4230, -0.1240,  5.2188,  0.7623,
        -2.3468,  0.5550,  2.7572,  3.3744, -0.2616,  2.7898, -2.2243, -0.1240,
         3.2153,  3.2807,  1.1097,  3.5154, -4.2697, -2.4929, -5.0494, -3.7502,
         1.8640,  4.8616,  1.1134,  3.7216, -3.9306,  5.3636, -2.6322, -4.0458,
         5.4204, -1.9238, -4.4084,  2.9639, -0.3139,  3.8718,  3.8573,  1.2182,
        -1.3992,  0.4346,  0.7350,  3.1575,  1.6933, -2.6819, -0.0477, -5.3362,
         1.7759,  4.1829,  0.9307, -1.4589, -0.8232,  3.1679,  1.8903, -1.9745,
        -2.9363, -7.2974, -2.4409, -5.8032, -1.8830,  1.4580,  1.2184, -1.6060,
        -0.4413,  0.8979,  2.2593,  0.2313,  2.8185,  1.7317, -1.3718,  5.4184,
        -4.4741,  3.0091, -3.0331, -1.7275, -2.4441,  1.0489,  0.5089,  4.6293,
         1.4166, -1.2083, -2.0647, -3.5690, -2.9012,  3.5329, -5.1743, -2.9307,
        -4.9122,  8.2223, -0.9375,  2.6485, -1.5793,  0.0674,  2.1750, -3.2187],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,674 - myNeural - INFO - Forward Pass: tensor([-2.1516, -2.6651, -3.1832,  ..., -0.4763, -2.0182, -0.3953])
2021-05-25 09:10:01,689 - myNeural - INFO - Forward Pass: tensor([ 4.1426, -1.4461,  0.5602, -4.0692,  3.7547,  2.2529, -2.4559,  3.9154,
         2.3512,  1.4832, -2.9559, -1.2795,  1.1936, -2.2967, -1.2481,  3.0742,
         6.1533, -0.8949,  1.4079,  2.5599,  4.0570,  1.0740, -2.9645,  2.6534,
        -3.5054, -2.0457,  3.9116,  3.5681, -3.7818,  0.1159,  1.6507,  0.0170,
        -4.6488, -3.8582,  0.6504,  1.0828, -5.9370, -0.3045, -1.3137,  0.1353,
         2.4856,  5.3611, -0.0957, -2.9515,  0.1594, -2.3435, -3.9608,  4.2596,
        -1.3943, -2.1416,  4.3133,  3.4339, -0.7077, -4.5848,  2.0429, -0.2465,
        -1.5562, -0.4910, -3.8925, -1.8324,  4.9660, -5.0914,  6.2049,  3.3462,
         0.1258, -0.9676, -4.1467, -0.3669,  0.5668,  1.4265,  3.2637, -0.0178,
         4.4526,  3.9521, -4.7571,  4.2352,  0.1529,  2.5001,  2.1168,  2.6074,
        -0.5079,  0.6284,  2.0304,  0.8104,  3.9104, -2.5205, -3.7962, -1.6733,
         4.7512, -5.5262,  1.8185,  4.3919,  0.8319,  0.0700, -1.8797, -5.4868,
         1.7782,  5.0583,  4.5486,  6.4539, -1.4427, -1.7063,  3.8607,  3.5630,
         2.4175, -1.5027, -4.9659,  1.6677,  0.2344, -1.5202, -0.8856, -2.1376,
         0.0857, -2.9713, -3.3950,  0.1877, -4.3034, -0.2998,  4.6530,  4.3243,
         1.3724,  3.4018,  1.7114,  3.0700,  0.4359, -1.1650,  2.1045, -3.4239],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,704 - myNeural - INFO - Forward Pass: tensor([-1.8840, -2.4830, -2.8375,  ..., -0.3114, -1.7533, -0.1970])
2021-05-25 09:10:01,718 - myNeural - INFO - Forward Pass: tensor([ 8.8115e-01, -2.4062e+00,  7.6425e-01, -8.6528e-01,  4.0381e+00,
        -6.1695e-01,  3.1544e+00,  1.7039e+00,  2.1178e+00, -4.4610e+00,
         5.7853e+00,  5.0947e+00,  4.4506e+00,  4.6185e-03,  4.9063e-01,
         2.3187e+00, -3.5011e+00, -3.4537e+00, -2.8397e+00, -3.0368e+00,
        -1.9161e+00,  1.1762e+00, -6.4727e-02,  2.8833e+00,  1.6740e+00,
         5.0090e+00,  3.0766e+00,  6.8118e-01,  6.6716e-02, -2.0932e+00,
         4.7068e+00,  2.5245e+00, -2.1291e+00, -7.1295e-01,  8.9679e-01,
        -2.2981e+00, -2.4765e+00,  1.6844e+00,  8.5630e-01, -4.1934e+00,
         5.4614e-02, -1.1400e+00,  4.5433e-01, -1.6264e+00,  1.5446e+00,
        -2.7079e+00, -2.9950e-02, -8.7484e-01,  3.8312e+00,  1.8984e+00,
         3.5485e+00,  9.5531e-01,  4.9376e+00, -2.4563e+00, -1.0975e+00,
        -2.3852e-01,  4.2397e+00,  3.6744e+00, -2.3867e+00, -4.2316e+00,
        -2.6636e+00, -3.8441e-01,  1.7802e+00, -2.1284e+00,  4.1377e+00,
         6.1457e+00, -5.1770e+00, -2.7890e+00, -3.1181e+00,  2.2936e+00,
         3.2420e+00, -3.5051e+00,  1.5450e+00, -1.1724e+00,  8.5373e-01,
        -8.7543e-01,  3.4224e+00, -4.2614e+00,  1.2673e+00,  5.7386e+00,
         1.0080e+00,  1.4332e+00,  2.8850e-01,  9.2798e-01, -4.3775e-01,
        -2.3128e+00,  3.9391e+00, -2.8005e+00,  4.8619e+00, -1.9347e+00,
        -1.1639e+00,  2.9030e+00, -1.0267e+00,  4.0322e+00, -1.1201e+00,
         2.4513e+00,  5.1940e+00, -2.4323e+00,  6.9710e-01, -3.1227e+00,
         2.3555e+00,  3.8522e+00,  3.8623e+00,  3.0730e+00, -2.9611e+00,
         1.4827e+00,  3.8545e+00,  4.2556e+00,  1.4654e+00,  2.6630e+00,
        -6.7721e+00, -4.5721e+00,  5.5792e-01,  3.4818e+00, -6.0621e-01,
        -3.8545e+00,  3.4727e+00, -3.5932e+00,  3.2289e+00,  3.8904e+00,
         5.6253e-01, -1.0742e+00, -2.1548e+00,  2.6750e+00, -5.4945e+00,
        -1.5100e+00,  7.0658e+00,  2.8614e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,732 - myNeural - INFO - Forward Pass: tensor([-1.5097, -2.0880, -2.4617,  ...,  0.1684, -1.4048,  0.1790])
2021-05-25 09:10:01,747 - myNeural - INFO - Forward Pass: tensor([ 4.5028, -5.0634,  4.3158,  8.5326,  4.6188, -5.9246, -1.2871,  3.1623,
        -4.8086, -1.6060, -1.8495, -0.9692,  4.9132,  0.7712,  5.2701, -0.1691,
         4.4024, -1.3263, -0.2882, -0.2539,  1.0648,  2.1222, -0.2658,  1.9677,
         1.7219,  6.8659,  2.2999,  4.1066,  0.7837,  4.3870, -2.8492, -4.4243,
         1.1538, -1.5037,  1.3162, -3.3582,  0.0244, -1.5955,  1.5347,  0.6509,
        -0.0528,  2.4119,  4.0906,  4.6972,  2.1312, -2.7252,  1.6017,  0.9969,
         4.9596, -1.7011,  1.6399,  1.8040, -3.1151,  7.8691,  1.6566,  4.2338,
        -1.3757, -0.7800,  1.4541, -1.8139, -4.2351, -0.2905, -2.6405,  3.0360,
        -0.6912,  4.1446, -2.1274,  2.0311, -0.6946, -2.2117,  6.0480,  4.2494,
         0.3531, -2.4049, -1.3034,  6.9553,  1.5703, -1.1069, -6.3024,  5.6819,
        -0.7298,  1.3536,  6.4052, -2.1629,  4.9003, -2.5403, -0.0826,  3.7864,
        -1.4857, -6.4603,  2.4628,  0.1324, -4.5462,  1.1748,  0.5569,  4.2395,
         3.4847, -0.5070, -1.8912,  1.0759,  3.5614,  1.2073,  3.2489,  6.9535,
         6.1823,  1.5696,  2.6352, -1.4952, -0.5270,  1.0028, -0.8729, -1.8130,
        -0.3292,  0.1199, -0.5812,  2.4724, -1.6383, -1.8416,  1.1761,  0.9671,
         0.4417,  6.7851, -1.7126,  6.1449,  5.1937, -1.7882,  1.0234, -0.1418],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,762 - myNeural - INFO - Forward Pass: tensor([-2.6491, -3.0337, -3.7908,  ..., -0.9152, -2.6108, -0.8402])
2021-05-25 09:10:01,777 - myNeural - INFO - Forward Pass: tensor([-1.6761,  4.4700, -1.1300, -2.8591, -3.7117, -1.1172, -1.8957,  0.6033,
        -0.6293,  3.7043, -1.0678,  4.0495,  1.3190, -2.4485,  2.7725, -1.1102,
        -2.6558, -3.5554, -1.6643, -2.6380,  3.5417,  3.6444,  0.2829,  0.1472,
        -2.5647, -2.9042, -7.8075, -4.1187, -1.1583,  1.0163,  2.1642, -4.1314,
        -5.7731, -0.2985, -0.2285, -5.8858, -0.9926,  3.6383, -4.0650,  2.5090,
        -2.9607, -3.7599, -0.3058, -3.5846,  0.2929,  2.6759,  3.1029, -4.2063,
         0.4251,  5.5826, -0.8042, -2.4844, -3.9213, -2.8253, -4.0354,  0.6394,
         2.8006, -3.6376,  2.9646, -0.2370,  2.2517,  0.0999, -2.0334,  1.2213,
        -0.7631, -0.4588, -2.4756,  5.4430, -3.0094,  2.0419,  1.0073,  2.3746,
         3.9841,  3.8404, -2.6395, -5.7241, -0.5289, -0.2022, -1.0824, -3.5482,
         0.9560, -2.0512,  0.8005, -1.5502, -1.6009, -1.5172, -2.6313,  5.6255,
         1.6282, -0.8123,  0.6264,  0.1199, -5.1637, -2.9042, -1.0582, -2.8931,
        -4.4896, -1.2843,  3.2439, -1.8337,  1.2589, -1.5680, -4.6453, -0.8309,
        -0.9151,  3.1732, -9.3065,  5.0885,  0.9010,  2.2809, -0.7858, -3.0612,
        -4.4727,  5.7068,  5.1042,  4.3919,  2.3637, -0.5130, -0.9302, -0.0845,
        -1.9344, -4.2586,  2.6667,  4.5263, -6.1771, -1.4927,  6.5386,  1.0743],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,793 - myNeural - INFO - Forward Pass: tensor([-2.2455, -2.8531, -2.9051,  ..., -0.2506, -2.2360, -0.3642])
2021-05-25 09:10:01,807 - myNeural - INFO - Forward Pass: tensor([ 2.2175, -4.5606, -3.9950, -4.8537,  2.7426,  1.2406,  1.9096, -6.4296,
         1.6560, -1.5073, -1.1930,  3.8429,  3.4733,  4.2796, -2.3929, -3.9252,
        -1.9419,  3.2131, -3.2636, -1.0758,  3.7829, -3.2260, -1.0566, -6.1023,
        -3.4882,  3.3532, -3.8389,  0.9172, -3.9503,  0.3119,  1.0231,  0.8205,
        -4.8369,  3.1945,  0.2233, -3.3524,  2.2499, -2.7014, -0.1834, -1.1854,
         2.9066,  2.8520, -2.1334, -4.2113,  1.9607,  3.4652, -4.2472, -1.0987,
        -0.2433,  1.3543,  3.9039, -3.5947, -3.9578, -0.7309, -3.5908, -1.5270,
        -0.6503,  1.3943,  1.2277, -1.8296,  2.8192,  5.0709, -1.3566,  1.5580,
        -2.8676,  2.6968, -4.3598,  2.1719, -0.9611,  0.5628,  3.0989,  6.6629,
        -1.1850,  0.5372,  2.5388, -2.4070, -3.6900, -3.6755,  0.6571, -2.5857,
         1.5803, -0.2383,  5.7123, -5.0085,  3.2819,  1.7847, -3.1090, -1.0498,
        -0.2664, -5.1000, -3.2792, -1.0824, -0.0268,  1.4215, -1.6638, -3.7279,
        -0.5968,  3.3540,  6.4341,  2.7898,  6.2767,  3.0457, -4.0186,  1.6495,
        -2.4728,  3.6011, -2.2847, -1.6707,  2.5379,  4.9986,  2.9162,  0.1497,
        -1.7071, -1.5112, -2.3600, -0.4635, -3.1095, -4.6350, -1.3482,  3.9527,
        -0.0417, -4.2601, -3.9167,  5.2834,  1.5175,  1.8331,  3.6854,  2.8905],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,821 - myNeural - INFO - Forward Pass: tensor([-1.6009, -2.3950, -2.3027,  ...,  0.3786, -1.7284,  0.3041])
2021-05-25 09:10:01,837 - myNeural - INFO - Forward Pass: tensor([ 3.9627, -1.4508, -2.0709, -2.4017,  3.2365, -0.8322, -1.7475, -0.1877,
        -0.8939, -1.4890,  0.5285, -1.0990,  3.2537,  0.6505,  3.9927,  1.8705,
         3.7872, -2.5906, -2.3952,  4.8616, -3.4415,  2.3188,  3.4075, -2.8942,
        -4.4659,  6.4306,  0.6740,  1.7861,  5.6756,  0.8024, -0.6188,  1.6218,
         3.8582,  2.7387, -4.8177, -3.7761,  2.8241, -2.6578,  0.6090, -0.4813,
         4.2135, -3.7136, -3.0721,  4.0200, -5.6530, -1.7717, -3.7309,  2.6365,
         0.1211,  3.3629,  0.7249,  1.7143, -0.6525,  1.2130, -1.0920,  4.6681,
        -3.7091,  0.9539, -2.9896, -3.6319,  2.5465, -0.9898,  4.6924, -0.7687,
        -0.9910,  0.9622, -4.1162, -1.8819,  4.3157,  2.8191,  1.3724, -2.7328,
        -4.8420,  6.4742, -1.5010, -2.7631,  3.5093,  1.7222, -3.2566,  0.0939,
         5.3848,  4.2502, -4.9451,  1.7216, -3.4372,  3.7967, -2.7543, -1.6269,
        -1.1878, -2.2641, -2.2822,  0.8240, -0.6967,  0.1643, -4.1669, -1.0162,
        -4.5297, -2.4182, -3.0123, -4.3991, -2.7353,  3.1900,  3.3261,  2.9681,
         3.9265, -2.4929,  4.4632,  1.0092, -2.7383, -0.9662, -1.5977, -2.5362,
         1.2152,  1.4471, -2.0961,  2.8649, -0.4662, -0.1248, -0.7842, -3.4804,
         0.4569,  2.5525,  0.5576,  4.6106,  1.0597, -1.2409,  4.0150,  6.1395],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,851 - myNeural - INFO - Forward Pass: tensor([-2.0555, -2.8522, -2.6676,  ..., -0.2638, -2.3595, -0.1480])
2021-05-25 09:10:01,866 - myNeural - INFO - Forward Pass: tensor([ 1.8645,  2.2457,  3.1916, -3.4648, -1.1474,  1.2455, -1.4144,  5.0555,
         2.4125,  3.6650,  1.5538, -3.9947,  0.6628,  2.3588,  2.2518,  1.0161,
         2.0575, -2.0581, -2.8623,  1.0615,  0.5766,  4.5049, -1.9427, -2.3710,
         1.3978, -2.5855, -0.9570, -3.1463,  0.8318,  3.0124,  4.7318,  3.0573,
         2.3816, -5.1214, -1.7388, -2.0159,  4.4645, -0.7922,  3.1270, -3.7282,
        -1.0890,  0.6545,  3.2679,  2.9127,  3.3991,  2.6408,  0.3016, -6.9832,
         0.4374,  0.5532, -4.1316,  5.6917, -3.0517, -2.9359, -3.1541,  1.8158,
         2.0980, -3.4163, -4.8214, -4.1939,  0.8420, -1.1521, -2.2780,  0.4363,
         0.7090, -2.1735,  3.1432,  6.0033, -2.0996, -3.6045,  1.1280, -3.7313,
         3.1133,  2.8288,  6.4956, -2.9302, -2.6065, -2.1176, -1.6385,  0.4312,
         2.9631, -3.3783, -1.1727,  4.5136,  1.5885, -1.6400, -2.2735, -4.9200,
        -2.5251,  3.1273, -1.9018, -1.8346,  4.1028,  4.7745,  1.6999, -0.5045,
         2.7167, -0.8613,  4.1472, -3.8009,  2.6709,  0.3822,  5.2550,  1.1447,
         0.8876, -1.9547, -2.8499,  1.2233, -1.6177,  3.2797, -2.2502, -1.1530,
         1.7672, -0.3707,  1.7259,  0.3329, -4.8916, -0.8021, -0.6937,  3.4964,
         0.5514, -0.5551,  0.7421,  2.4324,  4.9796, -3.8663,  5.2357,  0.3300],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,881 - myNeural - INFO - Forward Pass: tensor([-3.0179, -3.6920, -3.7064,  ..., -0.9492, -3.2195, -1.1316])
2021-05-25 09:10:01,896 - myNeural - INFO - Forward Pass: tensor([-0.2632, -5.2821,  0.4485, -2.9744,  0.2077, -2.6215, -0.1782, -0.4039,
         1.3616, -4.2621, -0.9548, -1.1854, -4.2556, -4.1716,  0.2951,  3.4562,
         0.0703,  1.5385, -2.3262, -1.5280, -0.6527, -2.9051,  4.0190, -3.4480,
        -2.3110, -2.7839,  2.6837, -1.8274,  2.2943, -1.2149,  0.7726, -0.1775,
         2.1462, -0.8781, -4.4812,  6.3294, -5.2806, -0.6372, -2.6784,  2.2045,
         0.7357,  0.0493,  0.8397, -3.4291, -6.0479, -2.6801, -3.7812, -0.0960,
         0.7406, -4.4136,  3.2098, -4.3273,  0.3689,  2.8826, -1.2940, -5.2740,
         4.2835,  0.2095, -1.5249,  0.0369, -3.1430, -1.5288, -2.4969, -4.7000,
        -0.6634, -1.5830,  5.2567,  1.4486,  0.8753, -5.5457, -0.5254,  0.5958,
         5.8165, -5.1359, -1.1626,  2.9777,  0.1625, -0.1434, -4.6516, -2.4199,
         0.6909, -0.8182, -5.8164,  3.5429, -0.1556, -1.6526, -5.2787, -0.5529,
        -5.5717, -1.7946, -3.3121,  0.2681, -4.8216, -0.3428, -0.1833, -5.3280,
         0.9214,  5.8422, -4.1760, -3.6330, -3.3052, -3.9503, -5.0364, -0.1622,
        -4.5884, -5.3910, -1.7044, -1.5092,  0.8616, -1.5535, -4.7285,  0.7721,
        -3.4295,  3.2578, -0.9618, -0.7816,  3.7322, -4.7751,  0.9476, -3.1496,
         3.1239, -1.6291,  1.1306,  1.2518, -3.4999,  0.4310, -4.3828, -1.2729],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,911 - myNeural - INFO - Forward Pass: tensor([-2.3366, -3.3340, -2.9740,  ..., -0.2186, -2.5041, -0.6408])
2021-05-25 09:10:01,927 - myNeural - INFO - Forward Pass: tensor([-1.2334e-01,  1.3862e+00,  7.4054e-01,  5.1212e+00, -1.3199e+00,
         1.0610e+00,  3.7825e+00,  2.8326e+00, -1.0924e+00,  3.5801e+00,
         3.1482e+00,  2.2105e+00,  1.3881e-02,  2.2907e+00, -6.6143e-01,
        -7.5110e+00,  1.7914e+00, -6.3908e-01,  2.3068e+00, -2.5034e+00,
         2.3910e+00,  7.6445e-01, -9.3367e-01,  5.8283e+00, -1.4114e-01,
        -3.1805e+00,  1.5747e+00,  4.3180e+00, -1.5644e+00, -3.1561e+00,
        -8.1437e-01,  3.6822e+00,  5.7648e-01, -1.3954e+00, -4.1130e+00,
        -2.3150e+00,  1.2938e+00, -1.1049e+00,  3.3647e+00, -1.0174e+00,
         3.4524e+00, -2.4324e+00, -3.8561e+00,  3.6227e+00, -4.4896e+00,
        -9.7694e-01,  3.5427e+00,  3.1198e+00, -8.8603e-01, -3.2564e+00,
        -3.1164e+00,  1.6586e+00,  1.6728e+00,  3.9358e+00,  4.7480e+00,
        -1.7597e+00, -3.4206e+00,  5.3537e-01,  3.9209e+00,  1.4443e+00,
         7.2101e-01,  1.5677e+00, -3.2693e+00,  1.4835e+00, -4.9058e+00,
        -4.3934e-01, -5.8177e-01, -2.5662e+00,  2.0502e+00,  2.4128e+00,
        -3.3469e+00,  2.4406e+00,  7.7260e-01,  3.4809e+00, -6.3919e+00,
        -3.0519e+00,  3.3657e+00,  2.9089e+00,  1.0935e+00, -3.2805e-03,
        -4.9985e+00, -2.6936e+00, -8.9855e-01,  4.6108e+00, -6.5591e+00,
        -3.5318e+00, -1.7777e+00,  8.3469e-02,  1.1198e+00, -1.8608e+00,
         1.3622e+00, -8.4590e-01, -4.8465e+00,  1.2524e+00, -3.2403e+00,
        -1.1134e-01, -1.4879e+00,  1.9447e+00, -4.5125e-01, -1.8921e+00,
        -2.8003e+00,  1.6028e+00, -3.7651e+00,  3.5302e-01,  2.1972e+00,
         4.5673e+00,  5.1177e-01, -3.3488e+00,  2.6110e+00,  2.2700e+00,
         2.0257e+00, -5.9425e-01, -2.3719e+00,  3.7261e+00,  5.6840e-02,
        -1.3683e+00, -2.0430e+00, -1.1269e+00,  1.6320e+00, -2.4631e+00,
         1.0965e-01,  2.3791e+00, -3.1904e+00,  5.3868e+00, -4.2477e+00,
        -1.3197e+00,  3.3979e-01,  1.8282e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,944 - myNeural - INFO - Forward Pass: tensor([-1.9467, -3.2170, -2.5026,  ...,  0.0110, -2.1188, -0.3697])
2021-05-25 09:10:01,963 - myNeural - INFO - Forward Pass: tensor([-5.7985, -4.1906,  0.1316, -3.1221,  2.0696,  2.2893,  6.2898, -4.5009,
        -0.7051, -2.5443, -4.0591,  0.6808,  3.6161, -0.4049, -4.2338,  1.8307,
         0.1949, -2.3235,  3.4005, -2.9051,  2.2800, -1.8936, -6.5186, -6.4373,
         3.4030, -0.7911,  0.3403,  0.7777, -1.2314,  2.1419, -2.1419, -2.2549,
        -2.5367,  2.0948, -0.3368, -4.1052, -0.8828,  1.8701,  1.1589, -6.2619,
         0.3275, -0.6541,  2.3902, -3.5842, -4.2835, -0.4165, -2.4938, -4.3541,
         1.6582, -2.9329,  5.2645,  1.1555, -3.9265, -2.0917,  0.7167, -1.3968,
         6.4064,  0.1244, -1.3075, -1.2426,  6.7683, -3.1496, -2.4236, -1.1867,
         1.1121,  4.2887,  1.9270, -4.1282, -1.1138,  0.9831, -4.6556,  1.8061,
         2.4810,  4.9752,  0.2604, -0.4065, -3.5290,  4.1604,  7.4042, -3.0003,
         2.4208, -4.3590,  5.2288,  6.1193, -0.6909,  1.6647, -2.6070,  2.7628,
         1.2887,  1.8097,  3.9264, -0.2645, -5.8083, -5.4963,  0.1552,  0.6341,
        -0.3891, -0.9094,  5.1975, -3.0624,  1.2607,  0.9636,  1.2743,  2.7425,
        -0.2076, -1.7720,  0.6900, -2.4617,  1.8908, -6.6386,  0.3981, -0.7672,
         2.7983,  3.8829, -2.0150,  1.3280, -0.4744,  3.7824,  2.5615,  0.5001,
         1.5538,  1.6148, -0.2390, -0.0172, -1.5271, -2.2350, -3.3923,  1.1076],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:01,981 - myNeural - INFO - Forward Pass: tensor([-2.0274, -3.3666, -2.5006,  ...,  0.0391, -2.1791, -0.4114])
2021-05-25 09:10:02,000 - myNeural - INFO - Forward Pass: tensor([ 5.2347, -1.3332,  1.7939, -1.6982, -0.1613,  2.2723, -2.3636,  6.8320,
         3.4965,  1.4023,  0.9182, -1.2765,  2.0550, -2.9712, -2.6195, -1.9924,
         0.9493, -2.8711, -2.5739,  0.4170,  2.0331, -2.2546, -3.4011,  3.7607,
        -2.5238, -1.2744, -4.7835, -1.3422, -4.0227,  4.2996, -3.0097, -5.2802,
        -1.4093,  4.0027,  4.0526,  3.6974,  5.0292,  0.8828,  5.1228,  1.2411,
        -2.2937,  3.2161, -1.4134,  0.2785, -4.6415, -1.0351,  1.9160, -1.1835,
        -1.7271, -1.9270,  2.9466, -3.9494, -4.1523,  1.1154,  2.9067,  2.9154,
         3.8661,  3.0269,  3.1256, -0.4334, -3.3164,  2.2626, -2.8909,  1.7107,
         0.2361, -0.7009, -0.8303, -6.6400,  3.9968,  3.2137,  1.0528,  2.7757,
         0.6718, -2.0873, -1.4403, -3.1356,  1.4650, -2.1576, -3.4684,  3.4624,
        -2.8339, -2.6313,  4.9175,  1.3738,  1.7132, -1.3321,  1.4428,  1.1284,
        -4.6594,  0.6461, -3.6911, -1.3910, -0.9339, -1.4502, -1.5430, -0.4996,
         3.9872, -3.7223,  2.1093, -0.3119, -2.9189, -2.0272,  2.0888,  1.9252,
        -1.3268, -5.4087, -2.1028, -0.7850,  1.7936,  1.5565,  6.6493,  1.7721,
        -1.4228,  3.8235,  2.1618,  2.5134,  2.3953, -3.3253,  2.0742, -2.1634,
         0.5835, -1.2056,  5.3025, -2.7413, -2.3760, -4.6755,  1.8193, -3.7207],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,016 - myNeural - INFO - Forward Pass: tensor([-1.4496, -3.0768, -1.9999,  ...,  0.5425, -1.6796,  0.0732])
2021-05-25 09:10:02,034 - myNeural - INFO - Forward Pass: tensor([ 1.5241,  1.8219,  3.0631,  3.9887,  2.0813, -4.3913,  2.1248, -3.7492,
         1.7220,  3.6789,  2.3887, -0.6533, -3.3672,  2.3824,  1.3130, -4.4294,
         3.8874,  0.4991, -0.7466, -3.0210, -0.3973, -3.0891, -2.1118, -4.0497,
        -0.9733,  1.0409, -4.2579, -3.6488,  3.5273,  1.8223,  1.5451, -4.3143,
        -0.4605,  1.3678,  3.6693,  3.9837,  5.3999, -2.5238, -3.8715,  0.7575,
         3.8510, -2.6088,  1.9962,  0.9204, -1.6277,  3.8538,  4.7552,  0.0818,
         5.2807, -2.6280, -2.5670, -1.4221, -0.9787, -3.3458,  1.5173, -3.9201,
         7.3401,  1.3017,  3.3411, -1.2328, -1.8913,  3.6051, -1.3124, -1.5499,
         5.8147,  3.6986, -0.4351, -3.6532, -0.7288,  2.3597, -4.4206,  1.2809,
         3.3001, -0.2097, -4.2691, -3.6510, -3.1002, -1.8978,  4.8851, -2.7002,
         0.3291, -0.3920, -2.0695, -0.0766,  2.5425,  2.1816, -5.1458,  1.4879,
        -2.8086,  1.5930,  2.4660, -1.7886,  4.0260, -0.2068, -3.3069,  4.5482,
        -0.7332, -2.8768, -3.9305,  1.2844, -6.0445,  0.4149, -5.1008,  5.8040,
         4.3637, -3.9568, -0.4278,  4.4807,  5.0535, -0.3608,  0.1351,  5.2815,
         2.0403,  3.8359,  6.5289, -2.6279, -1.4755,  2.4238,  0.8821, -1.8107,
        -0.3266,  0.7784,  2.3710, -5.4429, -0.9990,  0.5268,  3.5299,  3.5656],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,051 - myNeural - INFO - Forward Pass: tensor([-1.6149, -3.3916, -2.0837,  ...,  0.3548, -1.9330, -0.2369])
2021-05-25 09:10:02,067 - myNeural - INFO - Forward Pass: tensor([-1.3433,  0.8580, -2.8619,  1.4503,  4.3880, -2.7257, -4.2183, -4.2502,
         5.0792, -2.0648, -0.4926,  2.5425, -0.1222,  3.3050,  0.4346,  0.2824,
        -2.1843,  3.4609, -1.2348,  4.5923,  2.2705,  6.0867, -5.2613, -0.4925,
        -0.6974,  4.1579, -3.4210,  4.6346, -0.4577,  3.8917, -0.7395, -3.8114,
         3.1873, -4.1093, -2.9045,  3.0470,  2.1136, -5.2177,  1.0233,  0.6497,
         4.4105,  2.4021, -0.6734, -0.6604,  1.7024, -5.4289, -3.6870, -2.7108,
        -1.9857, -0.6545, -2.6403, -4.1128,  2.3158, -2.3198,  2.0348, -1.6897,
        -1.2402,  3.2514, -2.9541, -2.7904, -0.4164, -2.1210, -1.1144,  2.2412,
         2.9059,  2.0783,  1.0054, -1.0859, -1.8841, -2.1500,  6.1970,  1.5789,
        -6.0816,  2.9633,  0.3490,  2.0754,  0.6779, -0.6814,  2.4235,  0.6177,
         0.3930, -0.7247,  4.2125,  2.5746,  0.1706,  0.1841,  4.2264, -3.8032,
        -4.0879,  2.7598, -2.1723, -0.2116, -1.0059,  2.4029,  1.8503,  3.1132,
         0.5337,  2.3960,  2.1543, -0.5108,  3.3734,  0.9289,  1.3576,  2.5064,
         5.6435,  3.0744,  3.9290, -1.3425,  3.4877,  1.2317,  3.5381,  5.0844,
        -3.7966,  2.7525, -2.0514, -1.2506,  5.0530, -3.4647,  0.7181,  0.7717,
        -1.4395,  2.2885, -0.7559,  1.0950, -2.2918, -4.6245, -1.0752, -2.0818],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,083 - myNeural - INFO - Forward Pass: tensor([-1.9800, -3.6109, -2.3594,  ...,  0.1546, -2.1989, -0.3736])
2021-05-25 09:10:02,101 - myNeural - INFO - Forward Pass: tensor([-3.7869e-01, -4.0541e+00,  1.1892e+00, -1.9630e+00, -1.1155e+00,
        -1.3884e+00, -8.0344e-02,  2.4056e+00,  1.4643e-01,  9.5717e-01,
        -1.7810e+00,  6.1226e+00,  1.9391e+00,  2.8560e+00,  2.7211e+00,
        -3.6772e+00,  6.0121e+00, -3.0324e+00, -2.5802e+00, -4.8876e-01,
         1.8094e+00, -2.1597e+00, -1.0962e+00,  1.9618e+00,  2.3885e+00,
         2.3906e+00, -7.2752e+00, -2.6643e+00, -3.2847e+00,  5.5867e+00,
        -5.3155e-01, -1.3514e+00, -3.2338e+00, -1.6448e+00,  1.1738e+00,
         2.0373e+00,  1.0362e+00,  4.1507e+00,  4.4434e-01,  1.5900e+00,
        -3.0873e+00, -1.0771e-01,  3.5543e-01,  4.1077e+00, -6.2340e-01,
        -8.8230e-01,  2.6543e+00, -1.3817e+00, -4.1484e+00,  3.6311e+00,
        -7.3974e-01,  1.9632e+00, -7.0451e-04, -4.4214e+00, -3.4344e-01,
         3.6385e+00, -2.1180e+00, -5.4742e+00, -3.8203e+00,  3.8036e-01,
         9.0891e-01,  1.1387e+00, -3.2091e+00,  5.0447e-01,  3.9891e-01,
         9.6129e-02,  1.8573e+00, -4.4913e+00, -3.8618e+00, -3.2626e+00,
        -1.3641e+00,  4.1927e-01, -2.7390e+00,  3.2454e+00,  3.7433e+00,
        -1.4805e+00,  1.5011e-01,  1.1452e+00,  1.6614e+00, -8.2031e-01,
         4.6852e-01,  1.0600e+00,  7.6991e-01, -3.1327e+00,  6.2635e-01,
        -9.7141e-01,  9.2659e-01, -4.2480e+00,  3.4255e+00,  3.4274e+00,
        -3.0109e+00, -2.9591e+00,  4.0898e+00, -1.0401e+00, -2.3604e+00,
         5.3008e-01,  1.6145e+00, -5.7389e-01,  1.5684e-01,  2.4505e+00,
        -7.1264e-01, -1.9664e+00, -1.7101e-01, -3.9239e-01,  1.6855e+00,
        -7.8714e-01,  1.1849e+00,  3.3629e+00,  3.0583e-01, -4.6200e-01,
        -1.8292e+00, -2.4080e+00, -4.6493e-02, -1.5021e+00, -4.3403e+00,
         5.2669e+00,  2.4032e+00, -1.1422e+00, -1.8400e-01, -3.9529e+00,
         1.9825e+00,  3.2778e+00,  5.0592e-01, -1.5912e+00, -1.2529e+00,
         4.7504e+00,  3.4406e+00, -1.8618e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,117 - myNeural - INFO - Forward Pass: tensor([-2.5888, -3.9188, -2.8516,  ..., -0.2496, -2.5125, -0.8175])
2021-05-25 09:10:02,135 - myNeural - INFO - Forward Pass: tensor([ 0.6289,  1.6299,  0.9786, -4.2275, -1.7866, -0.4071,  1.4161,  0.7245,
        -0.8875, -0.6599, -0.3935, -7.0439,  3.5337,  1.7767, -1.7455, -5.5374,
        -1.2074, -0.8996, -2.1602, -2.5818,  1.5911, -2.1707,  1.7081,  1.5847,
        -2.8978,  3.8198,  3.6324, -0.9475,  4.5618, -2.6817,  0.8004,  1.3684,
        -0.9518, -0.8687,  2.3172, -0.2403,  3.8893,  0.7998,  0.1529,  4.9618,
        -5.6575,  5.5868, -2.7232, -1.7500, -0.3970, -3.3082, -6.0487,  0.1556,
         5.5209,  3.8955, -5.3953, -1.8097,  1.7311, -1.5992,  4.0204, -1.6349,
        -2.0556,  1.8971, -2.8705,  2.2580, -0.7060, -1.0665, -4.0489, -1.8300,
         0.3718, -2.3311, -0.3239,  4.7536, -1.7074,  0.9223, -3.2989, -3.0389,
         0.8141,  5.1602, -3.7726, -2.6220, -3.3718,  2.1739,  1.0591,  4.0031,
        -0.2929, -4.9188, -3.3190,  3.9435,  2.5131, -4.2454, -1.7686, -1.5105,
        -0.0448, -5.5551,  4.7152, -3.5367,  0.2214, -0.1286,  3.9295, -2.6397,
        -4.1191,  4.7647, -1.5600, -1.4937,  1.7939,  2.1201, -0.8075, -2.3085,
        -0.6577, -4.5074,  1.4986,  3.5507, -2.6499,  2.4521, -4.3288,  0.4988,
        -4.2895,  1.9373, -3.9266, -4.1740, -2.5848,  2.1288, -2.4326,  5.4502,
         2.7130, -0.4028,  5.6781, -2.4134, -3.3767, -2.1937,  0.4400, -3.6647],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,151 - myNeural - INFO - Forward Pass: tensor([-1.6854, -3.0344, -2.2430,  ...,  0.6700, -1.5405,  0.2290])
2021-05-25 09:10:02,170 - myNeural - INFO - Forward Pass: tensor([ 3.8433e+00, -2.2454e+00, -1.1607e+00,  7.5643e-01,  2.7113e+00,
        -9.2012e-01,  1.1339e-01, -9.3851e-01,  4.0380e+00,  1.6979e+00,
         1.6613e+00,  1.7559e+00, -2.4570e-02,  9.8458e-01, -2.7094e+00,
         1.0462e+00, -2.1115e+00, -4.2340e+00, -8.2541e-01,  5.4322e+00,
        -3.5567e+00,  3.4916e+00, -1.2403e+00, -1.0834e+00, -1.8281e+00,
         1.7391e-03,  2.6071e+00, -3.3223e-01,  3.5321e-01,  1.8555e+00,
         3.8451e+00,  3.0631e+00, -6.3280e+00,  1.8481e+00,  2.7861e+00,
         1.6647e+00, -2.3524e+00,  1.5770e+00,  1.8108e+00,  3.2946e+00,
        -1.0137e+00,  1.8871e+00, -3.0458e+00, -4.0404e+00,  1.2211e+00,
         5.4833e+00, -1.2952e+00,  1.8485e+00, -1.8854e+00, -2.4321e+00,
         4.4510e-01,  4.7190e-01,  2.1716e+00, -9.9407e-01, -2.5344e+00,
         2.9048e-01,  2.8608e-02,  1.1101e+00, -1.9669e+00, -7.4678e-01,
         3.6672e+00, -2.4212e+00, -4.3539e-01, -2.5073e+00,  3.9150e+00,
        -1.3948e+00,  1.3489e+00, -4.2072e-01, -2.4835e+00,  3.5963e+00,
        -2.4955e-01,  3.2373e+00, -2.4146e+00,  4.0351e+00,  5.7499e-01,
        -1.5840e+00, -3.1978e+00, -2.0565e+00, -1.1748e+00,  1.4529e+00,
         3.3958e+00, -4.6352e+00,  6.5179e-01, -9.7939e-02,  1.1263e+00,
         7.2841e+00,  8.3599e-01, -3.3525e+00, -2.9597e+00, -1.5653e+00,
         3.4073e+00, -6.0496e-01,  8.9189e-01,  3.6832e+00, -2.1262e+00,
         2.5957e-01, -3.3934e+00, -5.2158e-01, -2.8095e+00, -3.5600e+00,
        -4.2877e+00, -4.3067e-01, -2.6732e+00,  2.7328e-01,  1.2951e+00,
        -6.5116e-01, -2.1858e+00, -1.1176e+00, -3.7179e+00,  8.1602e+00,
        -2.5107e+00, -1.8865e+00,  2.3342e+00,  2.1939e+00,  8.6949e-01,
        -2.1644e+00,  2.4990e+00,  3.6475e+00,  2.8451e+00,  1.9095e-01,
         1.6483e+00, -3.0755e+00, -2.7017e+00, -3.4810e+00, -3.3397e-01,
        -6.6800e-01,  3.3100e-01,  2.8465e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,186 - myNeural - INFO - Forward Pass: tensor([-2.2735, -3.5397, -2.5967,  ...,  0.0927, -2.1112, -0.5373])
2021-05-25 09:10:02,202 - myNeural - INFO - Forward Pass: tensor([ 2.4023, -2.2493,  2.1352,  1.2817, -0.6691, -4.5823, -1.2621,  2.7081,
         3.7354, -2.8088, -1.0632,  0.7330, -1.6980, -2.6108, -1.6643,  2.5492,
         2.3932, -0.9575,  1.9364,  4.4913,  2.9815,  4.0389,  1.4729, -3.6478,
         1.6369, -1.6047,  2.7075,  0.1892,  3.8612, -0.1636,  2.7004,  0.3757,
         2.9004,  1.3247, -3.6562,  0.7995, -5.4068,  2.5277,  1.7443,  1.8743,
         1.7674, -3.6537,  2.7243,  4.4800, -1.0466,  1.5082, -3.9097, -4.9958,
        -1.6378, -7.1848, -4.0465,  3.7045, -1.0641,  1.4433,  4.7844, -2.2418,
        -0.8596,  1.0981, -4.3260,  4.4020, -2.7477, -0.0754,  2.3044,  1.8723,
        -0.5809, -2.7802, -0.0238,  0.6102, -1.4000,  5.3789,  3.9378,  3.6186,
         2.0551,  3.9223,  3.1251,  0.3574, -2.9371,  2.7949,  0.9830, -5.3200,
         0.6452,  0.0636, -0.8301,  2.3351,  1.1014,  2.1923, -3.8697, -0.7670,
         0.6090, -2.0335, -2.2319, -1.3263, -0.9825, -0.0170,  0.6166, -3.3481,
        -5.6113,  6.2101, -2.6869, -4.7518, -3.0691,  0.7977, -2.3912, -0.9294,
         0.3674, -1.9797, -1.7971, -3.4253,  2.9504, -2.0893,  0.0858, -1.1945,
        -3.4857,  3.1671,  4.6264, -0.2823, -1.6958, -2.0661, -2.6808, -1.7993,
         4.5816,  3.5514,  2.5420,  2.7006, -1.5983, -4.5397,  3.9204, -4.7606],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,218 - myNeural - INFO - Forward Pass: tensor([-2.1132, -3.1989, -2.2343,  ...,  0.5184, -1.7905, -0.3123])
2021-05-25 09:10:02,232 - myNeural - INFO - Batch 60 -- TrainLoss: 0.40942 -- TrainAcc: 82.81250% -- TestAcc: 82.45000%
2021-05-25 09:10:02,236 - myNeural - INFO - Forward Pass: tensor([ 1.1065e+00,  7.3309e-02, -1.2386e+00, -3.4952e+00, -1.4950e+00,
         1.0561e+00,  1.3826e+00, -2.8444e+00, -1.0731e+00,  3.5496e+00,
        -8.4214e-01, -7.0896e-01, -8.0872e-01,  4.2779e+00, -3.5811e+00,
        -2.8458e+00,  2.9849e+00,  8.7815e-01, -3.5574e+00,  3.0293e+00,
         1.6075e+00,  3.6309e+00, -3.0793e-01, -4.8765e+00, -3.0980e+00,
         4.6220e+00,  7.9923e-01, -4.4032e-01,  1.0374e-05,  5.4274e+00,
        -4.6388e+00,  5.1127e+00, -1.1378e+00,  1.3854e+00,  2.0441e+00,
         3.9711e+00, -1.8487e+00, -2.3346e+00, -3.9789e+00, -1.9754e+00,
        -2.7418e+00, -1.4785e+00,  4.3017e-02,  3.2562e+00,  4.5936e+00,
        -2.7326e+00,  5.3275e-01, -1.7760e+00,  2.3184e+00,  3.7221e+00,
         3.9241e+00, -2.5602e+00, -2.7852e+00, -3.6094e-01,  4.6438e-01,
        -2.3458e+00, -3.4333e+00,  5.7041e-01,  1.7610e+00,  1.4071e+00,
        -3.5099e-02,  3.6620e+00,  4.4685e+00,  4.4078e+00,  1.9728e-01,
        -9.5467e-01,  2.6826e+00,  2.9344e+00,  2.3863e+00,  6.2931e-01,
        -2.9934e+00,  4.4701e+00, -1.0648e+00, -4.2328e-01,  3.1142e+00,
        -8.0927e-01,  9.4687e-01,  5.3480e+00, -2.3191e+00, -4.0920e+00,
         2.3198e+00, -3.7712e+00,  2.8438e+00,  2.5279e+00, -9.7212e-01,
        -1.2100e+00,  7.1336e-01, -1.0011e+00,  3.5390e-01, -8.5264e-01,
        -3.9124e+00, -2.6637e+00, -1.5283e+00,  6.7314e+00, -1.6171e+00,
         3.8417e+00, -1.2809e+00, -3.7679e+00, -2.2960e+00,  4.9715e+00,
         1.7112e+00,  5.0919e+00, -5.7837e+00,  3.0462e+00,  2.7572e+00,
        -1.2617e+00, -1.1631e+00,  1.4876e+00,  7.5270e-01, -6.6935e-01,
         1.7289e-01, -3.4498e+00,  4.6817e+00,  9.5093e-01, -3.8572e+00,
         1.3143e+00,  1.3999e+00,  1.5853e+00,  1.7123e+00, -9.3650e-01,
        -1.2409e-01,  7.0105e-01,  4.2697e+00, -2.8879e+00,  2.1236e+00,
        -5.1848e+00,  2.0423e+00,  1.1414e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,253 - myNeural - INFO - Forward Pass: tensor([-2.4569, -3.4195, -2.2379,  ...,  0.2901, -2.0093, -0.4178])
2021-05-25 09:10:02,271 - myNeural - INFO - Forward Pass: tensor([ 1.4777,  5.6896,  1.1280, -0.2104, -3.8615, -1.5913,  3.0611, -3.2356,
         1.2472,  0.6431,  2.1374, -5.2548,  2.7541, -5.2617, -4.5858, -0.1899,
        -3.0729, -4.0328,  0.0411, -0.7860,  2.9103,  0.0949, -4.0086, -0.9581,
        -3.1975, -3.3518,  3.4802, -2.1090,  0.0732,  4.7555, -0.3987,  3.2767,
         1.6603, -1.8406, -0.8664,  1.2152,  1.6402, -0.7554, -2.1777, -3.8626,
        -3.7760, -1.9593,  0.5449,  3.0592,  0.5678,  4.3308,  5.2579,  1.5923,
         3.4942, -3.1962,  2.8430,  1.3792, -2.0319, -3.9022, -0.8704,  5.1042,
        -1.1639, -0.9404, -1.7856, -1.6906,  0.3407, -2.1882,  2.7191,  1.4118,
        -0.5332, -2.8484,  1.6743,  0.6474,  1.0424,  3.6271, -1.7272, -0.5463,
        -1.2488, -1.8905, -1.2112, -3.8940,  1.7684, -2.7495, -2.2180, -0.6306,
         0.6901,  2.4188,  1.3354, -0.8714, -3.7527, -1.9440, -1.6040,  0.7898,
        -2.6433,  1.0405, -4.9437, -2.2818, -1.2212,  5.2537,  3.8497,  3.2613,
         2.1731,  1.0433, -4.3068,  3.3743,  3.1113,  2.1535,  0.2186, -3.8355,
         3.1035,  1.1969,  4.4792, -1.5670,  2.5879, -3.6693,  2.3656, -1.5742,
        -4.0010,  2.0537, -3.0094, -5.9591, -0.3006, -1.0238, -4.4945,  1.5251,
         1.0429,  2.7343,  3.4691,  4.3423,  2.5489, -1.1836, -3.1201,  2.0736],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,288 - myNeural - INFO - Forward Pass: tensor([-2.5398, -3.4632, -2.3330,  ...,  0.3726, -2.0676, -0.3445])
2021-05-25 09:10:02,305 - myNeural - INFO - Forward Pass: tensor([-3.6130,  1.1217,  4.9509,  1.3642, -3.5328,  1.7069,  1.3178, -2.2571,
        -2.1271,  6.1417,  0.8057, -2.6003, -2.3903,  3.9026,  5.8303, -1.6558,
         0.2765, -0.1513, -0.7769, -1.4446, -3.2664, -0.1906, -2.7771,  2.0571,
         2.9227,  1.2495, -1.4179,  2.1638, -1.6840, -2.4856, -3.3041,  2.4471,
        -2.1419, -1.9576, -4.3021,  0.3916,  0.0671, -2.2788, -0.1067,  0.8276,
         1.9386,  2.4641, -1.3517,  0.6175,  0.7750, -2.9409, -2.3731, -3.1903,
         3.1709,  1.1481, -1.8522, -1.3984, -1.9019, -3.9065,  0.5703,  1.0330,
        -0.4201, -0.2020, -3.4957,  1.7779,  3.1584, -0.9018,  0.0569, -3.4631,
         3.1390,  5.2840,  6.0318,  0.1656,  3.7807, -3.5607, -1.2313, -2.8444,
        -4.7572,  3.1544,  4.0495,  4.7896,  1.5541, -3.9061, -2.2924,  3.4872,
         4.0127,  3.2990, -2.6057, -1.5234, -1.6279, -1.8940, -0.9719,  1.5404,
        -2.5358, -1.5831, -2.4244, -0.6623, -1.0577,  4.2095, -3.3323,  4.5597,
        -4.4306,  1.8703,  2.4553, -2.8321,  5.2282, -3.0126,  1.5078,  1.1628,
        -4.8677, -0.8517, -3.2096, -2.9033,  2.9893,  3.8373, -1.3656,  0.7056,
        -1.2991,  2.7147,  0.9883,  4.1365, -4.7693,  1.9631, -2.7072,  4.3026,
         2.1650,  2.7314,  1.1762, -2.2964,  0.9268,  4.7292, -0.5250, -6.5947],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,321 - myNeural - INFO - Forward Pass: tensor([-2.5268, -3.1265, -1.9886,  ...,  0.4016, -1.6653,  0.2576])
2021-05-25 09:10:02,335 - myNeural - INFO - Forward Pass: tensor([ 3.2052,  2.5828,  4.0937, -5.0505, -3.5192,  0.6250, -1.5628,  1.1009,
         0.3741, -1.3707, -4.0169,  4.7263,  1.3201, -0.7673,  4.2567,  1.4294,
        -3.8694, -0.2342, -1.5849, -1.1534, -3.8678,  1.1574, -2.4135,  1.5808,
         1.6275,  5.7258, -3.8134,  3.7506, -0.9794, -0.2687, -0.1580, -1.7669,
         3.5104, -3.6482, -2.3608, -1.5806, -3.6470,  1.5375, -2.2097, -5.4454,
        -1.7198,  0.7251,  1.8360,  3.4093, -0.9915, -2.5702, -1.5702, -4.1460,
        -5.2177, -2.6790, -0.0598,  2.8665,  4.9587,  1.4128,  2.8108,  4.2524,
        -2.5847, -1.5047, -6.1870, -3.5477,  0.8001, -0.5611, -0.9561,  6.8183,
         5.4706,  4.6313, -3.0703, -3.1391, -1.8499,  0.1277,  0.5633, -1.3453,
         1.1632,  4.8940,  0.7091,  3.5973,  0.6453,  3.9312,  3.2118,  3.4522,
        -3.0360, -0.9515, -2.2858,  2.6447,  3.6868, -5.8883,  5.3708,  2.1033,
         2.6721,  2.1165,  2.0312, -5.5923, -3.1410,  0.1913, -8.1432, -0.3976,
         0.3593, -1.7568, -3.3555,  3.2984, -0.1166,  1.9569,  1.1217,  2.9646,
        -2.8469,  1.9807,  4.0488, -2.6394,  4.1634,  3.8030, -1.1350,  0.6719,
        -1.1890, -1.4343,  3.7953, -1.5724, -2.5808, -0.4962,  4.9836, -2.0500,
        -5.0377,  4.0956,  5.2040,  1.4006, -4.8599,  0.7985,  2.3864, -0.4251],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,349 - myNeural - INFO - Forward Pass: tensor([-2.9545, -3.4102, -2.3146,  ..., -0.1591, -2.0375, -0.1949])
2021-05-25 09:10:02,362 - myNeural - INFO - Forward Pass: tensor([-4.4339, -3.1647,  1.1606, -0.4221,  3.0656, -1.9491,  0.1059,  0.1580,
        -3.6450,  1.4943,  2.7052, -0.7183, -3.2263, -1.2304, -0.1113, -1.3188,
         2.9118,  2.5973,  2.0699,  1.2321, -0.2468, -4.9227,  0.1221, -0.6107,
         0.3987,  1.8109, -2.6528,  2.9825,  3.8342,  0.0425,  5.1310,  1.1901,
        -5.2346,  1.2902,  1.5828, -0.4613,  2.9765, -1.1368, -2.8874, -2.6761,
         0.6379,  1.4172, -3.3696, -0.5192, -4.7082,  1.6175, -3.6080,  1.9146,
         3.0110,  2.4418,  0.5618, -2.6696, -1.6039,  2.1206,  1.7788, -0.6899,
         0.9908,  2.6989,  4.5364, -1.1980, -2.6949,  0.2017, -3.3235, -4.2773,
         4.4068, -2.6395,  0.1641,  3.4318,  2.6482,  3.9296, -0.9328, -2.0590,
         2.2244,  2.0742,  0.2176, -3.9036, -1.6448, -2.0883, -2.2276,  5.6995,
         2.2869, -2.3377,  1.4566,  1.9891, -3.8801, -4.1185, -0.4995, -3.5376,
         1.4035, -0.2320,  1.9611,  1.1292, -2.0559, -1.1481,  3.0674, -0.6055,
        -1.4943,  0.9039,  3.2266,  0.8630,  0.2709,  1.4806, -4.2068, -6.5048,
         3.5947,  1.9996, -0.9428, -2.0818,  1.4995,  1.0251,  2.9950, -1.0495,
         2.2346, -0.9271, -2.6170, -0.3720, -3.8102, -2.9745, -0.7220, -1.8535,
         3.7505, -0.7187,  0.8902,  3.0730, -1.4564, -3.7130,  1.8450, -3.6519],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,376 - myNeural - INFO - Forward Pass: tensor([-2.7773, -3.3449, -2.4622,  ..., -0.1472, -1.7753, -0.1233])
2021-05-25 09:10:02,390 - myNeural - INFO - Forward Pass: tensor([-0.1281, -1.0712,  2.8435,  0.3843, -0.7732,  0.8970, -4.8804, -1.4801,
        -3.3535,  4.9885,  0.8249,  2.4006,  2.8865, -1.8725, -0.2024, -3.3664,
         1.2613,  0.6873, -4.9704, -3.5714, -0.1666, -2.7126, -2.4894,  1.7704,
         4.1313, -0.6583, -4.7039,  3.2232,  3.4525,  2.9954, -0.9798,  1.1557,
         1.5217, -0.3931, -3.0401,  1.3243, -0.1575, -1.2153,  2.1221, -3.7383,
        -2.8636, -1.9050, -4.8676, -0.5362, -1.4010, -2.4750, -4.4265, -3.5244,
        -3.2360,  2.8635,  1.7544, -5.2649, -3.0594, -3.3492, -4.4985, -2.2634,
         2.6012,  1.7787,  2.3636,  2.7404, -0.0831, -0.4225,  2.1742,  3.5492,
        -2.1836,  2.5725,  3.3126,  2.2749,  4.7728, -2.6329, -1.6147, -0.4522,
        -0.1649, -0.3777, -0.7021, -0.0807, -1.1423,  2.3865, -3.7042,  1.0666,
        -3.5787, -7.0057,  3.7167,  4.7746, -2.1099,  3.8804, -3.7755, -4.6688,
         3.8407, -1.0071, -3.5790, -3.9066, -0.5146,  0.2352, -0.0744, -2.9658,
         0.8701,  2.6288, -5.3968, -1.4463, -0.1210, -1.6853,  0.2185,  0.1074,
        -2.0464,  1.7703, -0.6862, -0.4080, -0.0402, -2.5897, -2.9309,  0.4852,
        -4.2444, -3.2394, -3.2501,  2.2698, -0.6516,  1.4336, -0.5909, -0.9002,
         1.5481, -5.4928,  2.4928, -0.7856, -0.0800,  3.6774,  1.1160,  0.8218],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,406 - myNeural - INFO - Forward Pass: tensor([-1.9415, -2.6690, -1.6015,  ...,  0.7729, -1.0517,  0.5011])
2021-05-25 09:10:02,423 - myNeural - INFO - Forward Pass: tensor([ 3.0246,  2.1332,  0.7968, -0.5655, -0.5278,  1.5549, -2.8366, -2.6650,
        -3.9676, -2.9800, -2.5815,  3.6167, -5.4338, -1.2683,  2.0791,  6.2828,
        -1.1002, -2.7406,  0.2330, -2.9701, -1.0048, -0.7744,  5.7133,  2.5668,
        -2.0205,  1.3983, -3.3682,  2.8111, -0.5564,  2.2178,  1.9237,  0.4091,
        -0.9718, -3.3056, -0.0724,  1.4665,  3.5729,  1.2464, -0.5150,  3.3563,
         1.4179, -3.8013,  0.8015,  1.6060,  3.5713,  0.4573,  1.2859,  5.2104,
        -0.2905,  3.4891, -4.4529, -1.0880, -2.3129,  4.0809,  3.1450, -3.1311,
         1.0109, -0.6465, -2.4921,  2.4125,  3.5133,  1.1099, -0.9285,  4.0797,
        -0.4050, -3.5796,  0.7936,  3.5332,  2.1661,  4.9673,  2.0342,  3.1596,
         3.9383,  4.1438, -0.7462,  3.0963, -0.9536, -0.1796,  1.3162,  4.7611,
        -1.9855, -3.1439,  0.3611,  0.9976,  4.3253,  5.3007,  5.8973, -3.5012,
        -0.9630,  0.3558, -3.3451,  0.9551, -2.6836, -1.1713,  4.2173,  3.8948,
         2.6505, -4.2358, -3.5911,  2.4377, -0.5426,  1.2070,  1.6252, -1.2741,
        -2.1825, -2.5660,  3.5979,  0.2977,  2.7169, -1.0472,  0.1744, -1.0738,
         2.1382,  0.3003,  2.1338, -3.3220,  5.5876,  4.5314, -3.6519, -1.7989,
         3.7813,  2.1251,  3.2220, -0.8727,  2.6497,  5.9342,  2.2442,  1.9002],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,438 - myNeural - INFO - Forward Pass: tensor([-2.4361, -3.2186, -2.1077,  ...,  0.3027, -1.4947,  0.0793])
2021-05-25 09:10:02,453 - myNeural - INFO - Forward Pass: tensor([-0.9179,  0.2371, -2.7258, -2.5265, -1.8504,  1.4817,  5.6899,  0.4355,
         2.5418, -2.4532,  4.2596, -0.3605,  3.4756,  0.5543,  1.0058,  1.3985,
        -0.1380, -3.3913, -2.4951, -0.6659, -2.9850,  1.1320,  3.4139,  4.1684,
        -1.2265, -1.1182, -0.1797, -1.5066, -4.1142, -3.0983,  0.7158,  4.3406,
         1.8060,  0.3117, -0.0244, -1.9571,  0.1432,  0.0599,  2.5214, -1.0258,
        -0.6585, -2.2380,  2.0006,  1.6833, -4.2516, -2.8745, -0.1148, -1.8172,
         1.0338, -1.6404, -1.9183, -3.6665, -0.5900, -2.8682, -3.7395, -1.4007,
        -2.6448, -3.3226,  6.2780, -2.8104,  4.9398, -0.4983,  2.9482,  1.6639,
         1.3332, -1.2995, -0.9466, -1.3325,  2.4917, -0.8354,  0.4301, -1.9304,
        -4.8172,  3.4403, -2.6013, -1.5027,  4.8041,  0.1444,  1.9795,  4.6343,
        -1.0737, -0.3746,  1.0507,  2.1427,  2.7247,  1.7237,  2.0777,  1.7719,
        -4.4406,  0.5025,  0.0552, -0.7092, -2.7218, -4.5233,  1.8340,  2.9986,
        -0.8540, -2.0343, -1.8117,  4.3035,  2.7559, -1.6864,  4.1631, -1.3886,
         1.6484, -1.0629, -3.4724,  0.2163,  4.5874, -3.1734, -4.8511, -1.6072,
        -0.2764, -1.7047,  0.5356, -0.5189, -1.8461, -4.2620,  2.8624,  6.0535,
        -1.4440,  1.0839, -2.4533,  3.4728,  3.2412,  2.3803,  2.8540,  2.6837],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,467 - myNeural - INFO - Forward Pass: tensor([-1.8734, -2.7533, -1.4452,  ...,  0.7202, -0.6883,  0.4474])
2021-05-25 09:10:02,483 - myNeural - INFO - Forward Pass: tensor([-4.3338e+00, -1.0152e+00,  3.5860e+00,  2.8487e+00, -3.2642e+00,
         3.7790e+00, -2.7755e+00,  2.7616e+00, -1.9972e+00, -1.0002e+00,
         4.5825e+00,  4.7490e+00,  5.0486e+00,  1.5954e+00,  2.5168e-01,
         2.3209e+00, -2.4144e+00,  1.7512e+00,  3.1889e+00,  4.3385e+00,
        -1.8744e+00,  3.1865e+00, -6.0863e-01, -2.6971e+00, -3.6341e-01,
         4.0221e+00,  3.8568e-01,  2.8515e+00,  2.7565e+00,  1.5208e-01,
        -1.7053e+00,  1.3218e+00, -1.9127e+00,  1.4497e+00, -3.1027e+00,
        -4.6596e+00,  1.4848e+00,  1.3828e+00,  3.9900e+00,  5.9414e-01,
         3.7641e+00, -1.8029e+00,  1.5228e+00,  6.7388e-01, -1.6462e+00,
        -3.8459e-01,  4.3676e+00, -7.5461e-01, -3.3842e-01, -2.2098e+00,
         3.6714e+00, -3.7625e+00,  2.5205e+00,  3.6112e+00,  4.3863e+00,
        -3.8959e+00,  4.1802e+00,  1.7040e+00, -1.2563e+00, -5.5599e+00,
        -1.1850e-03, -1.6113e+00,  9.7181e-01, -1.2240e+00,  1.8367e+00,
        -5.1356e+00, -4.7370e+00,  1.8454e-01,  5.7690e-01, -7.0651e-01,
        -3.4172e+00,  8.3916e-01, -1.3427e+00, -1.5173e+00,  5.5625e+00,
         3.7061e+00, -2.1016e+00, -9.7308e-01,  3.7915e+00,  1.0176e+00,
         5.6578e-01, -3.4735e+00, -8.7830e-01,  2.0423e-01, -2.5559e+00,
         7.5152e-01,  3.3183e+00, -9.0974e-01,  4.6178e+00, -8.6813e-02,
         3.8613e+00,  8.1290e-01, -2.6064e-02, -3.4775e-01,  3.1339e+00,
         4.8094e+00, -4.7140e-01,  1.3758e+00, -3.4918e+00, -2.7386e+00,
        -9.0694e-01,  3.4997e+00,  4.2258e-01,  3.8906e+00, -4.1081e+00,
         2.5551e+00,  4.2301e+00, -6.2961e+00, -1.2208e+00, -1.0559e+00,
        -4.8576e+00, -2.1849e+00,  2.3582e+00, -3.3137e+00, -6.6298e-01,
         1.2076e+00, -1.3617e+00,  5.4144e+00, -3.7178e+00,  3.9399e+00,
         4.6650e+00,  1.5171e+00,  5.1846e+00, -1.8243e+00,  1.8367e+00,
        -1.9970e+00,  4.2095e+00, -4.5592e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,498 - myNeural - INFO - Forward Pass: tensor([-2.9408, -3.4104, -2.3005,  ..., -0.3509, -1.5846, -0.2941])
2021-05-25 09:10:02,514 - myNeural - INFO - Forward Pass: tensor([ 1.6980e+00, -5.0647e+00, -1.7070e+00, -7.1613e-01,  3.6303e-01,
         1.8627e+00,  2.9586e+00, -1.7180e+00,  1.2025e+00, -2.2535e+00,
         1.4082e+00, -2.5976e+00,  2.0034e+00, -2.9089e+00, -1.8907e+00,
         1.4243e+00,  2.7959e-01,  4.5420e-01,  5.8475e-01,  6.5421e-01,
        -1.0568e+00, -2.5759e+00,  1.5686e+00,  1.3218e+00,  7.4242e-03,
         7.7468e-01,  2.8628e+00,  2.7399e-01, -4.5111e+00, -3.2644e-01,
         2.9284e+00, -2.0600e+00, -2.0876e+00, -8.5849e-01, -2.5373e+00,
         7.7366e-01, -1.5102e+00, -2.5530e+00,  6.4720e+00, -7.4997e-01,
        -3.2626e+00, -3.7024e+00, -4.4400e-01, -2.6148e+00,  1.2061e+00,
         3.2828e+00, -2.1548e+00, -2.7339e+00, -5.8365e+00,  1.1834e+00,
        -6.4776e-01, -4.7141e+00, -6.1849e+00,  2.6718e+00, -1.6568e+00,
        -6.1134e+00,  2.2141e+00,  1.6266e-01, -3.2968e+00, -6.8908e-01,
        -5.5923e+00,  1.1237e+00, -2.7378e-01,  3.1441e+00, -2.8367e+00,
        -2.4029e+00, -5.0771e+00,  2.1336e+00, -1.2889e+00, -1.2677e+00,
         1.0070e+00, -1.2034e-01,  3.1692e+00, -2.9689e+00,  2.5447e+00,
         2.0060e+00,  5.3213e+00, -3.2586e+00,  1.8060e+00, -1.4678e+00,
        -2.5032e+00,  1.8578e+00, -4.7756e+00, -2.4948e+00,  1.3250e+00,
         6.1999e-01,  1.0886e+00,  1.5805e+00, -5.4433e+00,  5.1820e-01,
         1.9867e+00, -1.6939e+00,  3.1997e+00,  3.0103e+00,  8.3346e-01,
         3.5689e-01,  2.4990e+00,  2.9736e+00, -2.2355e+00,  3.4361e+00,
         2.7290e+00, -2.9452e+00, -2.2969e+00,  9.6909e-04,  1.6775e+00,
        -2.7669e+00,  8.6310e-01,  2.2749e+00, -2.8426e+00,  3.5172e-01,
         2.7303e+00, -1.5883e+00,  2.3393e+00,  6.8203e-01, -5.2652e+00,
        -2.8623e+00, -2.2930e-01, -2.2538e+00, -3.3589e+00, -1.6737e+00,
         2.5104e+00,  3.1040e+00,  2.2846e+00,  3.5659e-01, -4.7275e+00,
        -2.9285e+00, -3.6390e+00,  3.3402e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,531 - myNeural - INFO - Forward Pass: tensor([-2.3396, -3.0345, -2.0124,  ...,  0.2971, -1.0229,  0.1188])
2021-05-25 09:10:02,547 - myNeural - INFO - Forward Pass: tensor([ 2.1524, -1.5232, -1.8270, -2.8082,  2.8908, -4.3492,  2.7249,  1.8073,
         2.3992,  2.2670,  2.7876, -3.5933, -0.3459, -2.8970, -0.8908,  0.7387,
         4.4931, -3.1940, -3.5484, -1.1886, -3.0254, -2.7630, -3.1741,  0.9579,
         1.2046,  2.2439, -3.6279, -0.5964,  1.6899, -1.4060,  0.4938,  3.2577,
         1.8828, -1.8530, -3.6408, -6.2503, -0.8576, -1.0592,  4.7360, -0.5549,
        -2.6141, -0.9419,  2.7099, -2.7436,  2.9683, -1.4932,  0.7281, -0.0657,
        -3.6158,  0.7964,  0.3763, -1.2299,  2.2367, -1.0497, -1.1744, -1.5832,
         1.0221,  0.5753, -2.6165, -0.2074, -3.4128,  0.5963, -2.4898,  4.9372,
        -3.2679,  0.5505,  1.0596, -0.9077, -2.1088, -1.7690, -2.2535,  1.1679,
         1.3835,  3.1951,  1.6378,  3.5726,  2.4575, -3.7140,  2.8300,  2.5247,
         2.3120, -1.9977,  0.8456, -5.2744,  1.0322,  4.3287, -0.0756,  2.0015,
        -5.3187,  0.1323,  1.1195, -5.1578, -0.4046,  4.2501,  2.0235,  2.4417,
        -2.7005, -3.3832,  0.6967, -2.1061, -1.9099, -1.0656, -1.1991,  3.5028,
         1.9939,  3.4284,  0.0555, -3.2201,  0.6016,  2.4932, -5.0403, -3.7276,
        -1.7017, -2.3782,  0.6714, -1.3199, -2.6015,  1.7396,  3.3085,  3.9250,
         5.2574,  2.0966,  1.6571,  2.3715,  0.6510, -2.2361,  2.8019, -3.7044],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,563 - myNeural - INFO - Forward Pass: tensor([-2.2372, -2.8766, -2.0103,  ...,  0.5073, -0.9113,  0.3292])
2021-05-25 09:10:02,579 - myNeural - INFO - Forward Pass: tensor([-1.8204e+00,  3.8209e+00,  6.4012e-02, -3.1703e+00,  1.8816e+00,
        -1.9004e+00,  1.7364e+00, -3.1340e+00,  9.2133e-01,  3.3138e+00,
         3.0868e+00,  9.0918e-01, -4.2815e+00,  1.4397e+00,  4.2728e+00,
         1.2355e+00, -3.4662e+00,  2.3197e+00, -1.5942e+00,  2.4026e+00,
         1.1823e+00,  1.7850e+00,  2.4182e+00,  1.5813e+00,  1.0406e+00,
        -3.3856e+00,  2.9489e+00,  3.9834e-03, -6.3348e-01, -8.6173e-01,
         4.9412e-01,  5.5915e+00,  2.5197e+00,  3.0286e+00,  1.9627e-02,
        -2.5710e+00,  2.0552e+00, -2.1482e-01, -5.6004e+00,  3.4683e-01,
         3.8466e+00, -1.6672e-01, -1.7807e+00, -6.8202e-01, -2.0388e+00,
        -1.4331e+00,  4.0865e+00,  1.8903e+00,  3.6450e+00,  9.9774e-02,
         2.6410e+00, -2.4613e-01, -2.8782e+00, -1.1841e+00,  1.0122e+00,
        -2.2413e+00,  5.8165e+00, -1.2648e+00,  2.1704e-02,  3.7864e+00,
        -3.1868e+00, -9.3178e-01, -3.6108e+00, -1.1034e+00, -1.9988e+00,
         2.6073e+00,  2.6152e+00, -3.3385e+00, -3.0284e+00, -1.3814e+00,
        -1.8656e-01, -4.3879e+00, -1.8368e-02,  3.0403e+00, -3.2734e+00,
        -1.7375e+00, -1.2138e+00,  5.1001e+00, -2.5226e+00, -3.0167e-01,
        -3.5919e+00,  3.8946e+00, -4.9027e+00, -8.3679e-01,  1.2758e+00,
        -1.7807e+00,  2.5265e+00,  6.0341e+00, -2.3006e+00,  5.3020e+00,
         4.0346e-02,  1.0722e+00,  2.3989e-01,  3.0023e+00, -2.0336e+00,
        -1.0811e+00,  2.8744e+00, -1.1151e+00, -3.9779e-01, -5.1756e+00,
         2.7288e+00, -3.5935e+00, -2.1596e+00,  1.3940e+00,  2.6194e+00,
        -2.9077e+00,  4.6173e-01, -2.2920e+00,  1.7898e+00, -3.7258e+00,
        -4.0119e+00,  2.4278e+00,  4.7705e+00,  3.5953e+00, -3.9150e-01,
        -3.1900e+00,  1.5182e-01, -4.2845e+00,  4.1200e+00, -3.0668e+00,
        -5.3433e+00, -3.6348e+00,  4.7620e+00,  3.5247e+00,  6.0661e-01,
        -5.5271e+00, -2.2264e+00,  3.0616e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,595 - myNeural - INFO - Forward Pass: tensor([-2.5860, -3.1942, -2.3775,  ...,  0.2683, -1.1144, -0.0234])
2021-05-25 09:10:02,616 - myNeural - INFO - Forward Pass: tensor([-2.6364,  0.6812, -2.2752,  4.0497,  1.8087, -0.8040, -3.6807,  0.6608,
        -2.9383,  3.0688,  1.8417, -1.9525, -2.3929, -4.6191,  3.0230,  2.4114,
        -0.1932,  2.9219,  1.4008,  1.7047,  4.8290,  1.3540, -2.6248, -5.4981,
         1.0587,  1.3260, -5.2066, -5.2213, -0.4795, -0.3969, -6.4525, -3.2530,
        -1.9614,  0.3843,  2.8135, -3.1883,  0.2265,  4.3396,  4.2823, -3.6950,
        -0.9196, -5.7402, -3.0127,  0.5380, -2.4202, -0.7907, -2.5330,  4.7106,
         0.6545, -2.4895, -2.1033,  0.0418, -2.3286, -1.9451,  2.7868, -1.8588,
        -3.4709,  2.9693,  2.5032, -2.9398, -3.0895, -3.1670, -3.4108,  2.9019,
        -2.6213,  3.3015,  1.2485, -2.0074, -1.5589, -3.4637, -0.9040, -2.1022,
        -3.3182,  1.0569, -1.3660, -5.5226, -3.1096,  5.2873, -2.5830, -2.3278,
         0.0739,  1.1206, -5.2732,  3.0726, -2.1028,  4.9674, -4.6142,  3.5228,
        -3.0622, -3.4825,  0.6384, -3.7912, -1.8243,  1.3552, -3.6182,  1.7138,
         0.3276,  2.4198, -0.1394, -1.1149, -4.6171, -2.1251,  1.8498, -0.6908,
         1.7822, -4.0230, -6.3842, -4.1242, -2.3706, -3.3111, -2.9396,  2.7206,
        -2.7485, -1.2866, -1.5357, -1.4608, -0.0253,  2.8929,  2.4711, -2.8884,
        -2.0731,  5.7261,  3.9679, -1.6756,  3.7677, -1.3218, -3.8119, -2.5155],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,635 - myNeural - INFO - Forward Pass: tensor([-2.4447, -3.2009, -2.3908,  ...,  0.2702, -1.1907,  0.0734])
2021-05-25 09:10:02,656 - myNeural - INFO - Forward Pass: tensor([ 0.8996, -3.3888, -0.7669,  2.2697,  0.0186, -0.9657, -2.5343, -0.6488,
        -2.1105, -0.8241, -1.5432,  0.0929, -4.1085,  1.8553, -5.5532,  0.2103,
        -3.3034,  1.5324, -4.3962, -1.1773, -4.0212, -4.4459, -1.6493,  2.9957,
        -3.1944,  2.2151, -1.9405, -1.8108,  0.3836,  2.8924, -0.6702,  2.5743,
        -0.0210,  0.8502, -3.6696, -3.5382, -0.6117, -3.1082,  0.6564,  2.2185,
         2.5362,  0.4470, -0.6828, -3.2782, -3.4592, -1.9119,  1.4038,  2.6363,
        -3.4793, -2.1079,  3.2004, -1.7813,  1.4423, -0.8909, -2.4927,  3.3122,
         0.9262, -4.2714,  0.7416,  4.9014, -2.0115, -3.0136, -2.1573, -1.2373,
        -2.4250, -0.6062, -4.6311,  0.4762,  0.3977, -1.1107,  0.8310,  4.3314,
        -0.0826, -3.9905, -0.1755,  0.5546, -3.3992, -4.5903,  0.3865,  1.1518,
         3.7588, -1.8051,  0.3047,  1.6388,  3.4589,  0.1708,  3.2393, -4.4883,
        -3.3162,  0.4198, -3.6619,  4.3299,  0.7404,  2.1636, -2.9478,  0.3369,
         1.0334, -3.9447,  0.5465, -0.3682,  2.3704,  4.1448,  4.9738, -0.6357,
        -2.8818,  2.3882, -3.6643, -3.1923, -1.2611,  0.7842, -1.1120, -2.9498,
        -2.0483,  3.4947,  0.5821,  0.6671,  2.2181, -1.7258,  3.0224, -1.1775,
        -2.3328, -5.8465,  4.2495,  4.0449,  2.2937,  2.7507, -3.1486, -2.5062],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,674 - myNeural - INFO - Forward Pass: tensor([-2.6005, -3.4323, -2.4987,  ...,  0.4848, -1.4572, -0.0968])
2021-05-25 09:10:02,690 - myNeural - INFO - Forward Pass: tensor([-0.0744, -2.1620, -1.3165,  1.8582, -6.9672, -4.0875, -5.2917,  1.2037,
         2.2904, -1.4368, -1.5216, -3.1476, -2.2602,  1.1621, -1.4825,  3.3652,
         0.9267, -4.0871, -2.9956, -5.0183, -0.1154,  2.6279, -2.1240,  0.2675,
         1.3600,  0.6391,  0.5571, -1.3176, -0.5206,  2.6184, -1.8256, -2.2205,
         1.1002,  2.8350,  1.9512, -5.3290,  2.9918,  4.5729, -3.3422, -0.8443,
         2.1005,  0.5863,  2.0862, -3.5252, -1.6426, -5.2274, -4.4954,  4.5426,
         0.8585,  1.4585, -0.0739,  3.1186, -0.6217, -3.4143, -3.7323,  2.9131,
        -2.7455, -1.2598,  2.9090, -2.1383,  3.6023, -2.5794, -3.3369,  2.0292,
         5.4819, -0.5593, -0.3559, -0.0643,  3.3119, -0.0096, -4.3445,  2.4825,
        -3.1500,  1.6512, -3.7605,  2.2513, -0.4895, -0.6203,  1.3370, -3.3478,
        -3.5284, -2.5131,  3.3367, -0.1112, -2.1051,  0.2787,  4.7656, -3.2775,
        -3.2902,  4.3027, -1.1640, -1.2100, -0.1234, -1.6878,  1.2844, -3.8194,
        -2.8417,  0.9365, -5.3904, -5.0616,  3.0623, -0.3227,  2.1124, -0.7106,
         0.6033,  0.5144,  1.5850,  1.0837,  3.7573,  2.1681,  2.4972, -0.7397,
         1.8201, -0.2790, -1.5664,  1.3328, -3.6261,  1.9146, -3.7685, -4.9786,
         1.9189,  2.2635,  1.9168,  2.6214,  5.3655, -4.8271,  2.8352, -2.0308],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,707 - myNeural - INFO - Forward Pass: tensor([-3.1342, -3.6809, -2.9537,  ...,  0.1996, -1.8386, -0.3626])
2021-05-25 09:10:02,722 - myNeural - INFO - Forward Pass: tensor([-0.7523, -3.9528, -1.8708, -2.3728, -2.3995,  0.2024, -2.5183,  0.7524,
         0.1014, -2.8487,  2.2922, -2.7332, -5.7360, -2.4904,  0.3146, -2.1763,
        -2.5980,  2.4555,  3.1811,  0.1746,  0.8983,  0.6682, -0.0479,  2.1913,
        -2.4529,  0.7971,  0.8337,  0.5033, -5.6667,  1.1591,  0.0883,  2.1813,
         1.0525, -3.9291, -0.0401, -4.3635, -1.0181,  4.8538,  4.5103, -3.3972,
        -0.5429,  3.3737, -5.3066,  0.3066, -0.9500,  0.3333,  1.2009, -4.6591,
         0.4667, -2.9693,  1.5725, -4.0722, -4.7702, -0.0827, -1.9176, -1.4960,
        -3.4004,  0.1401, -2.9623, -4.5565,  3.6849,  1.1575, -0.2247, -3.9118,
        -2.5626,  4.1046, -0.1208, -1.3196, -2.5741,  1.7540, -1.5925,  0.7396,
        -3.2624,  2.5711, -2.3176, -4.8075, -3.3280,  2.4613, -0.1881, -1.8538,
         2.2856,  3.7393,  0.2481,  0.5875, -3.1676, -4.1981,  1.9923,  2.6173,
         2.8167,  1.5569,  2.6951,  3.0442,  1.8377,  0.2151,  4.1120, -2.8385,
        -2.6769, -0.3835, -4.0912, -3.8229,  0.8352,  0.7439,  0.2110,  0.5429,
        -1.5387,  3.8506, -1.7605,  4.1959,  5.2298, -2.4259,  1.6070, -0.2251,
         2.9909, -2.1088, -2.0285, -0.5440, -2.1865, -0.4709, -3.6257, -1.5398,
         5.1988, -3.6105,  0.7104,  2.0853, -1.5000, -0.4076, -5.2779, -4.2048],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,737 - myNeural - INFO - Forward Pass: tensor([-2.4369, -3.3546, -2.3062,  ...,  0.8027, -1.0807,  0.4331])
2021-05-25 09:10:02,751 - myNeural - INFO - Forward Pass: tensor([-1.8545,  2.9609,  1.3477,  3.3203,  0.9882, -2.1603,  1.8973, -5.2234,
         0.9729, -3.4779, -4.5221, -1.4436, -0.5933,  0.5366, -2.9975, -1.5796,
        -1.5241, -0.7452,  2.2875, -3.3139, -0.6999, -3.4924,  1.9056, -3.9040,
         0.4622,  3.3069,  3.9828, -3.1360,  1.5098,  3.5689, -0.7468,  2.1612,
         1.9266, -2.5801,  0.7325, -1.0008, -2.5373,  5.7617,  2.2301, -3.2413,
        -4.0216, -0.8458,  3.6179,  0.5994, -2.9673,  2.8858,  1.5531,  2.4556,
        -1.5368,  1.3596,  3.9868, -0.3323, -3.8758,  4.4846, -2.1329,  0.7930,
         1.1287,  1.4302,  0.4848, -2.3297,  0.6333,  0.0433, -2.2044,  3.2474,
         4.0793, -2.0302, -2.9048, -0.1324,  1.1010,  4.5124, -0.6919, -1.3090,
         1.1622, -4.7059,  5.4730, -1.3884, -2.3562, -1.8506,  0.5708, -2.6855,
         2.7844,  5.1143,  0.3793, -3.3933, -3.6767, -0.3186, -2.8942, -0.4614,
         2.6293,  4.3198, -3.7122,  1.1350, -1.0531, -1.8210,  0.7318, -2.4502,
        -1.5039,  1.3112, -4.5825, -1.5611, -1.1978, -0.5057, -2.7659, -0.0804,
        -0.3557, -2.0459,  1.8029, -1.1491,  3.4169, -0.2116,  2.8316,  2.0961,
        -3.5280,  0.0166, -3.4372, -0.1439, -1.8582,  2.0170,  0.8062,  3.0501,
        -0.8136,  0.8847,  2.4727,  0.5043,  1.2378,  1.8242,  3.5499,  4.6020],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,766 - myNeural - INFO - Forward Pass: tensor([-2.2618, -3.4489, -2.2907,  ...,  0.8426, -1.1609,  0.4413])
2021-05-25 09:10:02,779 - myNeural - INFO - Forward Pass: tensor([ 4.0713,  2.0106,  2.1095,  3.7113, -0.0561,  0.9067,  0.6967,  2.6744,
         1.8429, -0.0528,  1.3462,  1.8964,  5.2140,  3.8627, -3.2675, -2.4042],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:02,794 - myNeural - INFO - Forward Pass: tensor([-3.3715, -3.6888, -3.3398,  ...,  0.2133, -2.4199, -0.6782])
2021-05-25 09:10:32,044 - myNeural - INFO - New Model: {'input_shape': (20, 20), 'hidden_size': 300, 'act_func_1': <class 'torch.nn.modules.activation.ReLU'>, 'act_func_2': <class 'torch.nn.modules.activation.ReLU'>, 'lossFunction': <class 'torch.nn.modules.loss.BCEWithLogitsLoss'>, 'optimiser': <class 'torch.optim.sgd.SGD'>, 'lr': 0.1, 'epoch': 2, 'batch_size': 128}
2021-05-25 09:10:34,140 - myNeural - INFO - Forward Pass: tensor([ 0.0187,  0.0662, -0.3696, -0.0174, -0.0134, -0.1477, -0.2518,  0.1364,
        -0.2703, -0.1092, -0.1681, -0.1009, -0.0683,  0.0510, -0.3444, -0.3897,
        -0.2714, -0.0282,  0.0278,  0.0824,  0.1250, -0.0392, -0.2034,  0.1431,
        -0.1150, -0.2189, -0.2553, -0.0510,  0.0777,  0.0081,  0.0638, -0.1810,
        -0.0540, -0.5031,  0.0744, -0.0231, -0.2666, -0.0623, -0.2612, -0.3172,
        -0.2860, -0.0104, -0.2971, -0.0021, -0.1795, -0.2515, -0.2765,  0.0826,
        -0.0797,  0.1844,  0.0393, -0.1422,  0.0362, -0.1275, -0.0643,  0.0189,
        -0.0588, -0.0928, -0.0492, -0.1469, -0.2213, -0.3211, -0.2177,  0.0361,
        -0.2384, -0.1629, -0.0892, -0.1154,  0.0843, -0.3729, -0.1155,  0.0037,
         0.1031, -0.1530, -0.1209,  0.1321, -0.2091, -0.2875, -0.2643, -0.1616,
        -0.0687, -0.1867, -0.1550,  0.0706,  0.1627, -0.0032,  0.0409, -0.1969,
        -0.0252, -0.2934, -0.0182, -0.1451,  0.1854,  0.0439,  0.0619, -0.1301,
        -0.0546, -0.3335, -0.1198, -0.2135,  0.1211, -0.3159, -0.0808, -0.0365,
        -0.3745, -0.0971, -0.2612, -0.0782, -0.0208, -0.2889, -0.0307, -0.0303,
         0.0607, -0.2776,  0.0579, -0.3298, -0.2540, -0.2967, -0.1543, -0.1106,
        -0.3260, -0.1929, -0.2245, -0.1732, -0.0862, -0.0998, -0.0289, -0.1001],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,158 - myNeural - INFO - Forward Pass: tensor([-0.3110, -0.0536, -0.0712,  ..., -0.3712, -0.2235, -0.1819])
2021-05-25 09:10:34,174 - ray.tune.session - WARNING - Session not detected. You should not be calling `report` outside `tune.run` or while using the class API. 
2021-05-25 09:10:34,174 - ray.tune.session - WARNING -   File "/Users/shaominliu/opt/anaconda3/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel_launcher.py", line 16, in <module>
    app.launch_new_instance()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/traitlets/config/application.py", line 845, in launch_instance
    app.start()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelapp.py", line 612, in start
    self.io_loop.start()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/platform/asyncio.py", line 149, in start
    self.asyncio_loop.run_forever()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 570, in run_forever
    self._run_once()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 1859, in _run_once
    handle._run()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/ioloop.py", line 690, in <lambda>
    lambda f: self._run_callback(functools.partial(callback, future))
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/ioloop.py", line 743, in _run_callback
    ret = callback()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 787, in inner
    self.run()
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 748, in run
    yielded = self.gen.send(value)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 365, in process_one
    yield gen.maybe_future(dispatch(*args))
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 268, in dispatch_shell
    yield gen.maybe_future(handler(stream, idents, msg))
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 543, in execute_request
    self.do_execute(
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py", line 306, in do_execute
    res = shell.run_cell(code, store_history=store_history, silent=silent)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/ipykernel/zmqshell.py", line 536, in run_cell
    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 2877, in run_cell
    result = self._run_cell(
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 2923, in _run_cell
    return runner(coro)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/async_helpers.py", line 68, in _pseudo_sync_runner
    coro.send(None)
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3146, in run_cell_async
    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3338, in run_ast_nodes
    if (await self.run_code(code, result,  async_=asy)):
  File "/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3418, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-54-5ca2bc669899>", line 1, in <module>
    singleModel.optimise(trainData, testData,
  File "/Users/shaominliu/Documents/工作使我疯狂/2021 Holmusk Internship/Github/PyTorchExercise/ModelHelper2.py", line 182, in optimise
    tune.report(

2021-05-25 09:10:34,175 - myNeural - INFO - Batch 0 -- TrainLoss: 0.69909 -- TrainAcc: 47.65625% -- TestAcc: 50.80000%
2021-05-25 09:10:34,178 - myNeural - INFO - Forward Pass: tensor([ 0.0038, -0.1440, -0.0182, -0.1856, -0.1865, -0.0271, -0.0821,  0.1660,
        -0.4744, -0.1514, -0.0494, -0.0959, -0.1083, -0.2484, -0.0770, -0.1023,
        -0.0776,  0.1201, -0.3099,  0.1735, -0.2820,  0.0571, -0.1456, -0.1043,
        -0.0128,  0.0636, -0.0813, -0.2383, -0.0821, -0.3609,  0.0289, -0.0880,
        -0.0937, -0.0308,  0.0437, -0.0582, -0.0520, -0.0248,  0.0140, -0.1937,
         0.1752, -0.0568,  0.1857,  0.1580,  0.0318,  0.0084,  0.1098, -0.1459,
        -0.3114, -0.0286, -0.1915, -0.1513, -0.0819,  0.0868, -0.3439, -0.3688,
        -0.0515, -0.1122, -0.2176,  0.0715,  0.0280, -0.1303, -0.0290, -0.1142,
         0.1177, -0.1784, -0.2137, -0.2263,  0.0444, -0.0618, -0.2599, -0.1399,
        -0.2609, -0.0572, -0.2401,  0.0048,  0.0580,  0.1190,  0.3216, -0.0772,
        -0.0604, -0.2270, -0.2383,  0.0132, -0.0609,  0.0410, -0.0669,  0.1051,
        -0.1964,  0.0718,  0.0448,  0.0338, -0.0597,  0.0836, -0.2901, -0.0390,
        -0.2168, -0.0694, -0.0435,  0.1304, -0.0786,  0.0054, -0.0516, -0.1129,
        -0.3215,  0.0985, -0.2163, -0.1178, -0.1332,  0.0401, -0.0048, -0.0424,
        -0.1829, -0.1041, -0.1957,  0.0054, -0.2156, -0.1124, -0.0237,  0.0389,
        -0.4130,  0.0480, -0.3114, -0.0700, -0.0771, -0.0420, -0.2274, -0.1325],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,197 - myNeural - INFO - Forward Pass: tensor([-0.4002, -0.1130, -0.1697,  ..., -0.4317, -0.3012, -0.2667])
2021-05-25 09:10:34,219 - myNeural - INFO - Forward Pass: tensor([-0.3185,  0.1010, -0.0077, -0.2846, -0.1136, -0.3292, -0.2644, -0.0991,
        -0.0502, -0.2195, -0.1260, -0.0417, -0.2054, -0.0068, -0.0783, -0.1195,
        -0.1822, -0.3066, -0.0733, -0.1776, -0.1900, -0.0835, -0.1025, -0.0985,
        -0.1821, -0.1634, -0.1345, -0.1863, -0.2187,  0.1983, -0.1642, -0.2215,
        -0.1550, -0.0038, -0.2592, -0.0461, -0.1663, -0.1491, -0.1505, -0.1594,
        -0.1632, -0.3260, -0.1959, -0.0795, -0.0493, -0.1373, -0.0871, -0.0085,
         0.0752, -0.1319, -0.1798, -0.4531,  0.0251, -0.2138, -0.0372, -0.2870,
        -0.1866,  0.0143, -0.2221, -0.0082, -0.1450,  0.1351, -0.3183, -0.2861,
         0.0207, -0.0692, -0.3490, -0.0208, -0.2423, -0.4099, -0.1855, -0.0170,
        -0.1527, -0.3639, -0.0954, -0.0302, -0.1252, -0.0338, -0.0377, -0.2592,
        -0.2701, -0.0127, -0.3776, -0.2295,  0.0006, -0.3063,  0.0212, -0.2530,
        -0.1969, -0.0903, -0.0135,  0.1043, -0.2713, -0.0348, -0.1174, -0.1272,
        -0.2389, -0.2987, -0.2740, -0.2802, -0.1724, -0.0511, -0.1157, -0.1710,
        -0.0781, -0.4068,  0.0346, -0.2245, -0.1185,  0.1416, -0.1196, -0.0379,
        -0.0929, -0.1031, -0.0465,  0.0691, -0.2192,  0.1933, -0.0311, -0.3215,
        -0.2172, -0.0910, -0.3821, -0.2357, -0.1059, -0.1106, -0.1249, -0.0642],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,238 - myNeural - INFO - Forward Pass: tensor([-0.3156, -0.0156, -0.0766,  ..., -0.3359, -0.2111, -0.1552])
2021-05-25 09:10:34,255 - myNeural - INFO - Forward Pass: tensor([-0.0507,  0.0590,  0.0153, -0.1329, -0.3089,  0.1254,  0.0665,  0.0847,
        -0.3939, -0.0947, -0.2301,  0.0636, -0.0007, -0.1395, -0.0900,  0.0468,
        -0.0719, -0.0049, -0.0712, -0.0783, -0.0629,  0.0826, -0.1678,  0.0555,
        -0.5480, -0.1298,  0.1920,  0.0610, -0.1029, -0.1313, -0.0183,  0.0437,
        -0.2379, -0.1210, -0.0036,  0.1637,  0.2536,  0.0406, -0.2583,  0.0470,
        -0.2000, -0.1151, -0.0817, -0.0272, -0.1438, -0.0076, -0.1061,  0.0059,
        -0.2135, -0.2969, -0.0860,  0.0745, -0.0618, -0.0924, -0.2029,  0.0516,
        -0.0899, -0.0793,  0.1341,  0.1385, -0.1808, -0.1905,  0.1332, -0.1012,
        -0.2914, -0.0768, -0.1977, -0.1374, -0.0391, -0.1880, -0.0549, -0.1548,
        -0.0833, -0.2070,  0.0838, -0.2108,  0.1072, -0.1821, -0.1139, -0.0956,
         0.1773, -0.1608,  0.1978, -0.0349, -0.0499, -0.0440, -0.2464, -0.0876,
         0.0704, -0.0973,  0.0844,  0.1539, -0.0267, -0.4084, -0.2767,  0.0070,
        -0.0984, -0.1634, -0.1688, -0.3540,  0.1180, -0.2645, -0.2335,  0.0670,
        -0.1068,  0.0154,  0.1450, -0.0887,  0.0211, -0.1220, -0.0657, -0.2639,
         0.0920, -0.0357, -0.1795, -0.2576, -0.1446,  0.0174,  0.0505, -0.2947,
        -0.3543,  0.2608, -0.0635, -0.2345, -0.1724, -0.0512, -0.1071,  0.0739],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,273 - myNeural - INFO - Forward Pass: tensor([-0.2531,  0.0605, -0.0107,  ..., -0.2487, -0.1333, -0.0801])
2021-05-25 09:10:34,291 - myNeural - INFO - Forward Pass: tensor([ 0.0734, -0.1255,  0.1839, -0.1082, -0.1138, -0.0971,  0.1610, -0.0899,
        -0.1465,  0.0188, -0.1342, -0.1839,  0.0024, -0.1597,  0.0567, -0.0586,
        -0.2042, -0.2563,  0.1282, -0.1518,  0.0756,  0.0185,  0.1529,  0.2104,
        -0.0870,  0.0014, -0.0006,  0.1736,  0.1651,  0.1829, -0.0976,  0.0114,
        -0.0110,  0.0316, -0.0168,  0.0264, -0.0468, -0.0879, -0.1933,  0.0712,
         0.0750, -0.3047, -0.1162,  0.1562, -0.0084, -0.0878,  0.1780, -0.1686,
         0.2220, -0.0950, -0.1575,  0.1085,  0.0705,  0.0411, -0.3032,  0.1887,
        -0.1145, -0.0144, -0.0207,  0.1635,  0.1092, -0.0014,  0.0538, -0.2442,
        -0.2587,  0.0144, -0.1891,  0.2089,  0.0073,  0.1576,  0.0407,  0.0294,
        -0.0681,  0.3183, -0.0453,  0.0313,  0.1233,  0.0016, -0.0183, -0.0700,
        -0.1904, -0.2155,  0.2303,  0.1553,  0.0510, -0.0885,  0.0683,  0.1064,
         0.0859, -0.1163, -0.0015,  0.1772, -0.1740, -0.0433,  0.1216,  0.0764,
         0.0128, -0.0950,  0.0530, -0.0566, -0.1600, -0.1937, -0.1820, -0.1782,
         0.2237, -0.2650, -0.0176,  0.3284,  0.1345, -0.1931, -0.2311, -0.0747,
         0.0244, -0.1357,  0.0397,  0.2533, -0.1187,  0.2792,  0.2211,  0.0067,
        -0.0781,  0.3916,  0.0357,  0.0280, -0.0557, -0.1926,  0.0743,  0.1795],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,307 - myNeural - INFO - Forward Pass: tensor([-0.2037,  0.0952,  0.0272,  ..., -0.2037, -0.1149, -0.0250])
2021-05-25 09:10:34,323 - myNeural - INFO - Forward Pass: tensor([ 1.6314e-01,  1.6329e-01,  5.1700e-02,  3.8617e-04,  2.8947e-01,
         1.4201e-01, -2.2988e-01,  3.0395e-01, -2.2305e-01, -1.4300e-02,
         1.2423e-01,  5.4139e-02, -6.8053e-02, -9.7485e-03,  2.1102e-01,
         3.0321e-01, -2.7078e-02, -1.6604e-01,  7.2370e-02, -6.3582e-02,
         1.3249e-01,  1.1202e-02,  3.8147e-02,  9.9661e-02, -6.7255e-02,
         2.0236e-01, -1.3695e-02,  2.4380e-01,  1.3938e-01, -1.9880e-01,
         1.3616e-01, -3.1488e-03,  7.2494e-02, -7.8889e-02,  2.0676e-01,
         4.3129e-02, -8.1858e-02, -1.0637e-01, -5.7288e-02,  5.7314e-02,
         4.2769e-02,  2.2361e-01,  1.3120e-02,  2.8730e-02,  5.2331e-02,
         5.4023e-02,  4.4851e-02, -1.7693e-01,  1.7781e-01,  1.5446e-01,
        -4.9951e-02, -2.8318e-01,  5.4191e-02,  3.3882e-02, -1.6848e-01,
         7.6715e-02,  2.4885e-02, -2.1834e-01, -2.1398e-01,  2.0044e-02,
        -5.4829e-02,  1.3056e-02,  6.2985e-02, -3.4780e-02,  9.1208e-02,
        -1.9157e-02,  4.6584e-02,  9.4208e-02,  1.9327e-01,  1.6416e-01,
        -1.8346e-04, -8.6732e-03,  5.4522e-03,  2.9243e-01, -2.0768e-01,
         9.6066e-02,  9.0319e-02,  5.5574e-02,  2.4970e-01, -1.5107e-02,
        -2.7542e-02,  2.1949e-02, -1.5582e-01, -1.5608e-01, -1.5857e-01,
        -2.4436e-01, -2.1489e-01,  9.3091e-02, -6.5462e-02,  2.4160e-01,
         1.7107e-02, -8.1824e-03,  3.9951e-02, -1.8197e-02, -3.9355e-02,
         2.9004e-01,  9.6412e-02,  3.4308e-02, -2.8366e-01, -1.0205e-01,
         7.5319e-02, -3.3870e-02, -6.3145e-02,  1.9242e-01, -6.3239e-02,
        -1.1304e-02, -4.1717e-02,  2.3288e-01,  2.7511e-01, -1.0478e-01,
        -9.5320e-02,  1.0483e-01,  6.4284e-02, -1.3138e-01,  6.6010e-02,
         1.1689e-01, -2.3027e-01, -1.0664e-01, -6.2853e-02,  6.4075e-02,
         1.2316e-01, -5.1440e-02,  1.9321e-02,  1.4741e-02,  2.6726e-01,
        -1.0516e-01,  5.2432e-02,  2.4110e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,339 - myNeural - INFO - Forward Pass: tensor([-0.3215,  0.0265, -0.0602,  ..., -0.2769, -0.2289, -0.0937])
2021-05-25 09:10:34,354 - myNeural - INFO - Forward Pass: tensor([ 0.0392, -0.1255, -0.1528, -0.2212,  0.1867, -0.0042,  0.0120,  0.0151,
        -0.2625, -0.0076, -0.2226, -0.0925, -0.1417,  0.0784, -0.1143,  0.0875,
        -0.1391, -0.0613, -0.1942,  0.0588, -0.0019,  0.1478, -0.1078, -0.2179,
        -0.0383, -0.1914,  0.1106, -0.2176,  0.0155, -0.1910,  0.0520, -0.1777,
        -0.1542, -0.0814,  0.0810, -0.2482,  0.0047,  0.1161, -0.1958, -0.2581,
        -0.0335, -0.0110, -0.0762, -0.2867, -0.0697, -0.1131, -0.3063, -0.0058,
         0.0166, -0.0787, -0.1106, -0.2424,  0.0300, -0.0261,  0.2096, -0.0919,
        -0.1453, -0.1330,  0.0799,  0.0519,  0.1131,  0.1628, -0.1790, -0.0167,
        -0.0154,  0.0649,  0.1795, -0.1791, -0.1756, -0.0734, -0.1164, -0.1702,
        -0.0958,  0.1562,  0.0647, -0.1631, -0.0767,  0.0575, -0.0571, -0.2619,
        -0.2198,  0.1735, -0.2410, -0.0800, -0.1866, -0.2701, -0.1154,  0.1735,
         0.0675, -0.0068,  0.0571, -0.1419,  0.0924,  0.1524, -0.0684, -0.1533,
         0.0577, -0.1016,  0.1052, -0.1351,  0.0917,  0.1298, -0.1568,  0.0038,
        -0.0907, -0.0814, -0.1049, -0.2063, -0.0988, -0.1591, -0.2902, -0.3306,
        -0.0882,  0.1142, -0.1177, -0.1611,  0.0051,  0.0373, -0.0293, -0.0254,
         0.1534, -0.1963, -0.2912,  0.1160,  0.0223,  0.1075,  0.0209,  0.0418],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,367 - myNeural - INFO - Forward Pass: tensor([-0.5729, -0.1837, -0.2851,  ..., -0.4597, -0.4500, -0.3069])
2021-05-25 09:10:34,382 - myNeural - INFO - Forward Pass: tensor([-0.0071, -0.1554, -0.2817, -0.5584, -0.1266, -0.0697, -0.1207, -0.1833,
        -0.3740, -0.3416, -0.0370, -0.0673, -0.3116, -0.2696, -0.3445, -0.0581,
        -0.3313, -0.3386, -0.3482, -0.1776, -0.0614, -0.1415, -0.1304, -0.4189,
        -0.4950, -0.3873, -0.3628, -0.0897, -0.2045, -0.1421, -0.3146, -0.1834,
        -0.3112, -0.2380, -0.2412, -0.5115, -0.4257, -0.1043, -0.3193, -0.3003,
        -0.1325, -0.3388, -0.0778, -0.3123, -0.2943, -0.2502, -0.0522, -0.2085,
        -0.5606, -0.4997, -0.3457, -0.3386, -0.5864, -0.2568, -0.0604, -0.1745,
        -0.2910, -0.4933, -0.4700, -0.2382, -0.4923, -0.4879, -0.1246, -0.0721,
        -0.3184, -0.4267, -0.3674, -0.1000, -0.3032, -0.1918, -0.2999, -0.3976,
        -0.4539, -0.2239, -0.1920, -0.1021, -0.3828, -0.4604, -0.0803, -0.4267,
        -0.3391, -0.3756, -0.1673, -0.3125, -0.3841, -0.1992, -0.2002, -0.4703,
         0.0395, -0.4942, -0.3386, -0.2236, -0.2771, -0.4906, -0.2797, -0.2851,
        -0.3971, -0.2320, -0.4577, -0.3426, -0.3081, -0.0933, -0.2497, -0.1929,
        -0.3776, -0.2262, -0.2509, -0.2298, -0.1370, -0.3989, -0.2039, -0.3182,
        -0.2189, -0.3952, -0.0295, -0.4244, -0.5679, -0.2204, -0.4003, -0.4662,
        -0.3730, -0.3468, -0.2349, -0.4680, -0.5439, -0.1838, -0.3572, -0.2547],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,396 - myNeural - INFO - Forward Pass: tensor([-0.3260,  0.0341, -0.0561,  ..., -0.2591, -0.2169, -0.0873])
2021-05-25 09:10:34,411 - myNeural - INFO - Forward Pass: tensor([-0.1046,  0.0467,  0.1880, -0.1871, -0.0917, -0.0793,  0.2186, -0.1535,
        -0.2435, -0.0501, -0.0217, -0.2896,  0.0018, -0.2682,  0.0826,  0.1545,
         0.0731, -0.3111, -0.0734, -0.3738, -0.1158, -0.0175,  0.2628, -0.0017,
         0.0057, -0.0441, -0.1526,  0.0769, -0.0894, -0.0794, -0.0486, -0.1168,
         0.1114, -0.0025, -0.1467, -0.2510, -0.3039, -0.0266,  0.2138,  0.0804,
        -0.1922, -0.1411, -0.2939,  0.0354, -0.0885,  0.1438, -0.2420, -0.2156,
         0.0575, -0.2221, -0.0779, -0.2319, -0.0683, -0.0128,  0.1984,  0.1503,
         0.2058, -0.2487,  0.0189, -0.1337, -0.0258,  0.2255,  0.0939, -0.1236,
         0.1320, -0.0958,  0.0197, -0.1080, -0.1576,  0.1880, -0.1751,  0.1286,
        -0.1855, -0.0719,  0.0248,  0.2217,  0.0665,  0.1038, -0.1961,  0.0295,
        -0.1157, -0.3405, -0.2179,  0.2411,  0.1387, -0.1264,  0.2179,  0.0357,
         0.0653, -0.0254, -0.0855,  0.1616, -0.1522, -0.1224, -0.3107, -0.2442,
         0.0004,  0.0542, -0.2000,  0.0562,  0.0920,  0.0323, -0.0148, -0.0052,
         0.0076, -0.2346, -0.3861,  0.0501,  0.1810,  0.0742, -0.0617, -0.2689,
        -0.1700, -0.3937, -0.2226, -0.1077, -0.0194, -0.0394, -0.1141, -0.2112,
        -0.1604, -0.0190, -0.2048, -0.0417,  0.1144,  0.2226, -0.1045, -0.0507],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,425 - myNeural - INFO - Forward Pass: tensor([-0.1061,  0.2289,  0.1758,  ..., -0.0492, -0.0092,  0.1627])
2021-05-25 09:10:34,440 - myNeural - INFO - Forward Pass: tensor([-0.1187,  0.2090,  0.3416,  0.3026,  0.3068,  0.1872,  0.1529, -0.0022,
         0.1663,  0.0688,  0.2208, -0.1324,  0.3251,  0.1851,  0.0268,  0.0520,
         0.1575, -0.0013,  0.0190,  0.1888, -0.3692,  0.0433,  0.0650,  0.1947,
         0.1253,  0.0624, -0.1277, -0.0301,  0.1943,  0.1442, -0.0820,  0.1951,
         0.3230,  0.0833,  0.0552,  0.1682,  0.4082,  0.3457,  0.1174, -0.0455,
         0.3099,  0.3344,  0.1480,  0.3204,  0.2460,  0.1267,  0.2803,  0.1656,
         0.1531,  0.3019,  0.3045,  0.2821,  0.0584,  0.1418,  0.0560,  0.2881,
        -0.0264,  0.1002, -0.0228,  0.0813,  0.1094,  0.0993,  0.2518,  0.0211,
        -0.0412,  0.2840,  0.2268,  0.4818,  0.0307,  0.2835,  0.2492,  0.1992,
         0.3142,  0.3226,  0.1998, -0.0181, -0.0048,  0.3058,  0.0086,  0.3147,
         0.1691,  0.1682,  0.2971,  0.2363,  0.2046, -0.0468, -0.1334, -0.0273,
         0.2920,  0.1303,  0.3702,  0.0823,  0.3977,  0.1103,  0.2370,  0.2518,
         0.1664,  0.4578,  0.4663,  0.1997,  0.1727, -0.0229,  0.0343,  0.3716,
         0.1264, -0.0248,  0.1454,  0.1190,  0.2148,  0.2667,  0.2647, -0.0564,
         0.3159,  0.1833,  0.4651,  0.1568,  0.2387,  0.1411, -0.0051,  0.1305,
         0.3491,  0.0371,  0.0948,  0.0228,  0.0155,  0.3335,  0.0722, -0.0931],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,454 - myNeural - INFO - Forward Pass: tensor([-0.4701, -0.0269, -0.1597,  ..., -0.3057, -0.3304, -0.1476])
2021-05-25 09:10:34,468 - myNeural - INFO - Forward Pass: tensor([-1.7601e-01, -1.7573e-01, -5.2509e-02, -7.6307e-02, -7.5270e-03,
        -1.8920e-01, -1.2837e-01, -1.6378e-01, -2.4093e-01, -4.0540e-02,
        -7.7445e-02, -6.6485e-02, -4.2866e-01,  1.5004e-01, -1.2462e-01,
        -4.0174e-02, -2.9485e-01, -1.4740e-01, -7.4155e-02, -3.0496e-01,
         9.6034e-03,  2.0351e-01, -6.8072e-03, -1.6934e-01, -1.5528e-01,
        -3.7471e-01, -2.8629e-01,  1.4048e-01, -1.9362e-01, -4.6473e-01,
        -6.9545e-02, -2.7169e-02, -3.1630e-01, -2.5193e-01, -1.7272e-01,
         1.0863e-01,  6.2982e-02, -1.4598e-01, -2.7961e-01,  1.1848e-01,
        -1.9337e-01, -2.6204e-01, -3.7712e-01, -2.1120e-01, -3.2660e-01,
        -1.8906e-01, -4.5204e-01, -2.3853e-01, -3.0016e-01,  5.2909e-02,
         6.5388e-02, -7.2874e-02, -4.0508e-02, -2.9013e-01,  6.3213e-02,
        -1.5228e-01, -2.0433e-01, -1.8250e-01, -4.3175e-01, -2.7213e-01,
        -6.2879e-01, -4.9972e-01, -2.8275e-01, -6.5743e-02, -1.1864e-01,
        -1.7124e-01, -1.1271e-01, -8.2099e-02, -2.7759e-01, -2.0123e-01,
        -2.4182e-01,  7.0235e-03, -1.3628e-02, -7.0180e-02,  1.2229e-01,
        -2.2258e-02, -1.1663e-02, -1.3607e-01, -2.2963e-01,  1.8147e-02,
        -1.7107e-01, -2.4372e-01,  8.1262e-02, -1.3064e-01, -8.8968e-02,
        -2.2270e-01, -4.0659e-01, -1.5972e-01,  2.0190e-01, -3.0069e-01,
        -4.7048e-01, -2.2434e-01, -4.6731e-01, -7.0368e-02, -1.7102e-01,
        -2.3800e-04, -1.8439e-01, -4.9863e-02, -1.6885e-01, -1.1267e-01,
        -3.0847e-01, -1.2568e-01, -5.2743e-02, -4.9008e-01, -1.6722e-01,
        -1.4143e-01, -1.5462e-01, -2.7991e-01, -2.7053e-01, -2.1026e-01,
         9.3479e-02, -1.6523e-02, -1.8800e-01, -2.7720e-03, -8.9100e-02,
        -1.1495e-01, -1.0008e-01, -6.2613e-02, -1.9381e-01, -1.0106e-01,
        -5.8268e-01, -3.5225e-02, -1.9441e-01, -4.2453e-01,  8.7412e-02,
        -2.7807e-01, -2.5019e-01, -1.4173e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,483 - myNeural - INFO - Forward Pass: tensor([-0.3886,  0.0623, -0.0721,  ..., -0.2251, -0.2524, -0.0617])
2021-05-25 09:10:34,498 - myNeural - INFO - Forward Pass: tensor([-0.1685, -0.0106, -0.0146, -0.1125,  0.0225, -0.2224, -0.1163, -0.0802,
        -0.0182, -0.1423, -0.0897, -0.1696, -0.0088,  0.1386,  0.0545, -0.1490,
        -0.0196,  0.0881, -0.2742, -0.1576, -0.0828, -0.0389, -0.0154,  0.0123,
        -0.1758, -0.1814, -0.0231, -0.2434,  0.1136, -0.0759,  0.2782, -0.0327,
        -0.0298, -0.1643, -0.2965,  0.0391,  0.0357,  0.0420,  0.2701, -0.2160,
        -0.5214, -0.1333,  0.0551, -0.3076, -0.0595, -0.2778,  0.1225, -0.1198,
        -0.1826, -0.1362,  0.2184, -0.0610, -0.0629,  0.2161, -0.0056, -0.3481,
        -0.0809,  0.0145, -0.2932, -0.1585,  0.0598, -0.0310,  0.1767, -0.0727,
         0.0159, -0.3651, -0.1647,  0.1143, -0.1193, -0.2167, -0.1959,  0.1689,
         0.0100, -0.3106, -0.1171,  0.1509,  0.0803, -0.1099, -0.0624, -0.0261,
         0.1467, -0.1080,  0.1590, -0.0235,  0.0499,  0.0080, -0.1248, -0.0597,
        -0.0344,  0.2664, -0.3541, -0.4141,  0.0352,  0.0719,  0.0590,  0.2150,
         0.0161, -0.1920, -0.1265,  0.1384,  0.1269, -0.0011, -0.0238,  0.1625,
        -0.2213, -0.1535, -0.1516, -0.0275, -0.1030,  0.0348, -0.0176, -0.3326,
        -0.0965, -0.1143, -0.0322,  0.0285,  0.3116,  0.0152, -0.1080, -0.0178,
        -0.0659, -0.1383, -0.2092, -0.3009,  0.0127,  0.1140,  0.0030, -0.1029],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,513 - myNeural - INFO - Forward Pass: tensor([-0.4788,  0.0181, -0.1408,  ..., -0.2462, -0.3185, -0.1225])
2021-05-25 09:10:34,526 - myNeural - INFO - Forward Pass: tensor([-0.2539,  0.0031,  0.0215, -0.2526, -0.0225,  0.0286, -0.3159,  0.0152,
        -0.0559, -0.2856, -0.3233, -0.3709, -0.1171, -0.0035,  0.1570, -0.1420,
         0.1230, -0.2712, -0.1435, -0.1828, -0.0113, -0.1018, -0.0430, -0.2643,
        -0.0187, -0.4012, -0.1197, -0.1588, -0.1049, -0.0203, -0.0754, -0.0766,
        -0.1562, -0.1487,  0.0567, -0.3905, -0.1098, -0.3230, -0.1145,  0.2522,
        -0.0264, -0.6579, -0.1198,  0.0358,  0.0590,  0.0027, -0.0728, -0.2854,
        -0.1560,  0.1243,  0.0864,  0.0210, -0.2434, -0.2267, -0.4034, -0.2529,
        -0.1716, -0.1012, -0.1617,  0.1784,  0.1547, -0.3095, -0.1062,  0.1466,
        -0.2000, -0.3144,  0.3477,  0.0400,  0.0806, -0.0740, -0.0796, -0.0526,
         0.0780,  0.1685, -0.0148, -0.6218, -0.1422, -0.2888, -0.6457, -0.0856,
         0.1169, -0.1525, -0.2177, -0.2961,  0.2906, -0.2932,  0.0479, -0.0469,
         0.0449,  0.0229, -0.0473, -0.2014,  0.0919, -0.0450,  0.2454, -0.3551,
        -0.2574, -0.0266, -0.0733, -0.1753, -0.4693, -0.2662, -0.0118,  0.0911,
        -0.1909, -0.0164, -0.2076,  0.0062, -0.2318, -0.0503, -0.0614,  0.0525,
         0.0582,  0.0403, -0.1956,  0.3794, -0.0502, -0.0455, -0.0659, -0.2669,
         0.0533,  0.0538,  0.1169, -0.1971, -0.2939, -0.0578,  0.0066, -0.2636],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,541 - myNeural - INFO - Forward Pass: tensor([-0.3986,  0.0704, -0.0633,  ..., -0.1836, -0.2652, -0.0758])
2021-05-25 09:10:34,556 - myNeural - INFO - Forward Pass: tensor([ 0.1355,  0.0500, -0.1927,  0.0893,  0.0408, -0.0359, -0.1220, -0.1027,
        -0.1335,  0.1586,  0.0366, -0.3046, -0.2278, -0.2366, -0.1416, -0.0853,
        -0.0966, -0.1699, -0.0867, -0.2124, -0.2935, -0.0708, -0.2653, -0.0743,
        -0.0764, -0.2129,  0.0213,  0.0106, -0.1314, -0.0411,  0.0296, -0.2218,
        -0.1716,  0.1253, -0.2228, -0.2558, -0.1550,  0.1105, -0.1304,  0.0049,
        -0.1504,  0.2001,  0.1491, -0.3925, -0.1706, -0.1427, -0.2896, -0.0844,
        -0.0342, -0.2352, -0.0122, -0.5411, -0.2166, -0.3821, -0.1337,  0.1672,
        -0.0577,  0.0370, -0.0822, -0.1483,  0.0744, -0.3236, -0.2242,  0.0791,
        -0.0103, -0.1924, -0.0470,  0.0762,  0.2734,  0.3041, -0.2284,  0.1475,
         0.3008,  0.1545, -0.0864, -0.0241, -0.1529,  0.0389, -0.0852,  0.1230,
        -0.2333, -0.2596, -0.0564, -0.0270,  0.0056, -0.1352, -0.1464, -0.3451,
        -0.2397, -0.0839, -0.2222,  0.0731, -0.1423, -0.0289, -0.0797, -0.0450,
        -0.0941, -0.3587, -0.3272,  0.0510, -0.2636, -0.1638, -0.1559, -0.0594,
        -0.1006, -0.1378, -0.0349,  0.1663, -0.2537,  0.0022,  0.0122, -0.1016,
        -0.1410,  0.3028, -0.0987, -0.0813, -0.2950, -0.0557, -0.0256, -0.0483,
        -0.2512, -0.0483, -0.0475,  0.1728, -0.0228, -0.2340, -0.0846,  0.0415],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,570 - myNeural - INFO - Forward Pass: tensor([-0.3192,  0.1658,  0.0320,  ..., -0.0915, -0.2074,  0.0078])
2021-05-25 09:10:34,584 - myNeural - INFO - Forward Pass: tensor([ 0.0863,  0.3401,  0.5333, -0.2111, -0.0069, -0.0460,  0.0055,  0.2081,
        -0.0973,  0.1253,  0.1674, -0.1431, -0.1549, -0.2916,  0.0646,  0.1267,
        -0.2514,  0.3623, -0.1690, -0.0727, -0.0856, -0.3516,  0.1199,  0.1611,
         0.3415, -0.1586,  0.0919, -0.0592, -0.3344,  0.0214,  0.2843,  0.0034,
        -0.1410,  0.0633,  0.2303,  0.0740, -0.0409, -0.1661, -0.0289,  0.0818,
         0.0774, -0.0728, -0.2648,  0.4087, -0.0868,  0.0018,  0.0211,  0.0323,
         0.1514, -0.2011, -0.0258, -0.0592,  0.0994, -0.0492,  0.1893,  0.2810,
        -0.1500,  0.1461, -0.1609,  0.2364, -0.1775, -0.0288, -0.1013,  0.0300,
        -0.3261,  0.1188,  0.0623, -0.2829, -0.0259,  0.0039, -0.0815, -0.1150,
        -0.1616, -0.0240, -0.0378, -0.3207,  0.0590, -0.0829,  0.3819,  0.0570,
         0.0327,  0.2023,  0.0149,  0.0684, -0.2011, -0.1495,  0.0719, -0.3006,
        -0.1605,  0.0299, -0.1004,  0.0430,  0.2314, -0.0505, -0.1149, -0.0779,
         0.2731,  0.1075,  0.0177,  0.1378, -0.0647,  0.3875,  0.2019, -0.2033,
         0.1783,  0.0017,  0.0580,  0.1345,  0.1426,  0.0107,  0.1930,  0.0706,
         0.0491,  0.1834, -0.0264, -0.0539, -0.1185,  0.2664, -0.0447,  0.0614,
         0.1297,  0.1296, -0.0182, -0.1790,  0.2444, -0.0236, -0.1313, -0.1601],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,598 - myNeural - INFO - Forward Pass: tensor([-0.5120,  0.0489, -0.1338,  ..., -0.2209, -0.3714, -0.1464])
2021-05-25 09:10:34,612 - myNeural - INFO - Forward Pass: tensor([-0.2665,  0.1679, -0.2418, -0.0542, -0.2148, -0.3100, -0.0748, -0.1537,
        -0.3423, -0.3830, -0.1292, -0.0783, -0.1522, -0.4732, -0.0638, -0.1682,
        -0.0525, -0.5789, -0.5222,  0.1766, -0.2163, -0.3380, -0.1438, -0.0208,
        -0.2092,  0.0852, -0.0636, -0.2862, -0.0330, -0.1887, -0.1213,  0.0782,
        -0.0022,  0.0096, -0.2629, -0.0054, -0.1311, -0.0182, -0.0612, -0.1612,
        -0.1063, -0.1567, -0.1214, -0.0636,  0.0866,  0.2637,  0.2849, -0.3248,
         0.1912, -0.1196, -0.1109, -0.3251, -0.4455, -0.1403, -0.3553, -0.1723,
        -0.0682,  0.0610,  0.2221, -0.3360,  0.1361, -0.0735, -0.2461, -0.1746,
        -0.2557, -0.3045, -0.5013, -0.0180,  0.1480,  0.0765, -0.3647, -0.0145,
        -0.3175, -0.1260, -0.0952,  0.0180, -0.4941,  0.0082, -0.0882, -0.4640,
         0.2195, -0.3161,  0.2413,  0.0592, -0.0088, -0.3233,  0.0928, -0.0486,
        -0.0906, -0.5122, -0.0975, -0.1497, -0.2744,  0.0137,  0.0897, -0.1912,
        -0.2208, -0.1986, -0.3181,  0.2035, -0.0851, -0.1673,  0.0215, -0.0792,
         0.2166, -0.1178, -0.2350,  0.0591,  0.0038, -0.2525, -0.3094, -0.2908,
         0.1128, -0.0190, -0.0460, -0.2936, -0.2695, -0.4006, -0.2046,  0.0860,
         0.0940,  0.0077, -0.2139,  0.0272,  0.0233, -0.2665,  0.0260, -0.2018],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,626 - myNeural - INFO - Forward Pass: tensor([-0.4097,  0.1521, -0.0480,  ..., -0.1256, -0.2819, -0.0753])
2021-05-25 09:10:34,641 - myNeural - INFO - Forward Pass: tensor([-0.0651, -0.0275, -0.1771,  0.0268,  0.1231, -0.0814,  0.0800, -0.1215,
        -0.2246, -0.2809,  0.2975, -0.2059, -0.0130, -0.4665, -0.0876,  0.0978,
        -0.2435, -0.1585, -0.2712,  0.1638, -0.2626,  0.0721,  0.0226, -0.2348,
         0.0281,  0.0029, -0.0072, -0.2095, -0.2007, -0.0703,  0.0975,  0.1996,
        -0.1607, -0.3841, -0.2293, -0.1661, -0.0406, -0.0455,  0.0107, -0.4796,
         0.0014,  0.3833, -0.2039, -0.2607, -0.1447, -0.0991, -0.0677,  0.0921,
         0.1327,  0.2541, -0.1411, -0.0655,  0.1702, -0.1885, -0.0536, -0.1562,
        -0.0086, -0.0373,  0.0056, -0.2479, -0.3175, -0.1330, -0.4343, -0.4074,
         0.0451,  0.1189, -0.1067,  0.1366, -0.0062, -0.0535, -0.2946,  0.0080,
        -0.0203, -0.1603, -0.0876, -0.1673, -0.1395, -0.0010, -0.0185, -0.0034,
        -0.0770, -0.3432,  0.2777,  0.1505,  0.0492,  0.3792, -0.0346,  0.0856,
        -0.0883, -0.0139, -0.0542,  0.0315, -0.3184, -0.2217, -0.1198,  0.1680,
         0.0386, -0.3081, -0.2907, -0.2502, -0.1562, -0.0365, -0.4929, -0.0529,
        -0.1038, -0.0325,  0.0742, -0.0013, -0.1275, -0.3033,  0.0546, -0.1942,
        -0.0336, -0.1055, -0.0958, -0.1593, -0.2420, -0.0410, -0.4326,  0.0909,
         0.0136, -0.2515, -0.5053,  0.0410, -0.3962, -0.1252,  0.1057, -0.0965],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,655 - myNeural - INFO - Forward Pass: tensor([-0.4740,  0.1159, -0.0705,  ..., -0.1432, -0.3507, -0.0879])
2021-05-25 09:10:34,670 - myNeural - INFO - Forward Pass: tensor([ 0.1787, -0.0395, -0.0631, -0.0883, -0.0837,  0.0030, -0.1583,  0.1147,
        -0.2010,  0.1215, -0.7715, -0.2020, -0.2482, -0.0305,  0.0552, -0.5380,
        -0.4959, -0.2136, -0.0110, -0.1908, -0.3859, -0.0315, -0.1219,  0.2693,
         0.0073, -0.2058, -0.3335, -0.0586, -0.1447, -0.4712,  0.0248, -0.2110,
        -0.4011, -0.0443, -0.1468,  0.0095, -0.1142, -0.3896, -0.2518, -0.1970,
        -0.4500, -0.2913,  0.0361,  0.0511, -0.4045, -0.0125, -0.1716, -0.0846,
        -0.2899, -0.2076, -0.2685, -0.0570, -0.0548,  0.3230, -0.0664,  0.0463,
         0.2006, -0.2474,  0.2876, -0.1562,  0.1774, -0.2897, -0.2763,  0.0915,
        -0.0924,  0.1240, -0.3032, -0.1920, -0.0230, -0.2799,  0.0499, -0.0502,
         0.4646, -0.0457,  0.3202, -0.0357,  0.2284, -0.0673, -0.3552,  0.4487,
        -0.3748, -0.0727, -0.0725, -0.1046, -0.1219, -0.2139, -0.4141,  0.1155,
        -0.5509, -0.1378, -0.2335,  0.0653, -0.1963,  0.3374, -0.3252,  0.1047,
        -0.3559, -0.0939, -0.5783,  0.0539,  0.0466, -0.4711, -0.4378, -0.1461,
        -0.1518, -0.1481,  0.1230, -0.3789, -0.2515, -0.6386, -0.2180,  0.0120,
        -0.0509, -0.1010,  0.1684, -0.2447,  0.0174,  0.1736,  0.1118, -0.3732,
        -0.1161,  0.0071, -0.0687, -0.0353, -0.2651,  0.0847, -0.0848, -0.4505],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,684 - myNeural - INFO - Forward Pass: tensor([-0.4082,  0.1534, -0.0176,  ..., -0.0678, -0.2917, -0.0115])
2021-05-25 09:10:34,698 - myNeural - INFO - Forward Pass: tensor([-0.2255,  0.1165, -0.2319, -0.4584,  0.3790,  0.0850,  0.1136,  0.0802,
         0.3324,  0.0068, -0.1106, -0.0347, -0.2041,  0.0397,  0.4098, -0.1699,
        -0.3034,  0.2318, -0.3134, -0.2588, -0.4045, -0.1504,  0.1375, -0.1954,
        -0.2409, -0.1751, -0.2475, -0.4225,  0.0351,  0.1543, -0.1414, -0.3624,
         0.1566, -0.0100,  0.0858, -0.1131, -0.0217, -0.1452,  0.1818,  0.0752,
         0.1289,  0.0248,  0.2616, -0.0609,  0.0450, -0.1561,  0.2302, -0.0365,
        -0.0993,  0.2899,  0.0776, -0.3844, -0.0394, -0.0076, -0.1178,  0.0721,
        -0.0655, -0.1178, -0.4280, -0.1970, -0.3647, -0.2600,  0.0972, -0.1005,
        -0.2255, -0.0327, -0.3582, -0.1705,  0.3901,  0.1145,  0.0904, -0.4949,
        -0.0006,  0.0512, -0.1763,  0.4618, -0.1454, -0.1521, -0.0041, -0.3832,
        -0.3976, -0.0260,  0.1329,  0.0313,  0.1557, -0.1289, -0.0892, -0.3886,
         0.0764, -0.1840,  0.0954, -0.2285,  0.1146, -0.0968, -0.0839,  0.0337,
        -0.2031,  0.2835, -0.0727, -0.4106, -0.0538, -0.0063,  0.1458, -0.1771,
        -0.0505,  0.1261,  0.5392,  0.2166,  0.2056, -0.2281, -0.0306, -0.0218,
        -0.3199, -0.3350, -0.0442,  0.2592,  0.1410,  0.0496, -0.1847, -0.1387,
        -0.2468,  0.1165,  0.0523,  0.0637, -0.1507,  0.1562, -0.0509,  0.4008],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,713 - myNeural - INFO - Forward Pass: tensor([-0.2415,  0.2957,  0.1798,  ...,  0.1139, -0.1581,  0.1386])
2021-05-25 09:10:34,726 - myNeural - INFO - Forward Pass: tensor([ 0.3927,  0.3344, -0.1569,  0.3787, -0.0482,  0.1667,  0.0018,  0.0049,
        -0.3256,  0.0232, -0.4472,  0.1796,  0.1532,  0.4526,  0.0089,  0.1058,
         0.1459, -0.1120,  0.2936,  0.4014,  0.3133,  0.1003,  0.2755,  0.2711,
        -0.0430,  0.1391, -0.1407, -0.2046, -0.0689,  0.1358, -0.0506, -0.1097,
         0.4263,  0.1162,  0.4410,  0.0181,  0.2889,  0.2286,  0.2183,  0.1086,
        -0.1681,  0.3197,  0.1854,  0.4680,  0.1035,  0.2719, -0.1038,  0.4184,
         0.1322,  0.2230,  0.0369,  0.0865,  0.3231,  0.1392, -0.2317,  0.2656,
         0.0712,  0.1086, -0.0070,  0.4305,  0.0421,  0.2149,  0.4266, -0.2879,
         0.5170,  0.5024,  0.1920,  0.1333,  0.6344,  0.0438, -0.0627, -0.1621,
        -0.0622,  0.1870,  0.1023,  0.3571,  0.5509,  0.0118,  0.3696,  0.3755,
        -0.0493,  0.2059, -0.0176, -0.2406, -0.0927,  0.1451,  0.2684,  0.1177,
         0.2413,  0.1662, -0.2492,  0.0981, -0.0973,  0.2123,  0.0214, -0.0562,
         0.1306,  0.1567, -0.2736,  0.2410, -0.2425,  0.1908,  0.2160, -0.1596,
         0.3753,  0.3478,  0.1539,  0.1416, -0.2681,  0.1460, -0.1174, -0.0197,
        -0.0802,  0.4926,  0.1121, -0.1979,  0.2978,  0.4971, -0.0483,  0.2127,
         0.2833, -0.0954, -0.0753,  0.1229,  0.3533,  0.0553,  0.0059,  0.0018],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,740 - myNeural - INFO - Forward Pass: tensor([-0.1977,  0.3249,  0.2331,  ...,  0.1660, -0.1231,  0.1959])
2021-05-25 09:10:34,754 - myNeural - INFO - Forward Pass: tensor([ 0.1678,  0.1240,  0.0333,  0.4555,  0.2737,  0.3349,  0.1862, -0.0142,
         0.1899, -0.5399,  0.2249,  0.0283,  0.1307,  0.3607,  0.4832,  0.3932,
         0.2721,  0.1230, -0.0325,  0.1526,  0.0169,  0.0837,  0.1612,  0.0871,
        -0.0706,  0.1683,  0.1413, -0.0420,  0.4006, -0.0882, -0.1420, -0.0772,
        -0.0922,  0.1345,  0.0362, -0.0455,  0.1048,  0.1642,  0.0795,  0.2056,
         0.4265,  0.2625,  0.1712,  0.0045, -0.0521,  0.1329, -0.0962,  0.1835,
         0.1519,  0.0273,  0.2675,  0.4549,  0.0515,  0.0546,  0.1984,  0.0340,
         0.4664,  0.0204,  0.4044,  0.0221,  0.3291,  0.2796,  0.5487, -0.1711,
         0.2870, -0.2233,  0.4163, -0.0845,  0.2479, -0.0725, -0.1649, -0.0741,
        -0.0756, -0.4346, -0.0716,  0.3088,  0.0504,  0.6053,  0.0173,  0.2990,
         0.1544,  0.4619,  0.0392, -0.1137,  0.0681,  0.5589,  0.4146,  0.1516,
        -0.4052,  0.3668,  0.5428, -0.2144,  0.0216,  0.0395, -0.2318,  0.5638,
         0.6626,  0.2746,  0.0892, -0.0839,  0.0502, -0.2234,  0.3156,  0.2074,
        -0.0064,  0.2905, -0.3133,  0.1798, -0.1765, -0.3372,  0.0616,  0.2355,
         0.4709, -0.0609,  0.2619,  0.1985,  0.2653,  0.3062,  0.3454,  0.2254,
         0.0227,  0.3783,  0.6074,  0.2229, -0.1182,  0.1472,  0.0919,  0.0962],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,769 - myNeural - INFO - Forward Pass: tensor([-0.2849,  0.2980,  0.1652,  ...,  0.1245, -0.2086,  0.1281])
2021-05-25 09:10:34,781 - myNeural - INFO - Batch 20 -- TrainLoss: 0.64999 -- TrainAcc: 69.53125% -- TestAcc: 69.55000%
2021-05-25 09:10:34,784 - myNeural - INFO - Forward Pass: tensor([-0.1987, -0.1869, -0.1344, -0.1215,  0.2796,  0.0978,  0.0496,  0.3315,
         0.1387,  0.3824,  0.0638,  0.2041,  0.0462,  0.0249,  0.0855,  0.0899,
         0.1807, -0.1128,  0.5378,  0.0858, -0.1115, -0.3205, -0.0363,  0.1397,
         0.1066,  0.2622,  0.2644,  0.2616, -0.0468,  0.5204,  0.2325,  0.3168,
         0.0099,  0.2950,  0.4491, -0.0647,  0.1980, -0.2624,  0.1301, -0.2792,
         0.0065, -0.1928, -0.0303,  0.3157,  0.2598,  0.2481, -0.0871, -0.1527,
        -0.3908,  0.0962, -0.1328,  0.2449,  0.4937,  0.1203,  0.1336,  0.0038,
         0.4566, -0.0034,  0.2803,  0.2897, -0.1421,  0.2849, -0.0045,  0.4394,
         0.1739,  0.3099, -0.0262,  0.4199, -0.1618, -0.0025, -0.0699, -0.0200,
        -0.0584,  0.0610, -0.4493,  0.4830, -0.1151,  0.0776,  0.3564,  0.2844,
         0.2960,  0.4998, -0.1190,  0.1659,  0.1925,  0.1812, -0.1895,  0.2095,
        -0.0043,  0.0363, -0.0757,  0.1772, -0.0895,  0.1718, -0.0855,  0.4241,
         0.0301, -0.7469, -0.0912,  0.2854,  0.2422,  0.2692,  0.5179,  0.1300,
         0.3473,  0.1843,  0.0072, -0.2030,  0.1556, -0.0693, -0.0914,  0.3769,
         0.2762,  0.0178, -0.0289,  0.7969,  0.0360, -0.0582,  0.2521,  0.4927,
        -0.1626, -0.3099,  0.5130,  0.5640,  0.0957,  0.1845, -0.0698, -0.1171],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,798 - myNeural - INFO - Forward Pass: tensor([-0.2198,  0.3586,  0.2141,  ...,  0.1992, -0.1805,  0.2028])
2021-05-25 09:10:34,813 - myNeural - INFO - Forward Pass: tensor([ 0.1187,  0.3531,  0.0031, -0.2158,  0.7798,  0.1892,  0.3272,  0.5456,
        -0.2993,  0.0966,  0.2568,  0.0549, -0.2463,  0.3480,  0.1838, -0.2903,
         0.4653, -0.2633, -0.0221,  0.1507,  0.3206,  0.0756,  0.0427,  0.3384,
        -0.0348,  0.4442,  0.4724, -0.0995, -0.0426, -0.1539,  0.0150, -0.0943,
         0.5558,  0.4933,  0.3055,  0.4686,  0.7429,  0.0853, -0.0606,  0.3100,
         0.0284,  0.2674,  0.2194,  0.3940, -0.0305, -0.0240,  0.3090,  0.3479,
        -0.0401, -0.1225,  0.1609,  0.1188,  0.0444,  0.2745,  0.1909, -0.0405,
         0.3497, -0.0021,  0.2028,  0.2445,  0.1658, -0.0206,  0.2444,  0.1140,
         0.5628,  0.3991,  0.2818,  0.2616,  0.2864,  0.0661,  0.3437, -0.1968,
         0.3522,  0.0363,  0.3481,  0.2398,  0.4669,  0.0267, -0.0686,  0.1534,
         0.4709,  0.1680, -0.2988, -0.0422, -0.1008,  0.2178,  0.1017,  0.0203,
         0.2869,  0.2019,  0.1293,  0.3360,  0.0710, -0.0010,  0.3297,  0.5834,
         0.3415, -0.4920,  0.1803,  0.1320,  0.1539,  0.3076, -0.4272,  0.0867,
         0.0675,  0.2731,  0.2470,  0.2575, -0.0277,  0.3655,  0.1324, -0.5748,
         0.5655,  0.1281,  0.1656,  0.2255,  0.5300,  0.0528,  0.3221,  0.4222,
        -0.3838, -0.1197, -0.0642, -0.0841,  0.2893,  0.2600,  0.3327,  0.2972],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,828 - myNeural - INFO - Forward Pass: tensor([-0.0750,  0.4693,  0.3858,  ...,  0.3267, -0.0598,  0.3705])
2021-05-25 09:10:34,845 - myNeural - INFO - Forward Pass: tensor([-0.0432,  0.3507,  0.6330,  0.5889,  0.1930,  0.0027,  0.0744,  0.3608,
         0.3401,  0.4349, -0.0210,  0.1626,  0.3381,  0.2230, -0.1003, -0.0735,
         0.2759,  0.9017,  0.4764,  0.3066,  0.0739,  0.3509,  0.3567,  0.2870,
        -0.0523,  0.6286,  0.2693,  0.0462,  0.6574,  0.4807,  1.1161,  0.4234,
         0.1966,  0.5002,  0.6076,  0.3467,  0.1478,  0.2889,  0.4705,  0.7609,
         0.2414, -0.0047,  0.3212,  0.4535, -0.5399,  0.0689,  0.4383,  0.4864,
         0.2093,  0.6066,  0.0078,  0.2298,  0.1599,  0.1766,  0.7418, -0.3860,
         0.2889, -0.0039,  0.1136, -0.1560,  0.6174, -0.1776, -0.2600,  0.1286,
        -0.4067,  0.1512,  0.2924,  0.5626,  0.3558, -0.0602,  0.5342, -0.1220,
        -0.0170, -0.1928,  0.5669,  0.3610,  0.1590,  0.1774,  0.3404,  0.1951,
         0.6919, -0.0328,  0.2726,  0.6751,  0.0111,  0.1034,  0.0210,  0.6973,
        -0.0518,  0.6049, -0.0456, -0.5262,  0.5040,  0.2774,  0.0665,  0.6915,
        -0.0892,  0.1891,  0.5170,  0.5524,  0.6511,  0.3189,  0.1483,  0.3560,
         0.4927,  0.3303, -0.0079,  0.4671,  0.0846,  0.2397,  0.1786,  0.4171,
         0.2635, -0.1402, -0.1007,  0.6451,  0.0855,  0.0952,  0.4754,  0.0805,
         0.1561,  0.0807,  0.3037, -0.0533,  0.2151,  0.5000, -0.0678,  0.3080],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,862 - myNeural - INFO - Forward Pass: tensor([-0.5132,  0.1664, -0.0349,  ...,  0.0228, -0.4187,  0.0344])
2021-05-25 09:10:34,879 - myNeural - INFO - Forward Pass: tensor([-0.2194, -0.1091,  0.0150, -0.3079, -0.0466, -0.3660,  0.0584,  0.1511,
        -0.0274,  0.1136, -0.0121, -0.3683, -0.2196, -0.3236,  0.1410,  0.2435,
        -0.0441,  0.1116,  0.1275, -0.2386, -0.0209, -0.4532, -0.1774, -0.0677,
         0.1560,  0.2138, -0.3735, -0.2254,  0.3233,  0.0308,  0.1335, -0.1222,
        -0.1706,  0.4519,  0.0079, -0.0839, -0.2907,  0.0766, -0.3820, -0.1672,
         0.0896, -0.3401,  0.2553,  0.2250,  0.0918,  0.2098, -0.0198,  0.2390,
         0.5033, -0.3633,  0.4395, -0.4717,  0.4069,  0.4247, -0.2833,  0.3338,
         0.3349,  0.0530, -0.4895,  0.4624,  0.0158, -0.1387,  0.1028, -0.0609,
        -0.0109, -0.5485, -0.3482, -0.2642, -0.0748, -0.3555, -0.0589,  0.1927,
        -0.0824, -0.4085, -0.1561,  0.4983,  0.1769,  0.2713,  0.0642, -0.3066,
        -0.0963, -0.1037, -0.1937,  0.0878,  0.0478, -0.0424, -0.5043,  0.4340,
        -0.0388,  0.0995,  0.0540, -0.2427,  0.0322, -0.2973,  0.1721, -0.5444,
        -0.2707,  0.3731,  0.1458, -0.1752, -0.4470, -0.5150, -0.8038, -0.5038,
        -0.2737, -0.2373, -0.2201,  0.0682, -0.1562, -0.2185, -0.3942, -0.2690,
        -0.0429,  0.2010, -0.2249, -0.0973,  0.0226,  0.2222, -0.0451, -0.2728,
        -0.0275,  0.0148, -0.0439,  0.0729,  0.0172, -0.1728,  0.0907,  0.1068],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,894 - myNeural - INFO - Forward Pass: tensor([-0.3101,  0.3410,  0.1685,  ...,  0.1892, -0.2950,  0.2279])
2021-05-25 09:10:34,913 - myNeural - INFO - Forward Pass: tensor([-0.1571,  0.1490, -0.1045,  0.2179,  0.4875,  0.5259, -0.1151,  0.2127,
         0.5420, -0.0278,  0.1577, -0.0385,  0.0574, -0.1272,  0.3218,  0.4747,
         0.0941,  0.0031,  0.2565,  0.4976,  0.2114,  0.4897,  0.5685,  0.3328,
        -0.0293,  0.3803,  0.1008,  0.2582,  0.1492,  0.6987,  0.0417,  0.3596,
         0.1730,  0.2065,  0.3123,  0.3639,  0.4182,  0.1755,  0.0268,  0.2058,
        -0.1928,  0.5067,  0.3043, -0.0029, -0.1943, -0.3049, -0.2007,  0.3848,
         0.0212, -0.1721, -0.1664,  0.0547,  0.1735, -0.2198,  0.0180,  0.8119,
        -0.2360,  0.3686,  0.2452,  0.1399, -0.0506, -0.0074, -0.0360, -0.0828,
         0.0873,  0.2848, -0.1963,  0.2851,  0.0463, -0.1637,  0.4477,  0.1765,
         0.5013,  0.1046,  0.1096,  0.0838,  0.3103,  0.0131,  0.0830,  0.0587,
         0.3472,  0.7657, -0.1678,  0.2926,  0.9205, -0.5372,  0.3054,  0.1186,
        -0.4239, -0.5047, -0.0211, -0.1586, -0.2074,  0.1679,  0.7849,  0.2910,
         0.8923,  0.4028,  0.3712,  0.2011, -0.1447, -0.2026, -0.2961, -0.0195,
         0.2708,  0.7995, -0.0064,  0.5470, -0.0082, -0.0549,  0.2787,  0.3747,
        -0.1721, -0.3636,  0.5803, -0.2633, -0.2187,  0.5448,  0.2722,  0.2753,
        -0.0567,  0.8376,  0.2063,  0.0314, -0.2175, -0.1459,  0.5702, -0.0552],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,930 - myNeural - INFO - Forward Pass: tensor([-0.1894,  0.4747,  0.3059,  ...,  0.3273, -0.1916,  0.3576])
2021-05-25 09:10:34,966 - myNeural - INFO - Forward Pass: tensor([ 0.2862, -0.0574,  0.1497,  0.6680,  0.0774, -0.0398, -0.1747,  0.2132,
         0.0649,  0.6651,  0.1004,  0.1128,  0.1712, -0.2919, -0.2184,  0.5591,
         0.2699,  0.2897,  0.3272,  0.3533,  0.2515,  0.3704,  0.3427,  0.5692,
         0.2352,  0.0825, -0.1485,  0.4541,  0.1731, -0.1948,  0.7896,  0.2470,
         0.7016,  0.4601,  0.2071,  0.3942, -0.2825, -0.0030,  0.5433, -0.1816,
         0.5665, -0.0980, -0.0653, -0.0103, -0.0145,  0.3000,  0.6376,  0.1433,
         0.4658,  0.3247,  0.0492,  0.0880,  0.4319,  0.3172,  0.5546,  0.0129,
        -0.0039, -0.1204, -0.0511, -0.0631,  0.6836,  0.4871,  0.4973,  0.9103,
        -0.0727, -0.0666, -0.0587, -0.1214,  0.2850,  0.1742, -0.3227,  0.4247,
         0.5794,  0.1800, -0.1112,  0.9611,  0.3065, -0.0838, -0.2886,  0.7310,
         0.4953,  0.0288,  0.3561,  0.3442,  0.2088,  0.5802,  0.2252,  0.2611,
         0.0919,  0.3477,  0.1043,  0.3898,  0.2825, -0.6210,  0.8348,  0.2929,
         1.0872,  0.1137,  0.5438,  0.2559, -0.0082,  0.3454,  0.3863,  0.3042,
        -0.0305,  0.3605,  0.5190, -0.5346,  0.2127,  0.5075, -0.1719,  0.0090,
        -0.0155,  0.4454,  0.0207,  0.2007,  0.1139,  0.1239,  0.1029, -0.1123,
        -0.1369,  0.3096,  0.3304,  0.0951, -0.3772,  0.4142,  0.3700,  0.1851],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:34,981 - myNeural - INFO - Forward Pass: tensor([-0.3676,  0.4001,  0.1257,  ...,  0.2264, -0.3532,  0.2204])
2021-05-25 09:10:34,995 - myNeural - INFO - Forward Pass: tensor([ 6.7593e-01,  1.7491e-01,  3.8508e-01,  2.0853e-01,  2.1117e-02,
         7.5084e-04,  2.5336e-02, -2.7986e-01,  2.6607e-01,  4.6962e-01,
        -3.3312e-01, -7.1435e-01, -3.1243e-01,  3.3850e-01, -2.0133e-01,
         5.1724e-01, -1.0481e-01, -4.4028e-01,  4.0100e-01, -1.8292e-01,
         1.1822e-02, -3.8021e-01, -1.4014e-01, -2.0934e-01,  3.6070e-01,
         1.6214e-01, -2.9794e-02, -8.2415e-02, -6.9559e-01,  2.3449e-01,
         4.9535e-02,  3.2752e-01, -4.8546e-01, -2.6946e-01,  3.2164e-01,
        -1.1554e-01, -3.4864e-01, -2.4252e-01, -7.0551e-02,  2.5900e-01,
        -4.6679e-01, -1.1949e-01,  6.0918e-01, -6.3173e-02,  3.0749e-01,
         7.3198e-02,  5.8750e-01, -2.6584e-01,  4.3362e-01,  4.9694e-01,
         1.5396e-01,  2.8097e-01, -5.6623e-01,  8.1299e-02, -1.0749e-01,
         2.1529e-02,  1.8165e-01, -2.1619e-01, -5.5428e-01,  2.0444e-01,
         2.1697e-01,  2.5404e-01,  9.7843e-02,  2.5312e-01,  4.9488e-04,
         3.8822e-01, -2.3974e-01,  1.0845e+00,  1.5252e-01,  4.6046e-01,
        -2.5839e-01,  3.5100e-01,  1.2299e-01,  1.1916e-01,  8.7285e-02,
         4.4514e-01,  4.1789e-01,  3.4892e-01,  4.7962e-01, -1.8742e-01,
        -3.8867e-01, -3.3032e-01,  5.6489e-01,  1.4623e-01,  1.0780e-01,
        -9.4714e-02, -1.8564e-02,  6.4146e-01,  2.1791e-01,  5.3352e-02,
         6.6570e-01, -2.0027e-01,  2.6367e-01,  3.0747e-01, -4.0770e-01,
         2.2622e-01, -1.1540e-01,  1.5820e-01, -5.7130e-01, -6.6822e-01,
        -7.1633e-02,  1.1843e-01,  7.0081e-02,  5.1118e-01,  3.5595e-01,
         4.8470e-02, -1.6951e-01, -3.8847e-02,  2.4399e-01,  2.5244e-01,
         2.0554e-01, -4.7515e-01,  5.8373e-02,  1.5462e-02, -5.1058e-01,
         2.0963e-01, -1.2370e-01, -2.4541e-01,  5.2064e-01,  2.3856e-01,
         4.9415e-01,  1.6151e-01, -1.2141e-01,  2.0791e-01,  4.5258e-01,
        -8.7557e-02,  2.2195e-01,  2.3192e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,009 - myNeural - INFO - Forward Pass: tensor([-0.3192,  0.4789,  0.2177,  ...,  0.3308, -0.3073,  0.2909])
2021-05-25 09:10:35,023 - myNeural - INFO - Forward Pass: tensor([ 4.1064e-01,  1.8191e-01,  5.9220e-01,  6.0882e-01,  4.5712e-01,
         5.7106e-01, -7.1412e-02,  3.0345e-01, -1.2167e-01,  2.2725e-02,
         4.9920e-01, -2.0282e-01, -1.5562e-01, -3.4013e-01, -9.0515e-02,
         2.0533e-01,  1.7005e-01, -6.0182e-01,  6.3469e-01,  2.0156e-01,
         3.6337e-01,  2.6406e-01,  4.9977e-01, -2.8405e-02,  4.3638e-01,
         6.0328e-04,  4.7297e-01, -3.5084e-01, -1.3369e-01, -9.0818e-02,
         3.4681e-01,  3.7592e-01,  5.3181e-01,  1.1676e-01,  3.4107e-01,
         3.5197e-01,  5.7660e-01,  5.7320e-01,  3.8059e-01,  5.6319e-01,
        -5.6703e-01,  1.6901e-01,  4.5624e-01,  6.4736e-02,  1.6564e-01,
         6.8800e-01,  8.2696e-01, -4.1557e-01,  6.6267e-01,  2.4420e-01,
         1.8106e-01, -3.2057e-01,  6.2275e-03, -2.9873e-01, -4.5243e-01,
         2.0096e-01,  3.5066e-03,  1.8314e-02,  6.0249e-01,  4.5073e-01,
         3.9024e-01,  5.8576e-01,  4.8564e-01,  2.2176e-01, -1.6148e-01,
         3.7442e-01,  2.4594e-01,  5.4853e-01,  1.0327e+00,  8.5901e-01,
         5.8113e-01, -1.2064e-01,  5.1278e-01,  1.4564e-01,  3.1847e-01,
         2.0696e-01,  5.1161e-01, -3.4628e-01,  7.2462e-01,  9.0710e-02,
        -1.2152e-01,  3.6417e-01, -1.9911e-01,  5.1263e-01, -3.0803e-01,
         5.3309e-01,  4.6733e-02, -1.8155e-01,  1.6146e-01, -6.5498e-01,
         5.9695e-01, -7.6297e-04, -3.7835e-01,  5.6693e-02,  1.3225e-01,
         3.0202e-01,  5.3120e-01,  4.5057e-01,  2.0816e-01,  2.5422e-01,
         1.1541e-01,  5.2543e-01,  6.1718e-04, -1.5314e-01, -2.9613e-01,
         4.6629e-01,  2.7712e-01, -5.3542e-01,  2.1173e-01, -9.4770e-02,
         1.8851e-01,  9.0984e-02, -1.0537e-01,  2.8768e-01, -1.2600e-01,
         1.0665e-01,  1.8757e-01,  5.6627e-02, -5.6600e-01,  2.7778e-01,
         4.5712e-01,  3.7329e-01,  3.9137e-01,  3.3297e-01,  5.4449e-02,
        -6.5012e-01,  4.3533e-01, -1.7079e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,037 - myNeural - INFO - Forward Pass: tensor([-0.2481,  0.5756,  0.3257,  ...,  0.4190, -0.2196,  0.4388])
2021-05-25 09:10:35,051 - myNeural - INFO - Forward Pass: tensor([ 0.9108,  0.8090,  0.4107,  0.5204, -0.2204,  0.4054,  0.0456,  0.7261,
         0.0232,  0.6747,  0.1551,  0.5590,  0.1156,  0.7821,  0.2696, -0.1245,
         0.6717, -0.1268,  0.9523,  0.2192, -0.4337,  0.6069,  0.5077,  0.6393,
         0.1460, -0.1295,  0.9504,  0.2804,  0.4485, -0.0422,  0.6437,  0.1022,
         1.0359,  0.6567, -0.1393, -0.1196, -0.0625,  0.0250, -0.0026,  0.5245,
        -0.0394, -0.1792, -0.5026,  0.8269,  0.2556, -0.2587,  0.7029,  0.1024,
        -0.1163,  0.2416,  0.2226,  1.3330, -0.3097,  0.4936,  0.2811,  0.1412,
         0.0902,  0.6431,  0.2791,  0.3547, -0.1097, -0.1198, -0.5028,  0.1658,
         0.2667,  0.6982,  0.3179,  0.4947,  0.6170,  0.4123,  0.2224, -0.0724,
         0.1523, -0.2980,  0.3832,  0.6611,  0.4539, -0.3811,  0.3961,  0.3247,
        -0.2711,  0.0701,  0.3483,  0.7924, -0.1690,  0.2401,  0.4994,  0.5458,
         0.9556,  0.4003,  0.3763,  0.5949,  0.8444, -0.4964,  0.1475,  0.8731,
         0.7689,  0.1024,  0.5052, -0.0387, -0.2046,  0.5218,  0.8937, -0.1999,
         0.3721,  0.0045, -0.1588,  0.1993, -0.3603,  0.2606, -0.2008,  0.5221,
        -0.0585,  0.5324,  0.0107,  0.7878, -0.0043,  0.7975, -0.5670,  0.5094,
        -0.3214,  0.0223,  0.3013,  0.4063, -0.4432,  0.0493,  0.2841,  0.3201],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,066 - myNeural - INFO - Forward Pass: tensor([-0.4829,  0.4102,  0.1819,  ...,  0.3285, -0.3877,  0.2882])
2021-05-25 09:10:35,080 - myNeural - INFO - Forward Pass: tensor([-1.4306e-01, -5.7436e-01,  3.2176e-01,  6.0673e-01, -1.1545e-01,
         7.9744e-01, -3.6174e-02, -1.2815e-01, -5.8555e-01, -4.6902e-01,
        -1.3896e-01,  3.2497e-01, -3.8455e-01, -2.0576e-01, -3.8860e-01,
         1.7128e-01, -1.5322e-01,  5.5073e-01,  8.4764e-01,  1.3411e-01,
         1.0010e+00, -3.1687e-01, -1.7990e-01,  8.2161e-01, -1.4960e-01,
         3.1874e-01, -5.2499e-02, -4.0670e-02,  2.6320e-01,  3.9712e-02,
        -4.0107e-01, -5.0543e-01,  2.6652e-01,  2.4635e-01,  3.7664e-01,
         4.0335e-01,  3.3616e-01,  5.7530e-01, -4.4850e-01,  1.8246e-01,
         4.5827e-01, -6.8103e-01,  4.5795e-02,  9.8015e-01, -6.8773e-01,
        -1.5950e-01,  4.1816e-02, -9.0244e-01, -3.2222e-02, -5.6490e-02,
         4.9861e-01, -1.5205e-01,  8.8437e-01,  6.2816e-03, -6.9142e-03,
         1.5937e-01,  3.4554e-01, -1.1526e-01,  2.3020e-01,  5.2088e-01,
        -6.8506e-01,  3.9251e-01, -7.5059e-02, -1.4527e-01, -4.0620e-01,
        -2.3196e-01, -2.1531e-02, -2.1978e-01,  9.0951e-02,  1.1696e-01,
        -2.5055e-01, -1.8961e-01, -2.4511e-01, -4.7182e-02, -1.1865e-01,
         4.9477e-01, -1.2685e-01,  4.1827e-01,  3.5159e-02,  3.0683e-01,
        -6.4312e-01,  7.5598e-01,  4.1849e-01, -5.9705e-01,  8.8909e-02,
         2.2014e-01,  9.2593e-01,  1.6798e-01,  3.5787e-01, -1.3216e-01,
        -5.6784e-01, -1.5103e-01,  6.0504e-01, -2.0913e-02, -4.0803e-01,
         3.2888e-01,  5.2326e-02, -1.1019e-01,  1.0186e+00, -2.0795e-01,
         1.4672e-01,  5.9660e-01, -1.4771e-01,  7.1386e-01,  4.6337e-01,
         1.5818e-01,  5.1538e-01,  4.9403e-01, -6.3758e-01,  9.5347e-01,
         3.1693e-01,  6.9173e-01, -2.7009e-01,  8.8323e-01,  8.3415e-01,
         8.8264e-02, -1.8367e-01,  4.8473e-03, -3.5954e-04, -9.0043e-02,
        -7.7846e-01, -5.5470e-01, -9.6027e-02,  6.9855e-01,  3.2001e-03,
         4.6220e-01,  2.0301e-01, -5.1267e-02], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,094 - myNeural - INFO - Forward Pass: tensor([-0.6506,  0.3570,  0.0410,  ...,  0.2592, -0.4805,  0.1673])
2021-05-25 09:10:35,109 - myNeural - INFO - Forward Pass: tensor([ 8.4376e-01,  7.8216e-01, -8.3238e-01,  1.1337e-01,  3.6032e-01,
        -3.1338e-01, -7.9349e-01, -3.7362e-01,  7.2811e-01, -1.1078e-01,
         9.0271e-02,  2.7724e-01,  2.0978e-01, -9.8521e-02,  3.2966e-01,
        -4.6902e-01,  1.4360e-01, -4.3203e-01,  3.2729e-01,  6.2180e-01,
         2.0590e-01,  6.9606e-01, -7.7818e-02, -8.0816e-01,  8.0585e-02,
         3.4340e-01, -9.4459e-02,  3.2193e-01,  4.9158e-04, -2.7598e-01,
         5.3297e-01,  8.6519e-01,  5.5012e-01,  1.7332e-01,  5.5514e-01,
        -1.4771e-01, -6.2314e-02, -2.3931e-01,  2.6128e-01, -2.2017e-01,
         2.5371e-01, -4.1834e-01, -2.5164e-01, -9.9147e-02,  5.0053e-01,
        -3.1861e-01, -2.4921e-01, -2.1908e-01, -7.6713e-01,  2.2563e-01,
        -1.9183e-02, -5.4658e-01, -2.8498e-02, -7.6675e-01,  4.4862e-01,
         1.1133e-01, -3.9820e-01, -1.9445e-01,  2.1085e-02,  5.2508e-01,
         3.6470e-01, -2.7700e-01,  2.2076e-01, -1.6663e-01, -1.1265e-01,
         9.2797e-01,  7.3501e-02,  7.3028e-01,  4.2985e-01,  9.2647e-01,
        -5.6101e-01, -7.7929e-01, -9.9744e-02, -2.2367e-03,  3.3821e-01,
         1.8462e-01, -4.5572e-01, -2.4122e-01, -3.7572e-01,  5.1041e-01,
        -2.4054e-01,  4.9424e-01, -4.5579e-01, -2.8644e-01,  3.1844e-02,
         3.3772e-01, -8.2539e-02, -1.1694e-01, -2.3856e-01, -1.1964e-01,
        -3.8162e-01, -6.8337e-01, -5.5189e-01, -5.1876e-01,  3.6461e-02,
         7.3970e-01,  1.1780e-01,  1.1081e-01,  3.9947e-01,  8.2418e-01,
         1.1197e-01,  3.2617e-01, -1.9006e-01,  5.4933e-01,  5.2920e-01,
         3.9074e-01,  5.3918e-01,  5.1564e-01, -5.0524e-01,  1.8366e-01,
         3.2953e-01,  2.4466e-01, -1.4700e-01,  3.2966e-01, -2.1086e-01,
         6.5222e-01, -4.0911e-01,  5.3103e-01,  7.1289e-01, -2.6337e-01,
        -1.2031e-01, -7.9030e-01,  3.7132e-02, -5.5664e-01,  3.2050e-01,
        -9.5937e-02, -6.5885e-01, -3.4137e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,124 - myNeural - INFO - Forward Pass: tensor([-0.4614,  0.5626,  0.2616,  ...,  0.5229, -0.2696,  0.3855])
2021-05-25 09:10:35,139 - myNeural - INFO - Forward Pass: tensor([ 0.8590,  0.4818,  0.9340,  0.2107, -0.4433, -0.2621, -0.2204,  0.0088,
         1.0080, -0.5881, -0.2060, -0.2237,  0.8662,  0.4171, -0.0058,  0.4004,
        -0.5281,  0.0876,  0.0957,  0.1011, -0.0360, -0.4041,  0.5203,  0.2691,
         0.3881,  0.4247,  0.0838,  0.1455,  0.2020,  0.8551,  0.3795,  0.3674,
        -0.5072,  0.3317,  0.3772,  0.0367,  0.8953, -0.3399,  0.0997,  0.9704,
        -0.4033,  0.5922, -0.2462, -0.4398, -0.0558, -0.2020, -0.0564,  0.1960,
         0.4858, -0.0685,  0.5262,  0.2013, -0.4049, -1.3399,  0.1356, -0.2100,
         0.5597,  1.0491,  0.7912,  0.4591,  0.4438,  0.1744,  0.3456, -0.2275,
         0.4669, -0.9360,  0.2547, -0.0930,  0.3488,  0.3494,  0.0284, -0.0297,
        -0.3705,  0.3831, -0.1006,  1.4873, -0.0344,  0.3692, -0.5033,  0.7454,
         0.4919,  0.1384,  0.2473, -0.1159,  0.0910,  0.0779, -0.3284, -0.0366,
         0.2428,  0.1366,  0.5047,  0.1216,  1.2761,  0.1236,  0.0752,  0.2191,
        -0.6757,  0.4644,  0.3888, -0.0813, -0.1546,  0.8087,  0.1689,  0.5938,
         1.2025,  0.4442, -0.3919,  0.3603, -0.4767,  0.1500,  0.4542,  0.2960,
         0.6928,  0.0859,  0.7363, -0.3437,  0.5213,  0.0217, -0.0932,  0.8417,
         0.4780, -0.9645,  0.3047,  0.3564,  0.0605,  0.5651, -0.6112,  0.7170],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,155 - myNeural - INFO - Forward Pass: tensor([-0.7510,  0.4239,  0.0553,  ...,  0.4243, -0.4621,  0.2135])
2021-05-25 09:10:35,175 - myNeural - INFO - Forward Pass: tensor([-0.3113,  0.0876,  0.5987,  0.4017, -0.3599,  0.6637, -0.3308, -0.5181,
         0.3423,  0.4705, -0.5571, -0.3043,  0.3592,  0.6744, -0.0858,  0.0845,
         0.2420,  0.0508,  0.0029,  0.1794, -0.2047,  0.6611, -0.3380,  0.2716,
         0.0183, -0.4765,  0.0356,  0.2218, -0.7089, -0.8278, -0.3728, -0.1966,
        -0.6235, -0.7753,  0.8246,  0.3842,  0.4327,  0.0667, -0.2041, -0.3223,
        -0.0361, -0.2144, -0.2479, -0.3531,  0.2973, -0.0986,  0.4711, -0.1119,
         0.2273, -0.1739, -0.2016, -0.1924, -0.3057,  0.5584,  0.0669,  0.0572,
         0.5334, -0.4201,  0.0969, -0.3735, -0.6566,  0.5701, -0.3160,  0.0621,
        -0.2401,  0.3698, -0.1060,  0.1534, -0.4517, -0.1469, -0.0409, -0.8008,
         0.4228, -0.7309, -0.6037,  0.3155,  0.5083,  0.7847, -0.5156, -0.0700,
        -0.1320,  0.7241,  0.0459, -0.2421,  0.0163,  0.7520,  0.7347,  0.0331,
        -0.4137, -0.0533,  0.2945,  0.1793, -0.3283, -0.0156,  0.6742,  0.5310,
         0.0343, -0.4579, -0.8984, -0.6902, -0.3354, -0.2997,  0.6179, -0.1712,
         0.0363, -0.6927,  0.8094, -0.0881,  0.5498, -0.8979, -0.4737, -0.2240,
        -0.3610, -0.0189, -0.3345, -0.1643,  0.1657, -0.3258, -0.0350,  0.8418,
        -0.0389,  0.5025, -0.2020,  0.3807, -0.0716,  0.0321,  0.1046, -0.5885],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,193 - myNeural - INFO - Forward Pass: tensor([-1.0532,  0.1868, -0.2278,  ...,  0.2356, -0.7286,  0.0112])
2021-05-25 09:10:35,213 - myNeural - INFO - Forward Pass: tensor([ 8.4262e-01,  6.0748e-02, -9.4278e-02,  4.8166e-01,  2.7400e-01,
        -2.2255e-01, -1.0203e+00, -4.4287e-01, -6.5241e-02, -4.4890e-01,
        -4.7621e-01,  5.4128e-01,  4.5791e-01,  9.2155e-02,  5.0619e-01,
        -1.4632e-01, -4.4994e-01, -1.0958e+00, -2.5947e-01, -6.6638e-01,
         7.0228e-01, -5.1199e-01, -7.5152e-01, -4.4562e-03,  5.2244e-03,
        -4.9267e-01, -2.9410e-01, -2.8754e-01,  1.1732e-01, -6.0754e-01,
        -1.8254e-01,  4.0945e-01, -6.3598e-01,  2.6296e-01, -1.3220e+00,
        -6.0852e-02, -5.5553e-01, -6.0815e-01,  7.1815e-01,  1.4671e-01,
        -2.7296e-01, -8.1047e-01,  2.7486e-01, -7.6151e-01, -3.5953e-01,
         7.8799e-02,  2.8011e-01,  4.8572e-01, -4.3678e-02, -1.7597e-01,
        -3.3544e-01,  3.8971e-01,  2.7925e-01, -4.7460e-01,  4.0922e-01,
        -4.3069e-01, -1.0031e+00,  4.1442e-01, -3.3598e-02,  2.2548e-01,
         8.5041e-02, -5.5478e-01, -9.1741e-04,  2.7478e-01, -3.9643e-01,
        -7.7407e-01,  4.3419e-01, -4.7391e-01,  2.2680e-02, -7.4860e-01,
         3.2495e-01,  5.7980e-01, -9.5043e-01,  8.3551e-01, -7.2160e-01,
        -4.3177e-01,  3.3745e-01, -3.9814e-01,  1.5384e-01,  2.5767e-01,
         6.4919e-01, -8.5676e-01, -1.9035e-01, -7.8519e-01, -1.1097e+00,
        -7.4482e-01,  6.5877e-02,  5.5042e-01, -8.2058e-01,  2.2114e-01,
        -3.1827e-01,  4.2280e-01,  5.6046e-02,  3.3672e-01, -2.7658e-01,
        -4.5026e-01, -9.5976e-01, -1.0201e-01, -6.5162e-01, -2.5459e-02,
        -5.1202e-01, -2.2517e-01, -3.0128e-01, -2.5096e-01, -8.9580e-02,
        -3.9910e-02,  3.7681e-02, -3.0077e-01, -4.6083e-01, -7.6717e-01,
        -4.7102e-01, -1.2016e-01,  6.7645e-02,  8.1572e-02, -9.7016e-01,
        -2.4102e-02, -1.7151e-01, -2.7246e-01,  3.2390e-01, -3.3168e-01,
         6.4766e-02,  4.9624e-01,  1.1160e+00, -8.5868e-01, -1.9979e-01,
        -2.7795e-01, -5.5742e-01, -1.4386e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,229 - myNeural - INFO - Forward Pass: tensor([-0.9733,  0.3223, -0.0656,  ...,  0.3976, -0.6747,  0.0763])
2021-05-25 09:10:35,246 - myNeural - INFO - Forward Pass: tensor([-0.1852,  0.8178,  0.1032,  0.0494, -0.3905,  0.2446,  0.3390, -0.4141,
         0.1175,  0.1572,  0.3955,  0.0394, -0.5079,  0.1182, -0.2086, -0.5097,
         0.6217, -0.3343, -0.9426, -0.0094, -0.2004, -0.5008, -0.8085,  0.1678,
        -0.1817, -0.8284,  0.2917, -0.0756, -0.1028, -0.7877, -0.4532, -0.0252,
        -0.0091,  0.4206, -0.2755, -0.4494,  0.4056,  0.0783, -0.5447,  0.2282,
        -0.2815,  0.1142,  0.7240, -0.1044, -0.6025,  0.3573,  0.6127, -0.0107,
         0.0339,  0.2260,  0.0885, -0.7296,  0.1101,  0.1790, -0.1737, -0.0678,
         0.5234,  0.2198, -0.4505, -0.6933, -0.6868,  0.7798,  0.1134, -0.0905,
         0.2339, -0.3050, -0.4536, -0.2323,  0.2169, -0.4054,  0.0909,  0.4951,
        -0.7444, -1.1352, -0.0895, -1.1829, -0.2030,  0.8099, -0.0287, -0.5635,
        -0.3338, -0.2600, -0.0248,  0.1400, -0.3188, -0.3058, -0.5326,  0.2732,
         0.7212, -0.0942, -1.0612, -0.1877, -0.0278,  0.8488,  0.8352, -0.2222,
        -0.5558, -0.6546, -0.0508,  0.0096, -0.9756, -0.1906, -0.1016, -0.4181,
        -0.4690, -1.1310, -0.2463,  0.1384, -0.3196, -0.3031, -0.2990,  0.6205,
         0.6342,  0.0102,  0.3720, -1.2308, -0.0439,  0.4891,  0.2372, -0.8866,
        -0.4252,  0.5941,  0.4951,  0.9198, -0.7085,  0.3996,  0.3690,  0.3700],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,263 - myNeural - INFO - Forward Pass: tensor([-0.7739,  0.5941,  0.2088,  ...,  0.7214, -0.4265,  0.3223])
2021-05-25 09:10:35,284 - myNeural - INFO - Forward Pass: tensor([-0.4213,  0.7568,  0.6293,  0.6126,  0.1820,  0.7624,  0.6226,  0.7037,
         0.1343, -0.4971,  0.0470, -0.1852, -0.7293, -0.5327,  0.3182,  0.7122,
         0.7578, -0.6353,  0.2214,  0.5071, -0.3989, -0.2404,  0.5562,  0.3063,
         0.0553,  0.3758,  0.8745,  0.4254,  1.0534,  0.5383,  0.7994, -0.5621,
        -0.5765,  0.7318,  0.9736, -0.6930, -0.1406,  0.8378, -0.2914,  0.2567,
        -0.1610, -0.7115,  0.6508,  0.2533,  0.8354,  0.7176, -0.0179,  0.2638,
        -0.4411,  0.8046,  0.4866, -0.2398,  0.4884,  0.4080,  0.7975, -0.1508,
         0.8653, -0.2858, -0.6240,  0.2750, -0.3494, -0.3678,  0.0763,  0.8319,
        -0.0349,  0.6415,  0.5358, -0.5835,  0.2337, -0.4098,  0.7022,  0.0443,
         0.4910, -0.9958, -0.3370,  0.4517, -1.3694,  0.3999,  0.0817, -0.5671,
        -0.3011,  0.1660,  0.2024,  0.5009,  1.2088, -0.2638,  0.1255, -0.0463,
        -0.3880,  0.9224, -0.0890,  0.5233, -0.1765, -0.0931, -0.4158,  0.2939,
         0.4901,  0.5291, -0.4097,  0.5778,  0.7102,  0.0687,  1.2291,  1.0016,
        -0.7055, -0.0952, -0.4686,  0.5407,  0.7558,  0.0460,  0.2347,  0.0081,
         1.1288, -1.7889, -0.7146,  0.5817, -0.6490, -0.3833,  0.2470, -0.2253,
        -0.7371, -0.1267,  0.4317, -0.1993,  0.0232, -1.5051,  0.4706,  0.2225],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,300 - myNeural - INFO - Forward Pass: tensor([-0.8624,  0.5571,  0.1536,  ...,  0.6911, -0.5100,  0.3070])
2021-05-25 09:10:35,316 - myNeural - INFO - Forward Pass: tensor([ 0.1045, -0.4707,  0.1615,  1.4040, -0.3298,  0.0230, -0.5708, -0.2261,
        -0.6515, -0.1146, -0.3904,  0.3106,  0.4172, -0.0385,  1.0126,  0.7931,
        -0.5597,  0.2557,  0.1271, -0.1699,  0.2213, -0.3980,  0.3815,  0.0541,
        -0.2471, -0.1300, -0.9762,  0.5136,  0.1216, -0.4249, -0.0428,  0.4763,
         0.3881,  0.8206, -0.0783,  1.7097,  0.3120, -0.1512,  0.0163,  0.0143,
         0.5926, -0.1209,  0.9292,  0.0421,  0.5859,  0.2390, -0.7738, -0.4678,
         0.4460,  0.4768, -0.2777,  0.2553,  0.4358,  0.1408,  0.2848,  0.1211,
         0.0122,  0.2529, -0.3861, -0.4346, -0.3033,  0.2531,  0.1164, -0.3606,
        -0.0235, -0.2802, -0.1090,  0.1799, -0.4030, -0.9870, -0.8070, -0.3609,
         0.0794, -0.0571,  0.2727, -0.4445, -0.2622,  0.2536, -0.0374, -1.0082,
        -0.6334, -0.5583,  0.3521, -0.7114,  0.1652, -1.4272,  0.1086, -0.4458,
         0.3374,  0.2227,  0.1343, -0.5490,  0.6026, -0.0744,  0.4756, -0.4347,
        -0.6046,  1.0325, -0.4245, -0.7171,  0.5457, -0.0260, -0.1915, -0.4046,
         0.8987,  0.0109, -0.6775,  1.0040, -0.4514,  1.1160, -0.2164, -0.4749,
        -0.2924,  0.2470,  0.5138,  0.4682,  0.0839,  0.2834,  0.0750,  0.1319,
         0.4876, -0.0655,  0.3453, -0.1107, -0.8378,  0.1528,  0.4567, -0.2192],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,332 - myNeural - INFO - Forward Pass: tensor([-1.0477,  0.4548,  0.0058,  ...,  0.5903, -0.5946,  0.2097])
2021-05-25 09:10:35,347 - myNeural - INFO - Forward Pass: tensor([ 0.3777, -0.1468,  0.3061, -0.3727,  0.5193, -0.4063,  0.8258,  0.4857,
         0.0945,  0.5511,  0.8443, -0.8739, -0.4268,  0.2919,  0.2740, -0.0499,
        -0.1281, -0.6741, -0.6988, -0.3004,  0.3166,  0.2240,  0.1151, -0.4423,
        -0.3039, -1.1510,  0.7381, -0.6843, -1.2793,  0.3892,  0.6245,  0.2721,
         0.6236, -0.1917, -0.5088,  0.2011, -0.0200,  0.6591, -0.9586,  0.0432,
        -0.4058, -0.9358,  0.7662,  0.0747,  0.0886,  0.5301, -0.3952, -0.6437,
         0.0243, -1.1470, -0.1781, -0.9066,  0.8898, -0.5528,  0.6590, -0.6153,
         1.0444,  0.1540, -0.4741, -0.5736,  0.6256, -0.2323, -0.7468, -0.6169,
        -0.0850,  0.4680, -0.8920, -0.1833,  0.3223, -1.3487, -0.3363,  0.9449,
        -0.1774,  0.1734, -0.1953, -0.6426,  0.5031, -0.0036, -0.5388, -1.1589,
        -0.7310,  0.7732,  0.1439,  0.1481,  0.3452, -1.3473,  0.0420,  0.4039,
         0.4909,  0.6619,  0.0098, -0.3035, -0.7484, -0.5169, -0.9632, -0.3436,
         0.4048, -0.8895, -0.3171,  0.0845,  0.4804,  0.4550, -1.0790, -0.1406,
        -0.0935,  0.1274, -0.3297,  0.4531, -1.1344,  0.1618,  0.7695, -0.2593,
         0.6441, -0.5673, -0.2957, -0.3409,  1.0153, -0.8189,  0.0132,  0.3535,
        -1.2314, -0.1504,  1.1188, -0.7328,  0.0378, -0.0493, -0.1417, -0.5432],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,364 - myNeural - INFO - Forward Pass: tensor([-0.8156,  0.7180,  0.3067,  ...,  0.8754, -0.3549,  0.4841])
2021-05-25 09:10:35,380 - myNeural - INFO - Forward Pass: tensor([-1.1301,  0.9825,  0.8054,  1.1905,  0.7649,  0.8149,  0.3794,  0.1416,
        -0.4256, -0.0620,  1.0097,  0.9711,  0.3615, -0.3088, -0.1848,  0.0406,
        -0.4641,  0.6042, -0.1603, -0.0158,  0.4184,  1.9249,  0.6977, -0.2378,
        -0.2619,  0.4179,  1.9097,  0.5194,  0.1028,  0.4165,  0.4905, -0.6836,
         0.2512,  0.6267,  1.0215,  0.6788,  0.1414,  1.1648, -0.6824,  0.1823,
         0.9982, -0.7307,  1.7045,  0.0639,  1.6546, -0.5025, -0.5582, -0.3995,
        -0.5368,  0.7906, -0.0127, -0.3817,  1.4507, -0.7514,  0.9744, -0.1108,
         0.2135, -0.0875, -0.0400,  0.2484,  0.2641,  0.1496, -0.5644,  0.9445,
         1.0707,  0.5212,  0.7977,  1.1483, -0.1339,  0.7910,  0.4476,  1.1819,
         0.0719,  0.9563,  0.0665,  0.9092, -0.5349, -0.7588, -1.0415, -0.0910,
         0.8564,  0.5725,  0.2675,  0.1759,  0.5243, -0.3919,  0.5057,  0.3390,
         1.7242,  0.6490,  0.1163, -0.2644,  1.4099,  0.5614,  0.6426,  0.4334,
         0.8844, -0.0352,  0.0460, -0.6927, -0.8647,  0.9034,  1.1297,  0.0375,
        -0.5310,  0.1667, -0.4041, -0.7194, -0.8322,  0.4468,  1.1608,  0.2014,
         0.8995,  0.6653,  0.6786, -0.3952, -0.4546,  0.3303, -0.2199,  1.4451,
        -0.0829, -0.0674, -0.2143, -1.0166,  0.6539, -0.5211,  1.1523, -0.2357],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,395 - myNeural - INFO - Forward Pass: tensor([-1.3326,  0.3550, -0.0940,  ...,  0.4721, -0.8172,  0.1154])
2021-05-25 09:10:35,410 - myNeural - INFO - Forward Pass: tensor([ 0.7793, -0.8671, -0.8658,  0.7886,  0.7632, -1.1918, -0.6233,  0.6066,
        -0.7078, -1.2635, -1.4571, -0.4806,  0.8295,  0.2390,  0.4635, -1.1497,
        -0.8500, -0.1660,  0.6409, -0.4601, -0.3500,  0.0777, -0.7366, -0.5387,
        -1.0765, -1.2113, -0.7995,  0.1323, -0.1848,  0.3468, -1.7261, -0.8893,
         1.3754,  0.0926,  0.5729,  0.3876, -1.0201, -0.6163, -0.6237,  0.6311,
        -0.3873,  0.5928, -0.7426,  0.3074, -0.9792, -1.5277,  1.0223, -0.0465,
         0.9989, -0.1449, -0.3624, -1.2752, -1.0870,  0.5070, -0.7265, -0.8207,
         0.1732, -0.5638,  0.8307,  0.4741, -0.1281,  0.2029, -1.8533, -0.9514,
         1.4169,  0.3823,  0.3882, -0.2485,  0.2509,  0.0079, -1.7032,  0.3628,
         0.5763, -0.6006,  0.5031, -1.2268,  0.6470, -0.4284,  0.1797, -1.3456,
         0.4085, -1.2181, -0.4596, -0.7218, -0.0879, -0.6539,  0.3445, -0.1741,
        -0.6458,  0.0063,  0.5820,  0.0998, -0.4358, -0.5426,  0.3960,  0.4890,
        -0.1479,  0.2330, -0.3539, -0.5438,  0.3908,  0.3478,  0.1501,  0.9822,
        -0.9809, -0.7178, -1.1423,  0.2093, -1.4875,  0.2114,  0.2833, -0.0020,
        -0.4760,  0.1139,  0.3129, -0.9139,  0.1838,  0.4325,  0.5089,  0.7905,
        -1.3671, -0.3224,  0.0124,  0.4556, -0.2558, -1.1313,  0.8324, -0.5894],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,426 - myNeural - INFO - Forward Pass: tensor([-0.9184,  0.7393,  0.4064,  ...,  0.9323, -0.3631,  0.5706])
2021-05-25 09:10:35,439 - myNeural - INFO - Batch 40 -- TrainLoss: 0.53829 -- TrainAcc: 79.68750% -- TestAcc: 76.20000%
2021-05-25 09:10:35,442 - myNeural - INFO - Forward Pass: tensor([-8.0633e-01,  4.4479e-01, -1.9785e-01,  9.6702e-01,  2.3685e-01,
        -5.2402e-01, -1.1575e-01,  3.4411e-01,  1.2121e+00,  4.3586e-01,
        -1.1492e+00, -2.7833e-01, -3.4924e-01, -1.8629e-01, -9.3036e-01,
         9.4069e-01, -4.2065e-01,  8.5188e-01,  1.5594e+00,  5.7097e-01,
        -8.7330e-01,  1.4607e+00,  1.3863e+00,  1.6427e+00,  9.9144e-02,
        -4.0831e-02,  1.1648e-01,  5.7057e-02,  1.2325e-01,  5.8785e-01,
        -8.7298e-01,  9.6678e-01,  6.4048e-01,  1.3338e-01, -1.0153e+00,
        -5.4561e-01,  1.0157e-01,  7.0758e-01, -6.8008e-02,  1.1652e+00,
        -1.9402e-01,  6.2274e-01,  3.0092e-01,  6.2050e-01,  1.8976e+00,
        -7.4624e-01, -2.6228e-01,  6.8763e-01,  6.7505e-02, -4.0733e-01,
         1.3523e+00,  1.5211e+00, -1.8539e-01,  1.0409e+00,  1.0005e+00,
        -3.0257e-01, -3.4101e-01, -8.0604e-01, -1.2354e+00, -6.3052e-01,
         3.4105e-01,  5.7784e-01,  5.0343e-01, -6.1035e-01,  3.1821e-01,
        -1.4531e+00,  9.6991e-01, -7.1550e-03,  3.1625e-01, -8.1415e-01,
         1.1002e+00,  1.7167e+00, -4.2939e-02,  1.9407e+00,  2.6764e-02,
        -8.9099e-01, -8.6349e-01, -7.0358e-01,  1.9142e-01,  2.9120e-01,
         8.0702e-01, -6.7651e-05, -8.8602e-01,  7.7409e-01,  5.7623e-01,
         1.9254e-01,  5.8455e-01,  4.4487e-01,  3.4125e-01,  9.9951e-02,
         1.3312e-01, -8.3825e-01, -1.8852e-01,  9.4643e-01,  4.8385e-02,
        -2.4076e-01, -5.4544e-01, -9.5967e-02,  6.5263e-01,  1.0220e+00,
        -4.3543e-01,  4.4440e-01,  2.2050e+00,  1.4798e-01, -1.3390e-01,
        -7.7778e-01,  7.7348e-01,  1.1349e+00,  7.1958e-01,  9.0393e-01,
         2.1702e-01,  6.3537e-01,  5.6072e-01,  1.5490e+00,  2.1565e-01,
         6.2716e-01,  7.9414e-02,  4.5147e-01, -3.0240e-01,  1.0292e+00,
        -1.2165e-01,  9.9295e-01,  8.5874e-02,  1.1217e+00,  1.0585e+00,
         1.0971e+00, -6.3219e-01, -4.3343e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,456 - myNeural - INFO - Forward Pass: tensor([-1.1528,  0.6313,  0.2762,  ...,  0.8023, -0.5590,  0.3980])
2021-05-25 09:10:35,472 - myNeural - INFO - Forward Pass: tensor([ 0.5652,  0.7959, -0.5503, -0.2789, -0.5988,  0.4901, -0.4649, -0.0712,
         0.4262, -1.5221,  0.7148,  0.1959, -1.2407, -1.2054, -1.0066,  1.1728,
         0.9952,  0.3377,  1.6300,  0.0060,  0.1185, -0.5500,  1.5832,  0.8299,
        -0.5770,  0.5842, -0.4785,  0.1876, -0.5423,  0.5545,  0.0072, -1.0916,
         0.6329, -0.2682,  0.9983,  1.2193,  0.4433, -0.4813,  1.1045,  0.3999,
        -0.5101, -0.2558, -0.5842, -0.2056,  0.7177,  1.4038,  0.3347, -0.9940,
         0.9254, -0.3033,  1.3854,  0.4529,  0.3002, -0.9240,  0.8397,  0.7650,
         0.1579,  0.7584,  0.4256, -0.6334,  0.8024, -1.5387,  1.0773,  0.1983,
         0.9695, -1.3229, -1.0623, -0.1496,  0.9362,  0.5501,  0.1864, -0.4560,
         1.7703, -0.2477, -1.5154, -1.0109,  0.6585,  0.7950, -0.7157,  0.7712,
         0.9087, -0.1514,  0.9299, -1.1406,  0.6448,  1.1575,  1.8618, -0.7539,
        -0.0091, -0.6444,  0.2346, -0.9516,  1.4584, -0.0457,  0.5829,  0.1563,
         0.0113,  0.8750, -1.4839,  0.7493,  0.2912, -0.0942,  0.5573, -0.7651,
        -0.0875,  0.3701,  0.8470,  0.0346,  0.0035,  0.5715,  0.4409,  1.1068,
         0.4375, -0.6244, -0.0316, -0.0179, -0.2160, -0.0297,  0.0520,  1.0287,
         0.4100, -0.2249,  0.1844, -0.2948,  2.1078,  0.2384,  1.0523, -0.8015],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,487 - myNeural - INFO - Forward Pass: tensor([-1.1651,  0.6531,  0.2594,  ...,  0.8885, -0.6258,  0.3964])
2021-05-25 09:10:35,501 - myNeural - INFO - Forward Pass: tensor([ 1.7101, -0.5532,  1.4837,  0.4203,  0.4741, -0.8850,  0.3540, -0.5864,
         0.5807, -1.7889,  1.6787,  1.1217,  0.6652,  0.0599,  0.1780,  0.6517,
        -0.9685, -1.1211, -0.2237,  0.5786, -0.3897, -0.7161, -0.3605,  0.2508,
         1.0140,  0.3565, -0.6731,  0.8609, -1.1518, -0.3636, -0.4671, -0.3277,
        -0.9583,  0.1450,  0.2283, -1.7909,  0.3640,  0.8390,  0.6578,  0.2522,
        -1.2513,  0.0974, -0.9992,  0.1214, -0.9815, -1.1616, -0.1326,  0.4460,
        -0.5593, -0.0870,  0.0236, -0.4635, -0.7253, -0.5799,  1.3923,  0.6361,
         1.0460,  0.0294, -1.4371,  0.7535,  0.6687,  0.5422,  0.8739, -0.4155,
        -0.2952,  0.9271, -0.4837,  0.4990, -0.5709,  0.5570,  1.5596,  1.5325,
         1.0535, -1.1277,  0.6736,  0.1560,  0.0278,  0.4072, -1.2133, -0.9423,
        -0.2047,  0.7407,  0.2345, -0.7885,  0.9756,  1.0256,  0.0456, -1.4067,
         0.4279, -0.5831, -1.2417,  0.0886,  1.2611,  1.2355,  1.5221,  1.4582,
         0.3863,  0.1990,  1.0831, -0.4653,  1.0683, -0.8035, -0.1500, -0.1425,
         0.0789,  0.2479, -0.2166,  1.1088,  1.0003, -0.3189, -1.2059,  0.6195,
         1.9585, -0.6099, -0.6820,  0.0529, -0.8932,  0.4230, -0.8769,  1.2315,
        -0.5435, -1.3733, -0.3532, -0.2579,  0.2250, -0.1830, -0.0151, -0.5233],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,515 - myNeural - INFO - Forward Pass: tensor([-1.2885,  0.6270,  0.1551,  ...,  0.9412, -0.6601,  0.3107])
2021-05-25 09:10:35,528 - myNeural - INFO - Forward Pass: tensor([-0.8637, -1.5194,  1.8585,  0.2530,  1.2638, -0.1085,  0.1126, -0.0224,
        -0.3681,  0.1748,  0.6686, -1.1533, -1.0640, -1.0239,  0.0905,  0.2899,
         0.0544,  0.3274,  1.8075, -1.2874, -1.1128, -0.1705, -1.2763,  0.1966,
        -0.1314,  0.3098,  0.5949, -0.4751,  0.3568,  1.1387, -0.1725, -0.1787,
        -0.1559,  0.4788,  0.6157, -2.0587, -1.0397, -0.0813, -0.6254, -0.0082,
        -0.1721,  0.4647, -0.8263,  0.8811, -0.2429,  0.7105, -0.3878, -1.0015,
         1.2072, -0.4837,  1.7196,  1.1058,  0.6322, -0.5877,  1.1764,  2.1636,
         0.8438, -0.1498,  0.1487, -1.0284, -0.6847,  0.8017,  0.6674,  0.9947,
         0.6287, -0.4535, -0.2151, -0.4475,  0.4186,  0.4637, -0.8077,  1.3398,
        -0.9661, -0.3425,  0.0775,  0.8382,  2.2977,  1.6408, -0.4567, -0.6416,
        -0.2330, -0.4074, -0.2475, -0.4984, -0.8062,  0.0463,  1.4403, -2.1986,
         0.6895,  1.7442,  0.0898,  0.7018, -1.5683, -0.5825, -0.3688, -0.2612,
        -1.0727,  1.6149, -0.8814,  0.6789,  0.3064,  0.2716,  1.2052, -0.7318,
         0.2968,  1.4444,  0.4417, -1.4483,  0.3639, -0.5213, -0.3537,  1.0591,
         0.1762, -0.6229,  0.6967,  1.1308, -0.9601,  0.0512,  0.6721, -1.0738,
        -0.9491,  0.4720, -0.8382, -0.2130, -0.0982, -0.3016, -0.7177,  0.0129],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,542 - myNeural - INFO - Forward Pass: tensor([-1.8016,  0.4365, -0.1973,  ...,  0.6352, -0.9025, -0.0128])
2021-05-25 09:10:35,556 - myNeural - INFO - Forward Pass: tensor([-0.8132,  1.0765, -0.3508,  1.2769, -1.1645, -0.3952, -1.0560,  1.0561,
         0.5915, -0.0179, -1.7302,  0.5935,  0.2761,  0.5525, -1.1099,  1.0733,
         0.4131,  1.0963, -0.3213,  0.2305, -0.8602,  1.5623,  0.7418,  1.5245,
        -0.5789, -0.4380,  1.1600, -1.1559, -1.0449, -1.8559,  0.0180, -0.6350,
        -1.1158,  0.5022, -1.2624, -1.6764,  0.8885,  0.9673, -0.3100,  1.2484,
        -2.3847, -0.9029,  0.0498,  0.6365,  0.4995, -1.5374,  0.5823, -0.6294,
         0.5350, -0.2136,  0.9653, -0.0191,  1.3199,  0.5784, -0.6529,  0.3591,
        -1.3206, -0.7975,  0.0639, -0.6657, -0.5196, -0.4767,  0.1456, -0.1300,
        -0.0570,  0.5636, -0.6610,  0.9726, -0.9822, -0.4085, -0.8317, -0.6260,
         0.3704, -0.0255,  0.0696, -0.3408,  0.4503,  0.2921,  0.7765,  0.5159,
        -2.3103, -1.2487, -0.8798, -1.2712,  1.0743,  0.0623, -1.0294,  1.2493,
        -1.6375, -0.4760, -0.4147,  0.7719, -2.5549,  1.8327, -0.1972, -0.4940,
        -1.1509,  0.4223, -0.8969, -0.6914, -0.2781, -0.4334,  0.0748,  0.1840,
         0.2605,  0.6068,  0.2813,  1.2232,  0.9279, -0.0926,  1.1885,  0.1556,
        -0.3710,  0.0808, -0.1352, -1.1031,  0.4878,  0.4410, -1.0316,  0.8279,
        -0.5580, -0.9614, -0.0248, -0.5435, -1.9963,  0.1975, -0.1085,  0.6366],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,569 - myNeural - INFO - Forward Pass: tensor([-1.5847,  0.7269,  0.0634,  ...,  1.0039, -0.5690,  0.3002])
2021-05-25 09:10:35,583 - myNeural - INFO - Forward Pass: tensor([ 0.0323, -1.0372, -1.6568,  0.8207,  0.3579, -1.2298, -0.3233, -1.6596,
        -0.6915,  0.8653,  1.1443,  0.3232, -0.4901,  0.0448,  1.8445,  0.0341,
        -0.0134,  0.1522, -0.9554,  0.1635,  1.3059, -0.8759, -0.9937, -0.6560,
         0.7190,  0.0470,  0.6467,  1.9310,  1.1259, -1.0142,  0.4108,  0.1416,
        -0.0115,  0.1963,  0.3164,  1.5920,  0.5772, -1.3552,  1.5966, -1.9649,
         0.0592, -0.0404,  1.0914, -0.9456,  1.6633,  0.7206,  0.7325,  0.3988,
        -0.6714, -0.5583, -0.6413, -0.3499,  0.1462,  0.4583, -0.1589, -0.6558,
         1.6037,  0.7732,  1.1125,  0.9768, -1.8235, -0.8384,  0.2249, -0.9190,
        -0.7964,  0.6199, -0.0642, -0.5658, -0.0063, -1.6929, -0.4705,  0.2310,
         0.7095,  0.4034,  1.3248, -0.6170,  0.9538, -1.0703, -0.0543,  1.6244,
        -1.3770, -0.1623,  1.6697,  1.2211,  1.0445,  0.7282, -0.6482, -0.7890,
         0.0190, -0.3858,  0.9511,  0.5814,  1.1157,  1.7019,  1.7481, -1.2710,
        -1.3642, -0.3411, -1.5690, -0.0242, -0.7513,  0.0444,  1.7569, -0.3768,
         0.3982, -0.3133, -0.8009, -0.0355, -0.4731, -1.4539,  0.7376, -0.2719,
        -1.2071, -1.4934,  0.6909,  0.4600,  1.0050,  0.8203,  0.6114,  0.3049,
         0.0864,  0.8348, -0.6469,  0.4803, -0.2008, -0.5901, -0.6419,  0.8181],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,596 - myNeural - INFO - Forward Pass: tensor([-2.1179,  0.3898, -0.3390,  ...,  0.6623, -0.9665, -0.0514])
2021-05-25 09:10:35,609 - myNeural - INFO - Forward Pass: tensor([-0.4276, -1.1500,  1.2045, -0.9777,  0.3795, -1.1484, -2.2772, -1.4268,
        -0.8334,  0.9684, -0.2801,  0.5907, -0.6803, -0.5397, -0.7037, -1.3972,
         0.6154, -0.2512,  2.2020, -2.3158, -0.3340, -0.2620, -0.5786,  0.5946,
        -0.2377,  0.2375, -0.8564,  1.1013, -1.0864,  1.1308, -1.6371, -0.8904,
         0.0934, -0.1695,  1.4367,  0.0587, -1.0639,  0.1737,  0.1440,  0.4810,
        -1.1275, -2.0075,  0.6100, -0.2296, -1.1645,  0.8021, -1.1273,  0.4341,
        -0.3311, -0.5991, -1.5948,  0.7000,  0.2059,  1.0372,  1.3383, -0.1098,
        -0.7475,  0.2509, -1.6041,  0.0499,  0.9056,  0.4961, -0.3444, -0.7503,
         0.4368, -0.3433,  0.2598,  1.2430,  1.3162, -0.9045, -0.8961, -1.7523,
        -0.1624, -0.8314, -0.0553, -0.2527, -1.1586, -1.3001, -1.2858, -0.1905,
        -0.8820,  1.6140, -0.6486,  0.3666, -0.0602, -1.2177, -0.8897, -0.2571,
         0.0157, -0.0357,  0.2531, -0.3977, -0.0766, -1.2894, -1.1651,  1.2094,
        -0.6920,  0.9171, -2.0988, -0.6841,  1.1510, -0.1802,  1.2120,  0.9402,
        -0.5125,  0.0216, -1.5218, -1.0492, -1.5125,  0.4522, -1.2796, -1.6998,
        -0.3125, -0.1876,  1.4017,  0.0900,  0.6441,  0.2313,  1.4441,  0.0332,
        -0.4864,  0.8035, -0.2294, -1.3009, -2.1147, -0.5406,  1.0935,  0.0819],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,623 - myNeural - INFO - Forward Pass: tensor([-1.8676,  0.6309,  0.0244,  ...,  0.9476, -0.8721,  0.2408])
2021-05-25 09:10:35,639 - myNeural - INFO - Forward Pass: tensor([ 0.0540,  0.3138, -1.1495, -0.5573,  0.1788, -0.4684,  1.8428,  1.9694,
        -0.4153,  1.0278, -0.1786, -1.6471,  0.2271,  0.7806,  0.3633,  0.8619,
         0.6766, -1.0558, -0.9470,  1.4387,  0.3649, -1.1434, -0.8325,  1.8636,
        -0.6020,  1.0783, -1.7355, -0.7098, -0.2385,  1.6203, -1.7528, -0.2465,
        -0.4930, -2.2905, -2.1826,  0.6069,  1.2484,  1.5069, -1.4161,  0.6674,
        -0.3928, -0.5572,  0.7409, -2.1017, -1.0202,  1.2662, -1.1299, -1.2784,
         0.1611,  1.3927, -1.2764, -0.1234, -0.6416,  0.1920,  1.2885,  1.3125,
        -0.0348, -1.2187, -0.7724,  0.9371, -1.6970, -1.4046, -0.6883, -0.3258,
         0.6122,  1.1626, -0.7397,  0.3485, -0.2546, -0.6354,  0.4478, -1.2137,
        -1.7681,  0.6706,  0.7199,  0.6684, -0.6113, -0.3967,  0.7857, -0.5522,
         1.1757,  0.1193,  0.2071, -0.8380,  0.9944,  2.7365, -1.5694,  0.0290,
        -1.3998,  0.6126, -0.8419,  1.3677, -0.5638,  1.7445, -1.1706, -1.0381,
         0.2016,  1.1035, -1.3194,  0.4500,  0.6179,  0.0578, -0.7024, -0.4863,
        -0.0032,  0.8114,  0.4259, -1.9031,  0.7513, -1.2442,  0.0966,  0.7090,
        -0.2643, -0.3868,  0.2330, -1.0346,  1.8164,  1.8232,  1.4935, -0.7713,
        -0.3984, -0.7449,  0.6470, -0.8526, -0.2263, -0.1267, -0.2153, -0.9674],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,654 - myNeural - INFO - Forward Pass: tensor([-1.8863,  0.6352,  0.0484,  ...,  1.1086, -0.8185,  0.2670])
2021-05-25 09:10:35,667 - myNeural - INFO - Forward Pass: tensor([-1.9654, -0.0043, -0.7227,  0.0074,  0.4237, -2.1423, -0.4347,  1.8374,
         0.5330, -0.4842, -0.3987,  1.5535, -0.5706,  0.4238, -0.5923,  1.3519,
         0.1937,  0.7827,  0.5119, -0.9746, -0.7843,  0.2803, -0.5614,  0.7101,
        -1.5062,  1.4202,  0.1202,  0.5274, -0.3967, -0.5993, -0.3234,  0.7532,
         0.1063,  0.7229, -1.2364, -0.6047, -1.2273,  0.9971,  0.9007,  0.7354,
         0.7318, -0.2374, -1.2174, -0.1143, -0.1096, -2.3181,  0.6220,  0.3884,
        -0.6970, -0.1385,  0.9575,  2.2143, -0.5334,  2.1947,  0.4877,  0.9391,
        -0.4439,  2.5918, -0.9110,  0.9063, -0.3263,  1.5195,  0.6146,  0.0261,
         0.3709,  1.0611,  0.4983, -1.7865,  0.3601, -0.0145, -0.6077,  2.0425,
         0.6995, -0.5906, -1.0821,  0.3616, -0.7797,  1.6513,  0.1120, -0.6780,
         0.5588, -0.4802,  0.4285, -0.8268,  1.5448, -0.3466,  0.9471, -1.6812,
        -1.6552,  0.8655,  0.3087,  0.8355, -1.1337, -1.2245, -0.7864, -1.7207,
         1.7227, -1.2005,  0.6921, -0.2828,  2.5411, -0.0599, -0.1271,  0.9159,
        -0.7117,  0.8886,  0.8917,  0.1323, -1.0376,  0.3439, -1.1479,  0.7929,
        -0.2168,  0.1219,  1.2905,  0.8718,  1.3058,  0.9777,  1.2314,  0.5210,
         0.0273, -1.0774,  0.8792,  0.8284, -0.5406, -1.4947, -0.7788,  0.9907],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,681 - myNeural - INFO - Forward Pass: tensor([-1.5309,  0.9110,  0.3999,  ...,  1.5518, -0.4828,  0.5966])
2021-05-25 09:10:35,696 - myNeural - INFO - Forward Pass: tensor([ 1.4687, -0.9325,  0.7102, -0.3315,  1.8928, -0.0602,  0.4395,  0.3068,
         1.3964, -0.1792,  1.3825,  0.6712,  0.4319,  0.3695,  1.4578,  1.1769,
         0.4815,  1.6834,  1.7646, -0.2018,  3.4709,  2.4230, -0.3934, -0.6681,
        -1.4560,  1.8685,  0.3554, -1.1068, -1.6088, -0.5443, -0.0883,  1.9404,
        -0.4836, -1.5488, -0.3807,  0.8466,  0.4368,  0.0296,  2.4338, -0.5515,
        -0.0373,  2.8389,  3.6860,  0.4161,  0.8608,  0.3211,  1.5317,  2.3124,
        -0.1717,  0.8496, -0.7631, -0.0458,  0.2774, -0.9408,  0.0686,  1.3176,
         3.1139, -0.7217,  0.5114,  1.6693, -1.2266,  0.8187,  0.4788,  1.3523,
         2.3980, -0.9553,  0.4675,  0.9120,  0.6983, -0.2318,  0.3068, -1.1270,
        -0.9366, -0.3247, -0.9695, -1.2425,  3.3150,  0.4428, -0.6513,  1.4337,
         0.7397,  1.2178,  0.7640,  1.4153,  0.5127, -0.7853,  1.4500, -0.4214,
         0.8085,  1.1355,  0.8596,  0.6550,  0.7036, -0.8934, -1.5787,  1.2275,
         1.6072,  1.6340,  1.3476,  1.1267, -0.2507, -2.7944,  0.3592, -1.1186,
         0.2934,  2.1921,  2.2976, -0.8386, -1.5540,  0.8053,  0.6431,  0.7956,
         0.4147,  1.2500, -1.1283,  2.1662,  1.0892,  1.4097,  1.2020,  2.1972,
         1.0706, -0.4319, -0.6019,  0.4564,  0.7452, -0.3037,  2.1612,  0.6100],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,710 - myNeural - INFO - Forward Pass: tensor([-2.0765,  0.4379, -0.1106,  ...,  1.0626, -0.9170,  0.1831])
2021-05-25 09:10:35,724 - myNeural - INFO - Forward Pass: tensor([-9.2767e-01, -5.7682e-01,  5.4540e-01, -1.1508e+00,  2.1142e-01,
        -1.2166e+00,  8.6624e-01,  7.5100e-01, -9.5862e-01,  2.4293e+00,
        -1.1806e+00, -1.9441e+00,  1.5120e+00, -3.1436e-01, -4.0997e+00,
         4.7979e-01,  5.5047e-01, -5.8464e-01,  2.6738e+00,  1.4045e+00,
        -2.7808e+00, -1.6287e+00, -3.6743e-01, -1.2620e+00, -2.8221e+00,
         4.7988e-01, -4.8636e-01,  2.1601e+00, -1.5042e+00, -1.6734e+00,
        -9.0113e-02,  1.4078e+00, -5.9621e-01,  1.2081e-01, -2.1754e+00,
         2.1819e+00, -1.2845e+00, -1.8133e-01, -5.4259e-01, -1.1461e+00,
         1.1999e+00,  2.6594e+00,  1.4800e+00,  2.4079e+00,  4.7625e-01,
         2.0340e+00, -1.0665e+00, -4.0301e-01, -1.3846e+00,  5.5850e-01,
         8.5083e-01,  8.9039e-01, -5.6956e-01,  2.3353e+00, -3.2430e-01,
         1.0486e+00,  1.2446e+00, -8.5220e-01, -1.3287e+00, -2.6730e-01,
         3.2725e-01, -3.0534e+00, -3.5872e-01,  8.3681e-01,  1.0058e+00,
         3.4463e-01, -1.0827e+00,  6.4048e-01, -6.2535e-01, -1.7748e-01,
         7.4763e-01, -9.8496e-01, -1.0097e+00,  1.3394e+00,  1.0061e+00,
        -7.3114e-01, -8.0499e-01,  2.9932e-02,  4.0180e-01,  4.9998e-01,
        -5.1287e-01, -2.3125e+00,  5.6208e-01, -8.3661e-01,  5.0337e-02,
         9.3288e-01, -1.4716e+00, -4.5355e-01, -8.7885e-01, -1.8979e+00,
         2.1624e-01, -7.6093e-01, -8.5105e-02, -6.7313e-01, -1.9125e+00,
        -4.1447e-01, -1.5733e+00, -5.6772e-01, -1.8513e+00, -6.0213e-04,
        -1.5457e-01, -1.9231e-01,  1.8556e+00, -1.6906e+00, -1.4461e-01,
         4.5552e-01,  2.0092e+00, -3.2053e-01,  1.5684e+00, -1.0743e+00,
         3.1090e-01,  1.2187e+00, -2.1201e+00,  2.5438e+00,  1.0656e+00,
        -5.2651e-01,  1.1387e-01, -5.4862e-01,  4.1890e-01, -1.1856e+00,
         1.9314e+00, -8.4154e-01,  2.4276e-01,  9.8381e-01, -2.2206e+00,
         1.1868e+00, -1.0149e+00, -9.1950e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,739 - myNeural - INFO - Forward Pass: tensor([-2.0645,  0.7574,  0.0854,  ...,  1.3391, -0.7792,  0.4553])
2021-05-25 09:10:35,754 - myNeural - INFO - Forward Pass: tensor([-0.0623,  3.0560, -0.0399, -0.9485,  0.6590, -2.0408, -0.5788, -1.8859,
        -0.6673, -0.7555,  0.5532, -0.8924,  1.1927,  0.1751, -0.3613, -1.6520,
        -1.5593,  3.3766, -1.3729, -0.1828, -1.1345,  0.1277, -1.0296, -0.6940,
        -0.5457, -1.8845, -0.5394, -1.9075,  1.2725,  1.4686,  0.3954, -0.2200,
         0.2409,  0.8635, -1.3648, -0.4596, -1.5575,  1.5275,  1.0299,  1.4823,
         1.3130,  0.3184,  0.8977, -0.3006, -0.8369,  0.7489,  0.0174, -0.1823,
         1.2417,  1.0871,  2.3227,  0.0792,  1.2018,  1.3057, -0.1753,  1.8875,
         0.8082, -0.5668, -1.5638,  1.8588, -2.5575,  1.9635,  2.1878,  1.3085,
        -0.5613,  0.0866,  0.3279,  2.1808, -1.0826,  0.8898,  0.7442,  0.2814,
        -0.0677, -1.5066, -0.6461,  0.1405,  1.0365, -0.0173, -0.5913,  2.0470,
        -0.2194, -1.9352,  0.0521,  0.2087, -1.9128,  0.9831, -0.4169, -1.0877,
        -2.0046, -0.1554, -0.2888, -0.6539, -1.7341, -0.9426, -0.4732,  1.0356,
         2.0348,  1.0951, -1.3133, -1.9278,  1.0668, -0.1600,  1.1699,  0.0123,
        -0.4190,  1.1782,  2.1724,  1.4406, -2.5862,  0.1659, -2.2261, -1.5261,
        -0.4630, -0.8295,  0.4409,  1.2243,  0.4085, -1.1997,  2.7287,  0.0837,
        -0.1814, -1.1092,  0.5973,  0.5734,  2.1185, -1.5450,  1.2544,  0.7673],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,769 - myNeural - INFO - Forward Pass: tensor([-2.0625,  0.8988,  0.2317,  ...,  1.5008, -0.6357,  0.5485])
2021-05-25 09:10:35,783 - myNeural - INFO - Forward Pass: tensor([ 0.1667, -0.3532, -0.2424, -1.2353, -0.8699,  1.1940, -1.5878,  1.2396,
         2.1111,  1.4415, -0.9526, -0.6126, -0.0273,  0.4664,  0.9390,  0.9530,
         1.7904, -1.0225,  1.2639, -0.0960,  2.8016,  1.5227, -0.3475, -0.2658,
         0.6455,  0.7069, -0.9668,  2.1917, -0.2776,  0.4937, -1.4088, -0.6901,
         1.2462,  1.2217, -0.3509,  0.2864,  0.5966, -0.3702,  1.7296,  0.9350,
         0.1986, -0.7628,  0.3324,  1.2244,  1.8623,  0.6974, -0.4474, -2.2716,
         2.0603,  1.6953,  1.3359, -0.6326,  1.1887,  0.8557, -0.2112,  1.1894,
         1.2640, -0.8189,  1.0844,  1.0982,  2.9321,  1.2547, -0.6994, -0.6698,
         0.1900,  0.0986,  0.8188, -1.0225,  1.4709,  0.2364, -1.9147, -1.2649,
        -0.4310, -0.3811,  1.1686,  0.6603, -0.4692,  0.6064,  1.8063,  1.8391,
        -1.8108,  0.3921, -0.9859,  0.7822, -2.1808,  0.2015,  0.5556,  2.5001,
        -0.4562,  1.1717, -0.8361,  0.7877,  0.6003, -0.0217, -1.1769,  0.7866,
         0.3014,  0.7348,  2.7334,  1.0621,  0.7245, -1.4992,  0.7108,  0.8091,
         2.1466,  1.1265,  0.8011,  1.5153, -0.4377, -0.8764,  2.7872,  2.3071,
         0.3090, -0.1325, -1.9282,  1.4655, -0.4992,  1.9955, -1.5776, -0.1688,
         3.2287, -1.3039,  0.9841,  1.0851, -0.0628, -2.0579, -1.3325,  2.0443],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,797 - myNeural - INFO - Forward Pass: tensor([-2.6518,  0.3483, -0.3835,  ...,  1.0263, -1.1985,  0.0320])
2021-05-25 09:10:35,809 - myNeural - INFO - Forward Pass: tensor([ 1.1951,  0.6138,  1.2732,  1.4734, -1.2197, -1.1216, -0.3329,  0.7746,
         0.6375,  2.2278, -2.0585,  2.8052,  0.7498, -2.0131, -0.3709, -0.9138,
         1.5239,  0.0747, -1.4843, -1.7266, -0.3896, -0.3592,  0.2882,  1.8022,
         0.9134,  0.9049,  0.2962,  1.1210, -1.1274, -1.2116, -2.3118,  1.0262,
        -1.0825, -1.8100,  0.4426, -0.2228, -0.6788, -3.0950, -1.3118, -1.3424,
         1.9079,  1.9363, -2.0103, -2.4183,  1.6605,  1.7458,  0.4575, -0.0309,
         1.2192, -0.2305,  2.0438, -0.3255, -1.4077, -0.5598, -0.1227,  1.7615,
        -2.1785,  0.3356, -0.5563,  0.7191, -0.2298, -0.9008, -2.0611, -2.0163,
        -0.3749, -0.4903,  0.1864,  1.1136,  0.0801, -1.2650,  0.7283, -0.6566,
         2.7249,  0.2289, -1.0678, -0.3994,  0.1008,  0.0294, -0.4292,  0.6860,
         1.5072, -1.1026, -0.2807, -2.5704,  0.2242,  1.2777,  1.1783, -2.1271,
        -0.2939,  0.8731, -0.3929,  0.0196, -1.8323,  1.0396, -1.6072, -1.6534,
        -1.3146, -1.0209, -0.3609, -2.4583,  1.5357, -1.7298, -1.0262, -2.8383,
        -0.6073, -1.3558, -0.9819, -0.5415, -0.2624, -0.4249,  0.3603,  1.0278,
        -2.5832, -2.1308,  1.3986,  0.6186, -1.5171, -3.4424,  0.6204,  1.4752,
         2.9820,  1.3076,  0.7180,  0.9182, -0.5671,  0.9365,  0.5787, -2.0844],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,822 - myNeural - INFO - Forward Pass: tensor([-2.4627,  0.7545, -0.0921,  ...,  1.4948, -0.8385,  0.4560])
2021-05-25 09:10:35,836 - myNeural - INFO - Forward Pass: tensor([-2.6658, -2.4559, -0.5464,  2.0082, -1.8817, -0.0167, -0.3488,  2.0543,
         3.0940, -2.0642, -3.0190, -0.5797,  3.3161,  0.3996, -0.4916,  2.0957,
         0.1181, -0.2929, -1.5397,  1.1560,  1.3790, -0.3331, -0.0377,  1.7613,
         1.5139,  2.8619,  0.1752,  1.8445, -0.9459,  1.0125, -0.5398, -0.0783,
        -0.7370, -1.9892,  1.5334,  0.4433,  2.1689, -1.1058,  1.1312,  0.7870,
        -0.7177,  1.1856, -0.1820,  1.4708,  0.6566,  4.9358, -0.2365,  0.8162,
         1.1853,  1.2338, -0.0052, -0.6509,  0.4680, -0.5234,  0.5629,  0.4828,
         0.2232, -0.0414,  0.6311, -1.6888,  1.7052, -2.5846, -0.7211, -0.3511,
         2.4258, -1.6109, -1.9156,  1.7600,  0.1761, -3.1034,  0.0403,  0.5835,
         0.8124, -0.5227,  0.2823, -2.0044,  0.7952,  3.4815, -0.6009,  2.2486,
         1.7934, -1.3001,  1.3650,  1.0893,  0.2296,  1.7145,  1.4303,  0.3850,
         1.1210,  2.6255,  0.5978,  0.3268, -2.3869, -0.6544, -0.5778, -0.2604,
        -0.5311,  0.7265, -1.7057, -1.4199, -0.6300, -0.3520, -0.8336, -0.6564,
         0.4780,  1.8700, -2.0583,  1.5858,  0.6528,  1.3878, -1.6567, -1.5094,
        -0.1298, -2.2014, -0.2158, -1.2976,  0.5488, -0.0334,  0.3623, -0.9751,
         0.0529, -1.4232, -0.3085, -0.2297,  1.5287, -1.2376, -1.3985,  1.6690],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,848 - myNeural - INFO - Forward Pass: tensor([-2.5858,  0.7162, -0.1441,  ...,  1.4551, -0.8237,  0.4576])
2021-05-25 09:10:35,862 - myNeural - INFO - Forward Pass: tensor([-1.1358,  0.8132,  0.6204,  2.7950,  0.3301, -0.7296, -1.5303, -2.9721,
        -1.7547, -0.3642, -2.9029, -0.1730,  1.8133,  1.2243, -0.2221, -0.1192,
        -1.8867,  2.0035, -0.1781,  2.1303, -2.4190,  0.6928, -1.7674,  0.7948,
         1.0574,  0.4069, -0.5196,  0.2345, -0.0130,  1.9860, -1.7849,  2.4637,
        -0.9990,  1.0304,  0.4834, -0.8335,  1.1346, -0.6654, -1.6171,  0.9646,
        -2.4232, -1.7583, -1.0098, -2.7492,  2.1875,  0.6181,  0.5598,  2.3822,
        -0.4498,  2.2297, -0.9671,  0.3945,  0.2784, -1.7921, -1.6505,  1.0913,
         2.3091, -2.1996,  0.1460,  0.3319,  2.4818,  0.7758,  1.8692, -0.1127,
        -1.5180,  1.6817,  2.6073,  1.0952,  0.0804, -0.9419, -0.5211,  0.9776,
        -1.7146,  1.1350, -0.9584, -0.0390,  0.1187,  0.4219, -2.3326,  1.3232,
         0.3112, -0.6321, -0.8470, -1.0997, -1.3082,  2.1157, -2.1385,  1.0581,
        -0.2796, -0.2310, -0.2967, -1.6259,  0.3083,  0.0041, -1.5709, -1.1037,
         0.8722,  2.1226,  0.9957,  0.3907,  2.0066, -0.2739, -1.1721,  2.5703,
         3.3733,  0.2859,  0.5331,  0.8981, -0.7522, -1.4613, -0.8991, -1.4809,
         2.1765,  0.1575,  0.1300,  1.8953, -1.8242,  1.0446,  1.4237, -0.7995,
        -3.6788,  1.4753, -1.0787,  1.0838,  1.8992, -1.3024, -1.7201,  2.6367],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,876 - myNeural - INFO - Forward Pass: tensor([-2.4526,  0.8370,  0.0889,  ...,  1.6478, -0.6865,  0.5134])
2021-05-25 09:10:35,890 - myNeural - INFO - Forward Pass: tensor([-0.2551, -2.1426,  2.7681,  2.0290,  0.2289, -1.2097,  2.2288, -1.2544,
         0.6224,  2.7424, -1.7009,  1.0975,  0.1262,  0.0963, -0.1364,  1.7807,
        -2.6568, -0.5768,  0.8490, -0.2101,  0.2220, -0.5193, -0.4568,  1.2546,
         2.4604,  1.4150, -0.2349, -0.8488, -1.8597,  1.8164,  2.2147,  0.3038,
        -0.1982, -0.9879,  0.7837, -1.8173, -1.3013,  1.2965,  1.8959,  1.6438,
        -2.5391,  3.4733, -0.1133, -1.5481, -1.1604,  2.8372,  1.1945,  1.2368,
        -1.7264,  3.0432,  1.4099, -1.2495, -0.7740, -0.4689, -0.4955, -2.8957,
        -0.8045, -0.6596,  0.1119, -0.6375, -0.5522, -0.8687,  0.6078, -1.2396,
         0.7859,  1.1540,  0.3965,  0.1724,  2.7681, -1.2897, -1.7694,  1.5382,
         1.2136, -1.0535, -0.6295, -0.2125,  0.4574, -1.3950,  1.3820, -0.2260,
         1.7870,  0.1418,  1.7909,  1.0001, -1.0890,  1.2634,  1.3977,  0.5361,
         0.8648,  1.7113, -0.3609, -3.7383,  0.6669, -1.1816, -2.3315,  0.3888,
        -0.6770, -1.8503, -1.6627, -0.9702, -0.1821, -1.4090, -0.5462, -1.5814,
        -0.8345,  0.8141,  0.3503, -1.3502,  1.3188, -2.0180,  1.7693, -0.5330,
         1.9310, -1.5639,  2.8271, -1.6977, -2.4889,  2.8735, -1.6527,  1.3679,
         0.6199,  2.3593, -2.2544,  1.5021,  2.2713, -0.0346,  1.9563,  1.6902],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,903 - myNeural - INFO - Forward Pass: tensor([-3.0597e+00,  3.1835e-01, -4.6823e-01,  ...,  1.1228e+00,
        -1.2945e+00, -2.3720e-03])
2021-05-25 09:10:35,919 - myNeural - INFO - Forward Pass: tensor([-0.7903, -3.8019,  0.3953, -2.5275,  0.3350, -4.2956, -2.6520, -0.0375,
        -1.1481, -1.6552, -2.1054, -0.1036,  0.9344, -2.0988,  1.0227, -0.9715,
        -2.5328,  1.7725, -3.1889,  0.0344,  0.1537,  1.1059,  0.1960,  0.3272,
        -0.7103,  1.8833, -3.7047,  1.5781, -0.2098,  0.7322, -0.6966, -0.5308,
        -0.7530, -0.9681,  0.0404, -2.1137, -1.5325, -0.6139,  0.2255,  1.1303,
        -0.3600, -3.2330,  0.8027,  0.0557, -0.1661,  0.4469, -0.2782, -1.8382,
        -0.7444,  0.8203, -0.1684, -1.5444,  1.1120, -1.4851, -1.5479, -2.1948,
         0.6843, -0.6190,  1.3468,  1.9595, -0.4720, -2.9348, -0.0587, -1.8677,
        -0.3762, -3.6393,  0.2782, -2.7448,  1.5599, -2.9182,  2.1071,  1.3505,
        -0.1117, -1.8338,  0.6639,  0.4339, -1.0277,  1.1457, -2.3046, -0.8310,
         3.1416, -1.1244,  2.9944,  1.7218,  1.9690, -2.3209,  0.8788, -1.9879,
        -1.0802, -1.8027,  0.9977, -0.0763,  1.7195, -0.7431,  1.3880,  0.1031,
        -0.9295,  1.0720, -0.7674,  0.6710, -1.0157,  0.6861, -1.5729, -2.1427,
        -0.8803, -0.6975, -0.0394, -2.4448,  1.8714,  0.5999, -2.1971,  0.8007,
         1.2942, -0.0331, -0.1662, -1.3225, -1.5304, -0.6220,  2.2984, -0.1238,
        -1.4426, -1.8055, -0.4170, -2.5819, -2.7839, -1.7392, -0.4207,  0.1175],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,932 - myNeural - INFO - Forward Pass: tensor([-2.8137,  0.6721, -0.0313,  ...,  1.5473, -1.0454,  0.3993])
2021-05-25 09:10:35,945 - myNeural - INFO - Forward Pass: tensor([-1.6493,  0.7361,  1.5024,  0.1563, -2.3280, -0.9281,  1.3476,  2.2112,
         0.4553,  0.0157, -0.8616, -2.1900,  1.8433, -0.5733, -1.8028,  1.5456,
        -0.3831, -0.6722, -0.0894, -0.4475,  1.3909, -0.3460, -0.6961, -1.7597,
         0.7775,  0.8235,  1.3599, -0.1415,  0.1565,  1.9884, -2.3868,  1.4650,
         0.0500,  3.8723,  0.1499,  2.4983, -0.0725, -0.3109, -1.6063, -2.3756,
         1.2271, -3.1178, -2.2649, -2.6113, -0.0767,  0.7728,  2.2595,  0.7780,
        -0.8253, -1.2931, -1.4670, -0.9293, -2.4459, -1.4191,  1.8542, -0.8687,
        -0.5325,  1.2773, -1.0970, -0.1112,  1.3213, -0.8881, -0.9648, -1.3175,
         0.8765, -0.7708, -0.0196, -1.5632,  1.2102,  2.2042,  3.2538, -0.6838,
         1.4270, -2.3766, -0.9772, -0.7327,  1.0481, -2.6099,  0.6579,  3.1383,
        -0.8931,  2.6102, -2.3062,  3.7977, -1.7178, -0.0373, -1.5083,  0.2118,
        -0.4923, -1.4146, -2.5910,  1.6591, -0.7959, -3.9916,  2.5617, -2.3459,
        -1.0333,  2.2012,  0.8796, -1.8341,  0.4427, -0.7227, -1.9925,  1.0491,
        -0.3848,  1.6469, -1.8775,  0.2504, -1.5109, -1.0951,  0.1412, -0.1123,
        -1.5444, -0.0788,  1.8505, -0.4741,  0.9541, -0.1774, -0.5401, -2.7713,
        -0.7200,  2.9101,  1.3231,  0.4717,  1.7752, -2.6973, -2.1691, -1.9972],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,960 - myNeural - INFO - Forward Pass: tensor([-3.0278,  0.6492, -0.2778,  ...,  1.4995, -1.0864,  0.4264])
2021-05-25 09:10:35,976 - myNeural - INFO - Forward Pass: tensor([ 1.9916,  0.1218, -3.0809, -0.6115, -0.5647, -0.4928, -3.1465, -1.4397,
         1.0247, -1.2843, -0.7590,  1.7463,  0.0477,  1.8440, -1.0246,  1.4191,
        -0.3728,  1.2466,  1.9607, -0.9049, -2.4789, -2.9417,  0.2038, -0.3672,
         1.7157,  0.2528, -0.6295,  0.1991, -1.0215, -0.0672,  2.4764,  0.2513,
         0.1641, -0.3249, -1.6512, -1.1163,  1.1987, -2.5277, -0.5138, -1.7036,
         0.8611,  2.4624,  2.7665,  1.6591, -2.8545,  0.2177, -2.7479, -2.7136,
         0.0411, -1.4429,  1.7752, -1.2998, -1.5086, -0.4593, -2.6332,  1.3691,
        -0.0600, -0.4390,  1.1483,  1.2423,  1.6389, -3.8120, -2.2762, -1.6568,
        -0.0823, -3.8879,  0.2157, -1.0431, -1.9511,  0.7741, -0.1452, -1.6497,
         0.7025,  1.7213,  1.3741,  1.4605, -0.9204, -0.0239, -0.4470, -1.3553,
        -0.2722,  3.7550,  1.2449, -0.2363,  2.3506,  0.1646,  1.6954, -2.3225,
         0.8242,  1.3746, -1.4204, -1.3993, -1.8109, -3.1226, -2.0467, -0.5144,
        -1.4522,  1.7488,  0.8694, -1.1457,  1.3322, -1.5944,  1.8983,  0.4983,
        -1.9603, -1.1250, -2.6121, -0.3448,  0.3818, -0.7455, -1.3728, -0.9000,
        -0.2004,  0.2235, -0.4554, -1.9066, -0.8845, -0.5012, -1.3136, -1.5244,
        -0.0509, -1.1379,  2.9780,  0.3044,  1.7787, -2.4928, -0.0691, -0.0262],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:35,990 - myNeural - INFO - Forward Pass: tensor([-2.6830,  1.0765, -0.0400,  ...,  1.9994, -0.7326,  0.7732])
2021-05-25 09:10:36,021 - myNeural - INFO - Batch 60 -- TrainLoss: 0.50807 -- TrainAcc: 74.21875% -- TestAcc: 80.55000%
2021-05-25 09:10:36,024 - myNeural - INFO - Forward Pass: tensor([-1.9894e+00,  1.9863e-01, -1.0674e+00, -3.6634e-01, -1.3099e+00,
        -2.7521e-01, -1.1079e+00, -1.9412e+00, -2.0036e+00, -5.0235e-01,
        -4.3498e+00,  2.4763e-01,  4.0660e-01,  1.2505e+00,  2.5852e+00,
        -1.7435e+00, -6.6082e-02, -1.4433e+00, -1.3250e+00, -1.8747e+00,
         7.1278e-01, -2.6140e-02,  2.1134e+00,  2.1400e+00,  2.9968e+00,
         2.3697e+00,  1.4247e+00,  7.0373e-04, -1.5296e-01,  2.1649e+00,
        -2.5532e-01, -2.6781e+00,  1.5733e+00,  7.8939e-02, -1.9565e+00,
         3.1787e+00,  5.5493e-02, -1.0479e+00,  1.6780e+00, -3.4958e-01,
        -1.2693e+00,  2.6756e+00,  1.3609e+00,  1.0046e+00, -1.0687e+00,
        -3.0152e+00, -4.5598e-01,  1.2977e+00,  1.9168e+00,  1.9006e+00,
        -9.3460e-01, -2.0837e+00, -2.4674e+00, -2.6541e+00, -1.4333e+00,
        -2.8539e+00,  3.0045e-01,  3.7091e+00, -1.2403e+00,  2.3523e+00,
         1.2841e+00, -3.8114e-01,  3.9926e+00,  6.5367e-01, -4.7951e-02,
        -7.0760e-02,  1.9090e+00,  1.4893e+00, -4.8837e-01,  1.5781e-01,
         4.6864e+00, -3.4874e+00, -7.8981e-01, -1.5291e+00, -7.5751e-01,
         2.5726e+00,  6.2984e-01,  3.3112e-01,  2.8179e+00,  8.4405e-01,
         4.1851e-01,  1.0222e+00,  1.4202e+00,  1.5341e-01, -5.1740e-01,
        -9.8850e-01,  2.4291e+00, -2.6543e+00, -4.4559e-01, -1.0169e-01,
         1.9511e+00,  9.9218e-01, -3.8494e-01,  2.7187e+00,  1.3158e+00,
         6.3002e-01,  1.7426e-01, -1.2320e+00,  5.2822e-01, -5.6050e-01,
        -8.6517e-01, -9.9655e-01,  1.2769e-01,  1.5798e+00, -1.4918e-01,
         2.7629e-01,  4.1543e+00,  1.3298e+00, -2.8056e+00,  2.4003e+00,
         2.1152e-01, -1.3249e+00, -2.3496e+00, -1.7436e-02, -1.9360e-01,
         2.7436e+00, -8.3611e-01,  5.1504e-01,  2.7550e+00,  3.8371e+00,
         2.2282e+00, -1.4149e+00, -1.6756e+00, -4.7617e-01, -1.1954e+00,
        -4.0070e-01,  1.7079e+00, -5.4956e-01], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,037 - myNeural - INFO - Forward Pass: tensor([-3.2311,  0.5128, -0.5150,  ...,  1.5440, -1.1825,  0.2372])
2021-05-25 09:10:36,052 - myNeural - INFO - Forward Pass: tensor([-2.1365, -1.6795, -1.7459,  0.7425, -0.8232, -1.2970, -4.2719, -0.5529,
        -3.4441,  0.7720, -1.1882,  0.8951, -1.3145,  0.4137,  1.7809, -0.9655,
        -1.5885,  0.6090,  1.9817,  0.1221,  1.0087,  0.9565,  2.7769,  1.4352,
         0.9996,  1.5745,  1.2292, -3.2003, -2.8682,  2.8069,  0.5897, -1.2337,
         0.8991,  1.5704, -0.8706,  2.2215, -0.5161,  0.7562, -1.1138,  1.0776,
        -1.9460,  2.7218, -1.7902, -0.8174,  0.2911, -2.8677, -1.2989,  1.0448,
        -0.7405,  1.7530, -1.3296, -3.6435,  0.3598,  1.6770, -0.8097, -1.3188,
         1.7132, -2.4584, -0.8226,  2.1947,  0.7564,  2.2584,  2.7082, -0.4252,
        -3.0440,  0.2267, -0.6388, -2.6782,  0.8000,  2.7449, -0.5233,  1.6229,
         1.7390,  3.2490,  2.2308, -1.0492, -2.4231,  0.2110, -0.8511, -0.8999,
         0.4461, -2.0567, -2.6089,  0.9244,  1.9331, -1.0034,  2.5306,  2.3623,
         0.3422,  0.7365,  1.8810, -2.1950, -2.4845, -3.4783,  3.3185,  0.3379,
         1.0838, -2.3760,  0.4714,  3.1458,  1.8295, -1.3315,  1.6351, -0.3039,
         1.3380,  0.8883, -0.8736,  1.4644, -0.7652,  1.4111, -1.0200, -0.1754,
        -2.1339, -1.8703,  0.3574, -0.4837, -0.3229, -0.7902,  2.4459,  1.0195,
        -1.3983,  0.2351,  0.5444, -0.9789,  1.3638,  1.9615,  0.0608, -0.4130],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,066 - myNeural - INFO - Forward Pass: tensor([-2.8749,  1.1098, -0.1139,  ...,  1.9871, -0.7114,  0.8160])
2021-05-25 09:10:36,080 - myNeural - INFO - Forward Pass: tensor([ 1.6828e+00, -2.6135e+00,  5.3349e-01,  1.3998e+00, -2.9860e+00,
        -1.3124e+00,  3.0586e+00, -1.9630e+00, -1.0974e+00,  2.8876e-01,
         2.4561e+00, -1.6412e+00, -9.9409e-01, -8.4353e-01,  1.7909e+00,
        -2.8488e+00,  1.0622e+00,  4.5133e+00, -1.4881e+00, -2.5927e+00,
        -8.4312e-01,  2.6453e+00,  2.9257e+00,  9.5866e-01, -7.9270e-01,
        -2.5238e+00, -1.6179e+00,  1.5473e+00, -9.0584e-01,  2.1690e+00,
         1.3305e-01,  2.7226e+00, -1.8446e+00,  2.7088e-01, -7.1629e-01,
         2.4353e+00, -1.1883e+00, -1.0865e+00,  1.4617e+00, -9.1016e-02,
         1.7708e+00,  2.1598e+00,  1.2790e+00, -4.4341e-01,  3.4300e-01,
        -1.5590e-01, -2.8530e-01, -3.3915e+00,  4.5755e-01,  6.7302e-01,
        -7.2995e-02,  1.7594e+00,  2.8706e+00,  4.6246e-01, -1.5412e+00,
         2.1205e+00,  2.4577e+00, -2.0373e+00,  3.4539e+00,  1.5131e-01,
        -2.3819e+00, -3.7954e-01,  2.7546e+00, -2.0758e+00, -1.4555e-01,
        -2.0583e+00, -2.8757e+00,  3.3707e-01, -4.2116e-01,  1.6160e+00,
         3.4091e+00,  6.5597e-01,  1.5043e+00,  1.7506e-01,  9.6749e-01,
         2.1889e-02, -9.5615e-02,  4.1521e-01,  1.5997e+00, -2.3624e+00,
        -6.4702e-01,  2.4421e+00,  2.5896e+00, -1.0134e+00, -4.9344e-01,
        -1.2209e+00,  7.1336e-02, -9.3144e-01, -1.3612e-01, -2.0707e+00,
        -1.9817e+00,  2.0799e+00, -2.7640e+00, -3.3536e-02, -8.2895e-01,
        -4.7091e-01, -9.0671e-01, -1.5860e+00, -2.6704e-01, -2.2926e-01,
         3.6563e-01,  2.9611e+00,  4.1961e-01,  3.1100e-01,  3.0756e+00,
        -3.7763e-01, -9.4004e-01, -4.2294e-01,  2.3436e+00, -2.8211e-01,
         1.5556e+00, -1.5597e+00, -3.8507e-01, -3.1504e-01, -1.5155e-01,
         1.0762e+00, -2.8218e+00, -1.8405e+00, -5.0229e-01,  1.2816e+00,
        -6.9780e-01,  1.6047e-01,  1.7722e+00,  4.1081e-01,  1.8368e+00,
         1.2614e+00,  4.3248e-01,  1.8434e-03], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,094 - myNeural - INFO - Forward Pass: tensor([-3.0708,  1.0509, -0.1804,  ...,  1.9804, -0.9466,  0.7504])
2021-05-25 09:10:36,109 - myNeural - INFO - Forward Pass: tensor([ 3.4190,  4.9063,  0.6084, -0.5302, -0.2550, -3.0597, -3.7864,  1.4048,
        -1.5907,  1.6482, -1.3057,  2.3033,  0.0115, -0.1318,  2.9616, -0.1593,
        -1.8546, -3.2036, -0.5191,  2.5121, -0.9470,  1.3194,  0.2096, -0.3511,
        -3.3394, -0.7681,  1.4314,  2.2046,  1.1202,  1.6876,  3.7241,  0.5833,
         0.8943,  1.4552, -1.1805,  1.6272, -2.8573, -2.8666, -2.4332, -1.9390,
         0.7143, -0.4205, -1.3596,  2.4239,  3.7230, -2.7970, -0.5359,  0.2730,
        -2.4918, -0.9231,  2.3357, -2.9657, -2.0165,  0.9352, -1.5799, -0.6600,
         2.0361,  2.4079, -1.8983, -0.0078,  1.5899, -0.8139,  2.7130, -2.0297,
        -0.4768, -0.6721,  0.5049,  0.0695,  1.5697,  1.5958,  0.6708, -1.5847,
         0.0552,  0.5008,  0.4176,  1.0280,  1.3840,  3.6682,  1.9336,  2.5401,
         1.0310, -0.0545,  1.2810,  0.6380,  0.1914, -2.2138,  1.0807,  1.4661,
        -0.5800,  0.2762, -0.8493,  1.0657,  0.2746,  0.0530,  0.9358,  0.4492,
        -2.3871, -0.9745,  0.5616, -0.9949,  0.8289,  2.1393, -0.4279, -2.4985,
        -0.3761, -1.8160,  0.7996,  0.7194, -1.1392,  0.6835,  0.2489,  1.1416,
         2.2338, -1.4058, -0.1532, -2.1899,  0.8398,  2.7278,  1.5270,  0.7366,
         1.2119, -1.5421,  1.0721,  0.4389,  1.6650,  4.4303,  0.9803,  0.5986],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,125 - myNeural - INFO - Forward Pass: tensor([-2.7125,  1.3452,  0.1281,  ...,  2.3572, -0.6136,  1.0488])
2021-05-25 09:10:36,142 - myNeural - INFO - Forward Pass: tensor([ 1.0940,  2.4533, -2.0901,  2.5913,  1.0713,  3.2067, -2.4701, -2.2917,
         2.9978,  1.1469,  0.3483, -0.1275,  0.3145, -4.2168, -2.1423,  0.9892,
        -2.4480,  1.8410,  1.8458,  0.6225, -0.9082, -0.9803,  0.4805, -2.6276,
         0.3845,  1.2887,  2.7505,  0.8420,  2.5989,  0.4605, -1.3804, -0.5190,
         1.1047,  3.8610,  1.0539,  0.5461, -1.9750,  0.9944, -1.6034,  1.0399,
        -2.2923,  0.9067,  1.8341,  0.7414,  2.8979, -1.7333,  1.7761,  3.3055,
         0.3936, -1.8671,  3.3286, -2.0398, -0.0751,  2.7125,  0.6264,  0.6965,
        -0.8140,  0.1495, -1.1283,  0.3309,  2.0362,  2.2133,  0.9380,  2.0369,
        -0.0626, -0.6423,  1.1796,  2.8678, -1.2764,  1.4638,  0.9674,  0.3105,
         0.5971,  2.0023,  1.1896,  3.0461,  1.3113, -1.0345,  1.8176,  0.1998,
         2.1943, -1.8217,  1.2967, -0.9855,  1.5502,  1.9863,  1.9488, -0.7936,
        -1.1349,  3.5320,  2.9004, -1.8411, -1.4219, -0.3781,  0.3559, -1.8223,
         4.2068,  1.2854,  1.5906,  2.5626,  0.7293, -0.3616,  2.0469,  1.0312,
         2.5174,  2.9083, -0.3617,  0.3980, -1.4785, -0.7689, -1.8357, -1.3919,
         0.5070,  0.6169, -0.2938,  2.1114,  1.3881, -0.7664, -0.0195, -1.1344,
         0.8781, -1.1360, -0.9480, -2.1944,  0.3471,  1.3479,  0.7796,  0.9247],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,157 - myNeural - INFO - Forward Pass: tensor([-3.2084,  0.7556, -0.3527,  ...,  2.0497, -0.9876,  0.6199])
2021-05-25 09:10:36,173 - myNeural - INFO - Forward Pass: tensor([ 9.0610e-01, -1.9437e+00,  2.7669e+00,  3.9540e-01,  1.8198e+00,
        -2.7154e+00, -7.4458e-01, -1.4719e+00, -1.0609e+00,  3.5348e-01,
        -2.1614e+00,  2.8342e+00,  1.0735e+00,  3.2759e+00, -9.3390e-02,
        -1.5891e+00,  1.2786e-02, -1.2304e+00,  2.2603e-01, -8.7098e-01,
         1.4901e+00,  1.2324e+00, -1.2746e+00,  6.5577e-01,  8.0721e-01,
        -2.0798e+00,  2.0686e+00, -1.6370e+00,  3.5778e+00, -1.3411e+00,
        -1.2485e+00,  1.2250e-01,  1.1475e+00, -1.0251e+00,  1.5165e+00,
        -2.3372e+00, -1.0928e+00, -1.9968e+00,  2.0919e+00, -9.7110e-01,
         8.6487e-01, -8.1911e-01, -4.2261e+00, -2.0318e+00,  1.4522e+00,
        -6.3850e-01, -1.5183e+00,  4.0929e-01, -1.5403e+00, -1.4688e+00,
        -1.5826e+00,  2.6314e+00,  2.0394e+00,  8.9001e-01, -8.7953e-01,
        -1.0017e+00, -1.7320e+00, -2.9912e+00, -1.2061e+00,  2.2846e+00,
         3.8508e-01, -7.4233e-01, -2.1847e+00,  9.0446e-01,  7.0087e-01,
        -2.3689e+00, -1.1238e+00,  1.9713e+00, -3.3935e+00,  2.5085e+00,
         3.1526e+00,  1.7702e+00,  2.0831e-01, -1.8057e+00,  1.9538e+00,
         5.1890e-01, -3.1288e-01, -2.8245e+00, -3.8646e-01,  1.7364e+00,
         4.8359e-02, -1.7618e+00, -2.0518e+00, -9.1134e-01, -5.9602e-01,
        -2.0424e+00,  2.4062e-01,  1.2625e+00,  3.1396e+00,  5.5123e-01,
        -1.7892e+00, -2.9505e-01, -2.8579e+00, -2.4584e+00, -1.5315e-01,
         1.1503e+00, -2.0569e+00, -2.3086e+00, -1.1059e+00,  1.3714e+00,
        -1.0972e-01,  4.0945e-03, -9.8289e-02,  7.5381e-01,  8.9378e-01,
        -3.6152e-01,  4.6849e-01, -9.5696e-02,  8.9577e-01,  1.0338e+00,
        -3.1427e+00,  4.2458e-02, -2.9592e+00, -7.2424e-01, -2.2203e-01,
         4.2041e+00,  1.3467e-01,  1.3921e+00, -1.9616e-01,  1.5097e+00,
        -1.1513e+00, -8.6532e-01, -1.3090e+00,  2.7593e-01,  8.5292e-01,
         1.3851e+00,  3.4649e+00, -1.0712e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,188 - myNeural - INFO - Forward Pass: tensor([-2.9296,  1.0208, -0.0747,  ...,  2.4506, -0.6292,  1.0634])
2021-05-25 09:10:36,204 - myNeural - INFO - Forward Pass: tensor([ 3.6442,  1.5986, -3.0200,  0.7143, -1.8090, -0.1629,  3.6761, -0.1377,
        -2.4695, -1.7262,  1.5367,  1.4781, -2.3937,  1.3591, -1.2958,  3.4253,
        -1.4676, -1.2914, -1.5052, -0.8262, -1.8147, -2.3097, -1.5630, -0.3239,
        -0.0359,  0.6027,  0.5888,  0.4427, -2.3680, -1.6102, -1.2825,  0.3685,
        -2.6173, -1.1781,  1.3843,  0.4647, -1.5881, -1.2702, -1.7783, -0.4003,
        -1.0170, -0.4309,  0.8374,  1.8338, -1.0469, -1.2335,  0.0467,  0.9293,
         3.6328, -0.2336,  3.5765, -3.0129, -1.1080, -2.1879, -1.1345,  1.5804,
         2.8248,  3.5736,  1.6770, -1.0055, -2.2526,  1.6174, -1.1385, -0.2204,
         0.8460, -0.0208, -1.5506,  2.3167,  3.5093, -0.2479, -2.3993,  3.4065,
        -0.6937,  1.5032, -0.3847,  2.6498, -0.1181,  0.0617, -0.1800,  1.5904,
        -0.4179,  3.2337, -1.4107,  1.3452, -2.2654,  1.8835,  2.1956,  1.9980,
         0.2371,  2.4168,  2.2143, -0.0112,  2.0162,  0.4720,  2.4804,  0.2029,
        -0.6372, -1.5464,  2.9433,  2.9005, -2.7438, -0.8296, -2.9676, -0.3395,
         1.9446,  0.6693,  0.4885,  2.7704,  0.1638, -0.0451,  1.2780,  3.0068,
         0.9877,  1.2240,  0.3226,  2.8433, -0.2179, -0.8307, -1.1905,  0.4492,
        -1.1875,  1.1287,  1.3945, -1.1665,  1.5735,  1.2539,  0.1418, -1.8091],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,218 - myNeural - INFO - Forward Pass: tensor([-3.4576,  0.6065, -0.4385,  ...,  2.0884, -1.1860,  0.6944])
2021-05-25 09:10:36,232 - myNeural - INFO - Forward Pass: tensor([-0.3712, -3.9235, -0.4399, -2.7110, -0.4428, -1.4673, -1.5387,  0.5666,
        -2.7126,  1.3826, -1.6969,  0.9697, -1.2671, -1.6377, -0.6002, -1.7132,
        -0.5930,  0.9391,  0.9329, -0.6059, -0.0649, -2.0478,  1.0844,  1.2468,
         2.4164, -0.6937, -0.5337,  1.2882, -1.3438, -1.5495,  2.7327,  0.3372,
         0.1162,  0.7869,  2.3400,  2.1566, -0.1303, -1.1212,  0.4121, -1.3976,
         1.0767, -2.1636, -1.1831,  1.3418,  2.0590,  1.4405,  1.3935,  1.1861,
         0.7546, -0.6055, -0.9330,  0.7935,  1.2723, -3.1463, -1.9931, -2.5089,
         0.0393, -1.5672, -0.5641,  0.2568, -3.0987,  0.1848,  1.3476, -0.1987,
         2.1401, -1.4446, -0.6789,  1.4742,  1.5835, -0.5246,  2.0508,  1.2555,
         1.2752, -0.0971, -0.3358, -1.8428,  2.0862, -2.5481,  2.1298,  0.4892,
         1.2787, -2.3102,  0.2336,  2.8603,  0.9215, -0.1418,  1.2568,  1.1727,
        -2.5657, -1.2001,  1.4011, -0.2647, -2.3391, -1.6614,  0.0831,  3.3924,
        -0.8201,  3.2684, -1.5178,  0.0644, -0.8598,  0.3419,  2.6148,  0.3116,
        -4.1040, -2.0377, -1.8588, -0.2209, -3.1019,  1.1079,  2.4966,  1.8792,
        -2.2741,  3.7263, -1.2806,  2.6658, -1.5765, -1.2095,  1.6682,  1.7600,
        -1.1118, -0.3568,  0.5811, -1.4765, -0.4522,  2.1079, -2.5824,  2.8008],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,246 - myNeural - INFO - Forward Pass: tensor([-3.5700,  0.4583, -0.4262,  ...,  2.1584, -1.0282,  0.8040])
2021-05-25 09:10:36,260 - myNeural - INFO - Forward Pass: tensor([ 0.2332, -0.2981,  2.6778,  1.3924, -1.0883, -2.7015,  2.3044,  1.9544,
        -1.1231,  0.0314, -0.4443, -1.1029, -2.8377,  0.9909,  0.1214,  0.7383,
        -2.0841, -1.8388, -3.0682, -1.2585,  0.4326, -0.1822,  1.9797, -1.3092,
        -1.4092, -0.6657, -1.0638,  1.7004,  3.0085,  1.0246, -0.9930,  1.7824,
        -0.6893, -0.9541, -0.9217, -1.5671, -1.9199,  0.4992, -0.9258,  0.1637,
        -0.1883,  1.5952,  1.7814, -2.6319,  1.0183, -0.9415, -2.0306, -3.3269,
         2.1889,  1.2770,  0.3665, -2.7735,  3.2299,  1.8932, -0.8856, -2.3127,
        -1.8045,  2.0612, -0.3497,  2.7849,  0.9947,  0.3446, -2.9676,  2.4334,
         0.5692, -1.2755,  1.2777,  0.4112, -1.5498, -3.3232, -1.3672,  0.7090,
        -1.5710,  2.8298,  1.4505,  3.9503, -1.8056,  1.3324, -1.6167, -1.9074,
        -1.9590, -0.7550, -2.6373, -1.3664,  0.3269,  1.7540,  0.2561, -2.2572,
         0.4844, -1.0053, -0.7694,  3.8784, -2.0454, -0.7221, -1.0809,  2.0122,
         0.5601, -1.7721, -1.4490,  2.8469,  1.7083,  1.8695, -2.4252,  0.5922,
        -4.2052, -3.9071, -0.0542, -1.8712, -1.5433,  1.7455,  3.1660, -0.6974,
        -2.7493, -1.6101, -1.1804,  1.0219,  1.6476,  2.0784, -2.4675,  1.4155,
        -0.1932, -2.1383, -0.7907, -2.2239,  0.0359,  0.8564, -2.6036, -2.4672],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,275 - myNeural - INFO - Forward Pass: tensor([-3.1036,  0.7531, -0.2254,  ...,  2.2988, -0.7827,  0.9661])
2021-05-25 09:10:36,289 - myNeural - INFO - Forward Pass: tensor([ 0.3048, -0.6992, -1.9494, -1.5149,  0.1743,  1.6827,  0.9202,  2.5365,
        -1.0811, -0.5869, -1.6772, -1.8233, -0.5461, -1.7222, -2.1863, -1.6658,
         0.6380, -0.9670, -1.9194,  0.1493, -0.0987,  2.4567,  1.2828, -2.4893,
        -4.1831,  0.8727,  2.3054,  1.8170, -0.9794, -0.2471,  2.3361, -2.0137,
        -1.2961, -1.3838,  1.6564,  0.4039,  2.1923, -1.1356, -0.5903,  0.2302,
        -0.2047, -1.1631,  3.8456,  2.4598,  1.1803,  1.7568,  3.2632, -0.4354,
         1.4842, -3.7755, -1.6264, -2.7011, -0.6611, -0.6359, -4.1816,  1.0324,
         0.0770,  3.4018, -2.4220,  1.0596, -2.9101, -1.2409,  3.7231, -1.6878,
        -1.7166,  1.8559,  0.4207,  0.1598,  1.9707,  0.8529,  0.0483, -0.1231,
        -0.6776,  2.3144, -0.0878, -0.7074,  1.6090, -0.6108, -2.4616, -1.2680,
        -0.2681, -3.3145,  0.0481, -0.8274, -1.5478, -1.3107,  0.2373,  1.5295,
         2.5931,  1.2202, -1.4610,  1.4139, -1.5205,  1.4287,  1.2727, -1.6739,
         2.0978, -3.0626, -2.4402,  1.8019,  1.0838, -1.9158,  2.4470, -1.4309,
         0.2135, -1.3358, -0.7375, -0.8763, -2.3952, -1.1807,  2.4410,  0.1297,
        -0.8067,  0.1106, -2.6770, -2.4236, -0.8950, -3.1431,  1.4864, -0.9210,
        -0.2104,  2.8250,  0.2630,  1.4697,  0.1598, -1.4997,  2.4300,  1.8269],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,302 - myNeural - INFO - Forward Pass: tensor([-2.7126,  0.9277, -0.0248,  ...,  2.3610, -0.4914,  1.0353])
2021-05-25 09:10:36,317 - myNeural - INFO - Forward Pass: tensor([-3.7062,  2.3702,  2.8722,  1.9747,  0.8983,  0.9177,  2.2135, -1.2399,
        -2.1758,  3.6612,  2.4955, -0.6601,  0.9734, -1.6764,  0.6384, -2.2076,
        -0.3315,  1.9215, -1.7548, -1.4839, -0.3218, -2.2677,  2.4411,  2.9427,
        -1.5623,  1.0229,  1.5181, -0.3880,  1.3812,  0.6405,  0.1100,  0.8176,
        -0.3868, -0.9222,  0.1482,  0.7686,  2.6069,  3.0626,  2.5173,  1.6842,
         1.4661, -0.2645, -1.6455, -0.8465,  1.5833, -1.7004, -1.7660,  0.2323,
        -1.0264,  1.8736, -1.4520,  0.8425,  0.8996,  2.3998,  0.8400, -0.1040,
         0.3438,  2.7525, -0.3966, -2.6327,  4.3502,  3.8715, -0.3418,  0.3484,
         1.7202,  0.2146, -2.0875,  1.7030,  1.0843, -1.8088, -0.0695,  0.7389,
         1.0973,  3.1762, -0.8677, -1.5055, -0.4144,  1.2291,  0.7338,  2.1002,
         0.9665, -3.2974,  2.2708, -0.2831,  1.7938,  2.2243,  1.0500, -2.2002,
         0.5137,  1.3947,  1.2369, -1.4686,  3.4221, -2.3396,  0.1782, -0.4706,
         2.4907, -0.9818,  0.4460, -1.0583,  3.1870, -0.5242, -1.2249, -0.4720,
        -0.0302, -1.1409, -0.8528,  0.7885, -2.7766,  1.2793, -1.0791,  1.8039,
        -0.0340, -0.9807,  3.6564, -1.2574,  2.6063,  1.4959,  1.8948, -0.9904,
         0.3420,  3.5168, -1.0539, -1.3691, -0.4142,  2.7253, -2.5688, -1.0918],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,333 - myNeural - INFO - Forward Pass: tensor([-2.9877,  0.5025, -0.5514,  ...,  1.8716, -1.0947,  0.8031])
2021-05-25 09:10:36,351 - myNeural - INFO - Forward Pass: tensor([-0.0777, -0.3744,  1.7701, -1.4674, -3.9633, -0.2492,  0.8674,  1.6729,
        -2.6999,  4.1222, -0.9270,  2.9585, -0.2908, -0.9871,  3.1338,  1.9152,
         2.8860, -1.4226,  3.5559,  1.6701, -0.7548,  2.3526, -1.3297,  3.1474,
        -3.1016, -2.5118,  1.0201, -2.2570,  1.9726,  3.1822,  0.1892, -2.2266,
        -2.1144, -1.1152, -0.9797, -2.0122, -1.4406,  2.1672, -2.0122,  0.4855,
         3.2545,  4.5643,  1.6442, -0.4331,  0.3330, -3.2200, -3.1425, -1.5733,
        -0.2703, -2.8869,  0.2458,  0.7524,  1.4414,  0.0268, -1.0270,  3.1129,
        -1.2770,  0.1504, -3.1210,  5.1124,  1.7366,  1.0576, -1.1671,  2.5361,
        -0.1335, -1.1271, -1.5081,  1.0292, -0.5262, -0.4276, -5.1226,  0.2016,
        -0.1815,  0.4312, -0.7139, -1.3455, -0.9206, -2.6736, -1.6374, -3.7260,
        -1.6834, -1.3535,  1.7631,  0.0499,  0.3749, -0.6981, -4.6569, -2.1860,
         0.8937, -1.3034, -1.3803,  0.3198, -0.4214,  2.0671, -1.5490,  1.3016,
         2.1595, -0.4967, -0.0707,  1.1825,  1.5039,  2.6027, -1.4131,  2.7948,
         2.2066,  2.2937,  1.3402, -0.1741, -4.2806, -2.8271, -1.2316, -0.2736,
        -2.3155,  2.2937, -3.2690, -3.2006, -1.6889, -0.6803,  2.3850, -2.0571,
         0.9636, -1.5327, -0.7472, -2.3958, -2.7989,  0.0523, -0.1196,  0.1482],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,366 - myNeural - INFO - Forward Pass: tensor([-2.9852,  0.8500, -0.4222,  ...,  2.2943, -0.7803,  0.9773])
2021-05-25 09:10:36,381 - myNeural - INFO - Forward Pass: tensor([-1.6472, -2.6847, -0.3369,  1.3399,  2.8234, -1.3134, -1.6660, -4.3897,
        -1.6263, -0.5959,  3.1643,  1.8022,  0.2686,  0.7678, -1.1184, -1.3138,
        -1.0207,  1.3402, -4.0251,  0.0146, -1.7589,  2.4003, -3.7483, -0.1307,
        -1.1603, -3.5805, -3.8548,  0.1912, -0.0382, -0.7374, -0.7904,  1.4945,
         1.1056, -2.3996,  2.1431, -2.6958,  0.2479,  2.3989,  0.6798,  1.6096,
        -0.9066, -3.8199,  1.8642,  0.9905,  2.8438, -2.6698, -0.9953,  0.2207,
         2.2273,  2.2051, -0.2920, -1.9121,  4.3793,  0.5744,  0.8530, -2.5296,
        -0.4792,  0.8986,  1.2365,  2.1109, -1.5780, -0.3952,  1.4956,  0.7498,
         2.2911, -0.7200, -0.2405,  2.9903, -4.0764,  1.9686,  2.5804, -2.0949,
        -3.7453,  1.0899, -1.8408,  0.7371, -0.3176, -2.4884,  0.4411, -4.2120,
         0.9630,  1.9886, -2.2631,  1.5935, -0.2491, -1.9056, -0.0345, -3.2441,
        -0.8497, -2.8220, -1.6216, -0.4331, -0.1041, -1.0153, -0.3771, -2.6540,
        -0.3691, -0.6073,  0.7240, -1.7617,  1.5652,  1.6737,  2.0314, -1.5474,
        -1.1810,  3.4747, -2.5229,  2.4911, -0.7076,  4.1926, -0.9525,  1.9782,
         2.7843, -1.6379, -2.9313, -2.0654,  0.8383,  0.9177, -0.7209, -3.0130,
         1.9853, -0.4022, -3.3183,  0.9718, -2.4535,  0.3321, -0.4923, -1.5996],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,396 - myNeural - INFO - Forward Pass: tensor([-3.7276,  0.2943, -0.8924,  ...,  1.9472, -1.4389,  0.5171])
2021-05-25 09:10:36,411 - myNeural - INFO - Forward Pass: tensor([-2.4643,  1.3969, -2.1803, -2.2127,  0.6450, -2.3260, -0.2418, -0.4616,
        -5.0636,  1.9374,  1.7851, -0.8439,  1.0036, -1.6800, -0.8557,  3.1885,
         1.8813, -0.2936, -3.4190, -2.0414, -2.0656, -3.2930, -3.3621, -4.3412,
        -2.6138,  0.7608, -0.2334, -1.7636, -1.1481, -2.0593, -1.7322, -2.1608,
        -1.8734,  1.5927,  0.8774,  1.0066, -0.5196, -3.3776,  2.7453, -0.1764,
        -1.5242, -2.3174, -1.9150, -1.0750, -1.0792,  0.2569, -3.4738, -2.2319,
        -1.3863, -3.7823, -0.0248, -3.4720, -0.7657,  0.5069,  3.0148, -0.8890,
        -0.0752, -3.6013, -0.9464, -3.3768,  1.9091, -1.1856,  0.8739,  1.8533,
        -1.5286,  0.4891,  2.2842, -1.8119,  0.4560,  0.5909,  3.1742,  2.0724,
        -1.1478, -3.4076,  1.0156,  2.1195, -0.3863,  2.0116,  0.5185, -1.4749,
        -0.6357, -2.2377, -1.0206, -0.2249, -3.8112,  1.2014, -0.1154,  2.1685,
        -1.5013,  1.8533,  0.9841,  1.6937, -0.4686,  3.2802, -0.3987,  0.3803,
        -0.1344, -2.0531, -2.9758,  0.4871,  1.9127, -3.2575,  1.1851,  0.8982,
        -0.6623,  1.6659, -1.9805, -3.0746,  1.6977,  0.4787,  0.2128, -3.8066,
         3.9111, -0.1492, -0.3310,  3.8276, -0.9318, -0.8285, -3.2586, -2.0978,
        -0.6171,  1.6424,  3.0846,  2.0334,  0.0586,  1.6311, -1.3691, -1.1340],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,426 - myNeural - INFO - Forward Pass: tensor([-2.9970,  0.8635,  0.1092,  ...,  2.7745, -0.8961,  1.3182])
2021-05-25 09:10:36,441 - myNeural - INFO - Forward Pass: tensor([ 0.2017, -0.8295, -0.6893,  1.5735, -2.1470,  1.5866,  0.9909,  1.8019,
         0.2898,  3.5461, -4.6045,  1.1922,  2.8025, -0.2321,  0.7597, -3.3367,
        -0.0517,  2.7433, -0.6404,  1.4568,  0.6446,  0.2326,  0.2441, -1.0675,
         0.8661,  3.3809, -0.1990, -1.2475, -1.1154,  2.7198,  3.4034, -2.0005,
        -2.0065, -3.8820, -1.9672,  2.8848,  0.3099, -0.7491,  0.9798,  5.3837,
         0.9467,  2.4710, -0.3326,  0.3038, -2.5832, -1.6785,  2.4372,  2.1991,
         0.1164, -3.7704, -0.4116,  1.7206,  3.6236, -1.1834,  3.0031,  1.4721,
         2.0649,  3.5157,  2.3720, -0.5485, -0.8051, -1.5335,  3.4896,  0.2236,
         0.5075, -2.6732, -2.5475,  0.5703, -0.2644,  1.4948, -0.8670, -0.0385,
         0.0990,  1.5581, -1.6732,  1.5735, -2.0115,  1.1766,  3.6155,  1.5929,
        -1.3152,  3.6210,  1.6362,  2.5520,  2.8893,  1.0793,  1.9791, -1.0680,
         2.1917, -1.1527,  1.9555, -0.7929, -0.3425, -2.5875,  2.6336, -2.5062,
        -0.5773,  1.2168,  0.9637, -0.2232, -2.8388, -0.9981,  0.1937,  3.6515,
         0.7061, -0.5758, -1.5696,  0.4412,  2.5981,  0.5272, -0.2285, -2.6464,
        -1.7546,  0.3737,  0.2606, -0.1196, -3.6263, -1.0557,  0.2540,  1.5501,
        -1.5611,  2.8078, -0.1788, -0.7153,  1.3586,  2.1326,  3.7364,  0.8223],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,456 - myNeural - INFO - Forward Pass: tensor([-3.2620,  0.4818, -0.1471,  ...,  2.5133, -1.3067,  1.0218])
2021-05-25 09:10:36,470 - myNeural - INFO - Forward Pass: tensor([ 0.9421,  4.3266,  2.1573,  1.1780,  0.5101, -4.4513,  2.1870,  2.6381,
        -0.6134, -2.4257,  3.1072,  2.0522,  1.2585,  4.4163,  2.5096,  0.8915,
        -0.0199, -0.1516, -0.6611,  0.4988, -4.6638,  0.3571, -0.6108, -0.5778,
        -3.5823,  2.1484,  0.3218, -1.3419, -1.5998, -3.8432, -3.4794, -1.5931,
         0.9760,  3.5343, -3.2368,  1.6529,  0.0516, -1.6151, -2.1487,  0.7257,
        -4.4806, -2.5336, -0.5918,  0.9555,  1.2411, -0.8236,  2.3383,  1.0039,
        -0.4217, -0.3885,  2.4892,  0.1797, -2.1757, -1.2691,  2.2979, -1.6689,
        -1.5613,  1.4747, -3.2495,  2.0052, -1.5532,  0.2717,  3.1337, -2.5514,
         0.5236,  0.6381, -2.9026,  1.8575, -1.5552, -4.0533,  2.1937, -2.8669,
        -2.6423,  0.2760,  2.4612,  0.1600, -2.0897, -0.7534,  2.4522,  1.5628,
         2.2152,  0.3340, -3.3928,  1.6697,  1.5166,  2.7275,  0.2199, -0.6392,
         1.6618,  0.3784, -1.3617,  0.8362, -1.4344,  0.5005, -0.1499,  0.2001,
        -0.6524, -0.2018,  0.9388,  3.1469,  2.3991, -0.7082, -0.6822,  2.8677,
        -3.3252, -0.7476,  1.8596, -2.0862,  0.4999, -0.2746,  1.4780, -2.2011,
        -0.5718, -0.6595, -0.4194, -3.4200,  1.5783, -2.2881,  0.3314,  3.3424,
         2.1676, -0.8897, -1.3436,  4.0652, -4.5835,  3.1735, -0.0175, -0.4988],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,485 - myNeural - INFO - Forward Pass: tensor([-3.2237,  0.6100, -0.3287,  ...,  2.6332, -1.2040,  0.8062])
2021-05-25 09:10:36,499 - myNeural - INFO - Forward Pass: tensor([ 1.4144,  0.2702,  3.0404, -2.1974,  1.9742,  1.5264,  1.6512,  1.4857,
         0.0338,  3.2181, -0.9331,  1.5342,  0.3389, -1.0045, -1.0378, -5.0046,
         1.9397,  0.9576,  1.5455, -1.8624,  3.4682, -3.1357,  2.7225,  1.9007,
         2.7451, -2.0473, -0.8596,  0.4671,  0.1145, -1.4857, -1.1632,  0.0544,
        -1.5017,  3.5199,  2.0276,  0.2644, -3.1991, -2.1505, -0.7236,  1.6039,
         0.5265, -0.1997, -2.0941,  2.7378,  1.8969, -3.3169,  1.8087,  1.0054,
         2.9067,  3.0068, -0.3739,  4.1985,  2.7185, -2.9069,  1.3878,  0.4534,
        -1.0600, -0.4778, -2.8903,  3.2307,  2.1286,  2.3226,  0.3964, -2.5551,
        -1.7848,  3.4426, -0.8958,  4.1216, -0.2322, -0.1815,  0.0610, -0.2531,
         2.3525, -2.1197, -2.3573,  2.9513,  0.8200, -2.8064,  1.2373,  2.0882,
         3.6649,  1.7437, -1.3986, -0.4530,  1.8340, -0.7290, -1.9494, -1.1273,
        -0.7485, -4.0124,  2.7091,  0.6140,  2.7635, -2.6144, -3.4291,  1.0164,
         3.0508,  2.4343,  3.1808,  1.1250, -0.1936, -4.7854,  0.5133,  1.7865,
         2.8040, -1.0634, -1.0448, -2.5121, -1.1884,  4.7098, -1.5738, -1.9690,
        -0.7931, -0.6105, -0.9990,  2.0367, -1.0846,  3.3717,  0.9081, -2.5824,
         3.7546,  0.3940, -0.7142,  0.2991, -1.0193,  2.6450,  1.4327, -3.8542],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,513 - myNeural - INFO - Forward Pass: tensor([-3.1113,  0.6067, -0.1785,  ...,  2.7870, -1.0071,  0.8741])
2021-05-25 09:10:36,525 - myNeural - INFO - Forward Pass: tensor([-0.5479,  1.2317, -1.6880, -3.6476,  0.2774,  0.0247, -0.4688, -0.1916,
         1.4950, -0.8047,  4.1106,  1.3457,  1.3113,  1.5299, -0.0317, -3.2476],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,539 - myNeural - INFO - Forward Pass: tensor([-4.1057, -0.4173, -0.1603,  ...,  2.5765, -1.4971, -0.1504])
2021-05-25 09:10:36,579 - myNeural - INFO - Forward Pass: tensor([ 0.8488, -1.7350, -2.7996, -2.0702,  2.2598, -0.8831, -3.7108,  1.2199,
         1.6468,  0.3287,  0.9157, -0.1581, -0.8986,  1.7135,  0.2273,  0.6459,
        -1.2627,  1.5277, -1.5575,  1.4942,  0.8570,  0.9437,  3.1325, -2.3748,
         3.3699, -2.8221,  0.7225, -1.9513, -3.5730, -1.5831,  0.5560, -4.0020,
         2.6660,  3.2382,  3.0252, -3.4457, -2.5548, -2.6843,  1.1954, -2.3075,
        -1.4637,  4.0495, -0.9784, -3.7108, -1.7487,  1.1941,  1.4900,  4.4075,
        -1.4445, -1.1547,  1.6129,  0.8752, -2.3969, -1.7012, -1.3936, -2.4385,
        -1.0889, -2.2071,  2.9973, -0.6770, -0.4094, -1.5147,  1.3882,  0.1666,
        -2.2647,  0.7306,  1.2685,  2.2893, -2.9533, -2.5884, -0.8002,  0.5954,
        -0.5694, -2.5698,  3.3487,  0.6529, -2.8059,  1.3756,  2.2519, -3.0184,
        -3.6659, -3.4816,  1.7123, -2.3622, -0.4828, -3.0897,  3.3411,  0.0059,
         1.0000,  1.0541,  0.3943, -0.7353, -3.0771, -1.1847, -2.3114, -2.0399,
         1.4716, -1.5020, -3.6055, -3.3470, -3.2150,  1.7092, -0.4704, -2.7989,
        -1.0355, -3.3158, -3.3848, -3.1395, -0.0195,  1.2493, -0.8335,  2.0252,
         0.7587,  1.3767, -0.4984, -1.7013,  0.1893, -0.7875, -1.2608, -0.2163,
        -0.1535, -0.7266,  1.9141, -1.2974,  1.1466, -2.3470, -0.4131,  2.1409],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,593 - myNeural - INFO - Forward Pass: tensor([-3.5757,  0.4952,  0.6663,  ...,  3.2474, -0.8821,  0.5450])
2021-05-25 09:10:36,609 - myNeural - INFO - Batch 0 -- TrainLoss: 0.32297 -- TrainAcc: 88.28125% -- TestAcc: 81.10000%
2021-05-25 09:10:36,614 - myNeural - INFO - Forward Pass: tensor([ 3.8201,  1.0574,  4.9759, -1.4985, -2.1955, -2.8258,  0.4745,  3.6146,
        -0.7649, -4.5008, -1.2880,  1.5773,  1.2472,  1.8036, -0.7908, -3.2626,
        -2.9292, -1.3336, -1.6763,  2.2181,  0.1423,  1.0553,  3.9815, -0.7434,
         2.2493,  4.3383, -2.2482,  0.3775,  3.8809,  2.8673,  4.7437,  4.3448,
        -0.7919,  1.2538,  4.0741,  0.2181, -2.5104,  3.6958, -0.2592,  3.1434,
        -0.9723,  3.4187,  2.5147,  0.3895, -1.5159,  1.1195, -3.6005, -0.8500,
         0.7100, -4.0456,  1.2910,  0.6171, -1.3407, -2.4083, -1.3581,  2.6729,
        -2.9715, -5.3616,  4.4023, -2.6058,  2.6379,  0.3871,  3.1810,  1.9278,
        -0.0860,  2.5192,  0.9322,  1.6036, -0.2445,  0.6284, -1.7547,  3.1113,
         2.0455, -0.8496, -2.9624,  2.9961, -0.3457,  0.5342, -3.1919,  2.3817,
        -0.3820, -1.2828, -3.0882, -0.4119,  0.8512,  2.7198, -3.4861, -2.6712,
         1.8093,  3.0855, -2.4752, -4.3656, -3.4261,  2.8323, -0.8175,  2.2708,
        -2.1090,  5.1593,  2.4597,  1.9240,  0.8563, -2.4739, -1.3072,  0.3411,
         4.2158,  0.2797,  3.3992, -0.4669,  2.1863,  1.1229, -0.7885,  3.0555,
        -2.6466,  4.7480, -0.9068,  0.4836, -1.4058,  2.2636,  1.9128, -0.1812,
         1.1582,  1.4993,  2.4735, -1.2315,  0.5736,  1.3266, -0.2362, -1.8763],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,631 - myNeural - INFO - Forward Pass: tensor([-3.6181,  0.5593,  0.7340,  ...,  3.4120, -0.9994,  0.6231])
2021-05-25 09:10:36,646 - myNeural - INFO - Forward Pass: tensor([ 3.2652,  3.9787,  1.6608,  0.5142, -2.1422, -1.5138,  0.3168,  1.1797,
        -1.8159, -3.4109, -3.8403, -3.5122, -2.7398, -0.3703,  1.2079, -0.9956,
        -1.8800, -4.1762, -0.7786, -0.7076,  2.5942,  0.2793,  2.2389,  2.0741,
         0.0994,  0.0528,  1.7113, -1.9302,  0.0881,  0.8619, -1.3047,  2.0593,
        -0.0051, -0.2007,  2.9446, -2.8910, -1.0641, -2.8344,  4.9734,  1.8602,
         3.9723, -1.0691, -3.1493, -1.2584,  0.9497,  1.5423,  3.0128, -1.3278,
         1.6809,  0.7302, -2.6843,  0.5538,  3.4542, -2.6317,  2.9881,  3.1829,
         1.9420, -1.2073,  0.8420,  2.8278,  0.1366,  3.6752, -0.0810,  1.6154,
         1.7619, -4.0001, -1.3148, -2.9148,  4.4087, -1.4109, -2.0719,  0.0314,
        -1.4960,  2.9589, -1.8354,  2.2373, -2.7451, -3.0100,  3.2824, -1.9907,
         0.8841,  1.8391, -1.9756, -0.8895,  1.4702,  0.9020, -0.3224, -1.2455,
         1.9636,  1.6380, -4.3977,  1.3089, -0.6319, -2.5000,  1.5106,  0.2553,
         3.5916, -0.1762,  4.3499, -0.5689, -0.8918,  1.4296, -3.3434, -0.7705,
        -2.3282,  1.7353, -1.0085, -0.1789,  1.5826,  1.9901, -1.2677,  1.1986,
        -1.4667,  2.0733,  2.4819,  3.4080,  0.7070,  3.0533, -3.1454,  3.4081,
         2.6904,  2.7941,  1.6182,  0.0600,  2.0383,  0.4651, -0.5788,  1.6578],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,662 - myNeural - INFO - Forward Pass: tensor([-3.2634,  1.0867,  1.1649,  ...,  4.0008, -0.6164,  1.1889])
2021-05-25 09:10:36,678 - myNeural - INFO - Forward Pass: tensor([ 2.9386,  0.5613, -3.2811,  4.6808,  3.2748,  0.2561, -1.9261,  4.3600,
         2.5047,  0.9050,  1.5378,  1.9514,  0.0454, -2.0903, -3.6921, -0.2652,
         4.1712, -1.3300,  2.3182,  0.7993, -4.1799,  1.2447,  1.5200,  0.7397,
         2.0764,  0.4845, -1.9803, -2.5796,  1.2533, -1.8014, -6.3249,  3.5252,
         0.2451,  3.4506,  3.4251, -2.7037,  2.3857,  0.0198,  1.7497, -0.2738,
        -0.5083,  0.8269, -2.0786, -0.4487, -1.0124,  0.2574,  3.6754, -3.0298,
         1.5732,  1.8074, -4.7545,  2.2472, -0.6705,  2.6439, -2.6378,  3.6240,
         3.3984,  1.7198,  3.3195,  2.3807, -0.6549,  1.0408,  0.9727, -1.7039,
         0.2541, -3.1807, -2.4159,  2.8425, -1.0284, -1.7990, -2.9195,  1.7445,
         0.2785,  2.5206,  0.7195, -2.9772,  0.4685, -0.6613,  2.4388,  0.3291,
        -0.6810,  0.6277,  2.0958,  4.7654,  3.5221, -0.3543,  3.8199,  3.0006,
        -1.6554,  2.7444,  1.5815,  0.7861,  3.2362,  4.2512, -0.2361, -2.0741,
         0.2343,  0.6305, -0.3789,  1.2959, -0.8406,  0.0075, -3.5069,  3.0822,
        -2.7908,  1.3768,  4.7041,  1.6598,  1.5628, -2.0407, -2.8622,  1.3249,
         0.3001,  0.6571,  2.9526, -1.8101,  2.5282, -1.6087,  1.7438,  1.0968,
        -3.1650,  4.4639, -0.5303, -1.1508,  3.0172,  2.7180,  0.2858,  0.5669],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,693 - myNeural - INFO - Forward Pass: tensor([-4.0772,  0.2402,  0.0836,  ...,  3.3317, -1.3335,  0.6989])
2021-05-25 09:10:36,711 - myNeural - INFO - Forward Pass: tensor([-1.4385,  0.3913, -1.2559, -0.1430, -3.0423,  1.8582, -0.3127,  4.0867,
        -2.3732, -1.5787, -2.5458, -1.8156,  0.6654,  1.5382,  3.6562,  1.2284,
        -2.2763, -3.2842, -2.9998,  5.1062, -2.3475, -2.8418,  0.7133, -0.4972,
        -3.9538,  0.6431,  1.2930, -1.4906,  1.2188, -2.6738,  0.7867, -1.8046,
         2.1102,  1.2637,  0.7011,  3.1239, -1.6834,  1.9068,  0.4918,  3.2258,
        -0.2754,  0.5013, -1.6464, -3.5583,  1.1219, -1.4927, -1.8269, -1.2591,
        -3.7458, -2.0286,  1.3523,  2.3813, -0.1089,  1.2178, -1.9967,  1.0068,
        -1.6987,  3.0663,  1.9592,  0.9697,  3.7783, -0.5167, -0.0871, -2.6411,
         1.4851,  2.1391, -0.6762,  0.5176,  1.4079,  1.2331,  0.9881, -0.6345,
         3.5700,  0.5206,  1.9601, -2.6373,  1.0485,  2.9263,  1.9457,  0.4743,
         0.2461,  1.4890,  0.9934,  0.7497, -2.0702, -2.1262,  0.9883, -2.9360,
        -1.5077,  2.9349,  1.3211,  0.7120,  1.0775, -3.0724, -1.2995, -2.6388,
        -2.7267,  1.1988,  4.5284, -2.1892, -0.2346,  3.8335, -4.8665, -2.1257,
        -0.6722,  2.1792, -2.3015, -2.9916, -0.1770, -4.2581,  1.4671,  0.0157,
        -0.1887, -1.3405,  3.1406,  0.9879, -1.8585, -3.6851,  1.3696, -2.0058,
         0.8929,  3.7945,  2.1645,  0.0318,  3.5895, -5.0003, -0.1771,  1.3160],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,726 - myNeural - INFO - Forward Pass: tensor([-3.9092,  0.3652,  0.1876,  ...,  3.4728, -0.7053,  1.0094])
2021-05-25 09:10:36,742 - myNeural - INFO - Forward Pass: tensor([ 0.6482, -3.4962,  1.8393,  0.5917,  0.6527, -1.4844, -1.1042,  4.2328,
         1.5423,  2.7359,  0.8355, -0.2678, -3.3573,  0.7580,  3.2866,  0.7828,
        -1.4504,  2.1731,  3.4556,  0.5451, -1.9130, -2.7132, -4.2679, -3.1025,
         3.2379, -0.8004,  0.3146, -1.8148, -3.4282, -1.4046,  0.7292,  1.2249,
         2.2867,  1.2640, -1.7272, -1.1391, -3.4920, -2.0107,  3.0786,  0.4925,
         0.7318,  3.5153,  3.5124,  0.5455,  0.8149, -0.7864,  0.1384, -1.1300,
        -2.0338,  2.5772, -3.8672,  0.7448, -1.7022,  1.1120,  0.5843,  2.7709,
         3.8350,  2.7404, -1.0046,  1.0245, -1.4679,  1.5913, -4.0580, -0.4351,
         1.0063, -2.0133, -3.3370, -2.4281,  1.1421, -1.3222,  4.5813, -1.1462,
         3.6004, -2.1370, -4.7206, -2.7338,  0.2327,  3.4978, -4.2464,  4.9146,
        -3.7422,  2.8052,  0.1926,  3.4640,  0.9296, -3.4142, -1.1056, -1.7423,
         3.1666,  6.8781, -0.6811,  0.0355, -1.3985, -2.5774,  0.0984,  7.7018,
         0.5306,  5.9346, -1.7683,  4.9931, -2.3543, -3.5197, -3.7463, -0.2577,
        -2.0464,  0.7715,  2.5643,  4.6899, -1.3690,  5.1463, -0.8721, -1.7883,
         1.1995,  0.2436,  2.9438,  2.7300,  1.4816, -1.5026, -0.3925,  3.4788,
         1.3385,  3.5856, -3.6755,  4.2058,  2.6204, -3.5478, -0.8510, -3.8828],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,758 - myNeural - INFO - Forward Pass: tensor([-3.7149,  0.6409,  0.5906,  ...,  3.6933, -0.2300,  1.3879])
2021-05-25 09:10:36,775 - myNeural - INFO - Forward Pass: tensor([-1.3519, -0.6277,  0.2980, -3.1723,  1.2678,  0.0454, -0.9860,  2.4839,
         1.4442,  0.8262,  1.4322, -2.0891, -1.4039,  1.6142,  2.2383,  1.2543,
        -2.4569,  0.8164, -1.6149,  3.8589, -0.8805, -1.2899,  3.9790, -1.3595,
         1.2896, -1.7832,  2.3045, -4.5404,  0.7443,  2.9520, -0.1203,  1.8933,
        -0.4008, -3.2534, -0.6165, -3.3449, -1.1061,  1.9449, -3.7361,  2.7766,
        -1.1485,  1.5041,  0.3767,  1.8649, -1.0794,  2.3564,  2.6208, -0.2461,
        -1.3344,  3.5810,  3.7189,  0.8707, -2.7531,  2.0006, -1.0193,  1.1376,
        -1.8533, -2.2198,  1.7410, -4.8465,  1.5508,  2.2515,  6.1125, -1.8895,
         1.4228,  0.5189, -0.5630,  3.0927,  0.0306,  3.0149, -0.0354,  2.2226,
        -2.3690, -0.6840,  1.1434, -2.8269, -0.7414,  0.6791,  1.4949,  0.6937,
         0.7078,  0.1751,  1.9547,  2.2202,  4.2559,  4.6466, -0.7600,  4.1989,
         2.4499, -1.3649, -0.7594, -0.5962, -1.6514, -2.1725, -0.1477,  1.1081,
         3.1086,  0.4810,  0.9892,  0.9225,  1.7825, -2.1433, -2.4464,  3.1980,
        -3.4195,  1.3540,  0.6519,  3.2614, -1.3529, -1.8664, -1.0610,  1.4210,
         2.7394,  3.7819,  0.9919,  3.9354,  3.0971, -0.5606, -0.7424, -2.1768,
         0.9372, -0.3556, -0.7183,  0.6788,  3.5065, -4.0918,  1.8835, -1.0508],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,789 - myNeural - INFO - Forward Pass: tensor([-4.2797, -0.0427, -0.0693,  ...,  2.8768, -1.0048,  0.6683])
2021-05-25 09:10:36,804 - myNeural - INFO - Forward Pass: tensor([ 3.4510e+00, -5.1802e-01,  4.3218e+00,  5.6250e-01,  3.5629e-01,
        -1.0145e+00, -3.0624e+00,  2.0925e+00,  2.4435e+00, -1.4603e+00,
        -2.1282e+00, -6.9787e+00, -2.4289e+00, -6.0446e-01,  2.5482e+00,
        -5.7407e-01, -2.9661e+00, -2.8756e+00, -7.5739e-01, -1.1548e+00,
         1.9757e+00,  3.6104e+00,  5.4843e-01, -2.1461e+00, -9.6236e-01,
         2.9433e+00, -4.7349e+00, -2.1946e+00,  1.2037e+00, -9.8494e-01,
        -1.1167e+00, -9.4476e-01, -1.2222e+00, -2.4527e+00, -2.9511e+00,
        -3.4650e-01,  8.6276e-01,  6.9698e-01, -1.8063e+00, -9.7561e-01,
        -6.7763e-01, -1.8618e+00,  2.8921e+00,  2.9705e-01,  1.3906e+00,
         7.5423e-01, -3.1474e+00, -1.5900e+00,  2.1064e+00, -3.6617e+00,
         3.0457e+00, -1.8382e+00,  2.9396e+00, -5.3854e+00, -1.0204e+00,
         1.1568e+00,  7.9875e-01, -4.1895e-01,  1.0335e+00,  3.0480e+00,
         3.5732e+00, -1.4434e+00,  6.5659e-01, -1.6612e+00,  1.6300e+00,
         1.2197e+00,  7.4464e-01, -7.6426e-01, -2.9114e+00, -2.3639e+00,
         3.0549e+00, -3.0685e+00,  4.2510e+00, -1.6956e+00,  1.7915e-01,
         2.1397e-01, -1.2966e+00, -1.5767e+00, -2.2121e+00,  4.0135e+00,
        -3.9121e+00,  3.8175e+00, -7.4458e-01, -2.4311e-01, -1.3834e-01,
        -1.5687e+00, -6.2370e-01,  2.5478e+00,  3.4591e+00, -3.6805e+00,
         8.2089e-01, -5.3841e-01, -2.6298e+00,  4.3548e-03,  9.8696e-02,
        -2.5317e+00, -2.5176e-02,  1.9268e+00,  2.5035e+00, -2.0126e+00,
         5.8575e+00, -9.8599e-01,  2.1481e+00, -1.7720e+00,  1.1157e+00,
         4.7182e+00, -1.3156e+00,  6.5870e-01,  4.3786e+00, -2.1127e+00,
        -1.3106e+00, -2.2972e+00,  1.7906e+00,  3.8162e-01,  1.6113e+00,
         1.4857e+00,  4.5092e+00,  5.5909e-01, -2.4651e+00, -3.7814e+00,
         2.2700e+00, -1.2897e+00, -2.0358e+00, -1.9131e+00, -2.1190e+00,
         8.9367e-01, -4.1436e-01, -1.5566e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,817 - myNeural - INFO - Forward Pass: tensor([-4.1418,  0.3571,  0.3289,  ...,  3.4973, -0.7006,  1.0838])
2021-05-25 09:10:36,832 - myNeural - INFO - Forward Pass: tensor([ 3.0743e+00,  6.2971e+00,  3.0789e+00,  3.7353e+00, -2.1019e+00,
        -1.9859e+00,  2.6573e+00,  2.2534e-01, -1.1693e+00, -2.2851e+00,
        -2.4506e+00, -7.7648e-01, -2.0468e+00,  3.7780e+00, -4.2256e-02,
        -1.7099e+00,  1.5909e+00,  1.2701e+00,  2.9595e+00,  6.7828e-01,
         1.5748e-01, -8.7584e-01,  2.3439e+00,  2.8290e+00,  9.9768e-01,
         4.2891e+00,  2.0485e+00,  5.2479e+00,  2.7446e+00, -8.0856e-01,
         2.7606e+00, -6.0985e-01,  1.0010e+00,  3.6097e+00,  8.6649e-01,
        -1.9440e+00,  4.7826e+00, -1.3417e+00,  1.4655e+00, -1.6608e+00,
        -1.0909e+00, -2.0456e+00, -2.6795e-01,  2.2253e+00, -6.7448e-01,
        -1.3025e+00,  1.0630e+00,  3.3365e-01, -1.5424e+00, -2.3897e+00,
         2.4608e+00,  7.2529e-02,  1.2780e+00, -1.2968e-01, -4.6198e-02,
         2.9151e+00, -3.5891e+00,  6.7655e-01,  5.0392e+00, -3.3392e+00,
         2.2149e+00,  3.6240e+00, -3.6100e-01, -2.2165e+00, -1.5337e+00,
        -7.4936e-01, -3.7105e-02, -1.8666e+00,  6.2203e-01, -1.3716e+00,
         2.8897e+00,  2.5096e+00,  1.2119e+00, -3.1825e+00,  3.4289e+00,
        -9.8123e-01,  1.2664e+00,  1.1222e+00,  2.0988e-01, -4.8310e-01,
        -6.9745e-01,  3.0489e-01, -9.2025e-01,  1.1984e+00,  2.9164e+00,
         4.3201e+00,  2.9668e+00, -2.0338e+00, -2.1272e+00,  2.0423e-01,
         1.4896e+00, -5.7114e-01,  1.1521e-01,  2.2517e-01, -1.8505e+00,
        -3.5614e+00,  1.8595e-01,  5.9737e-01, -6.6762e-01, -2.8828e+00,
         7.7625e-01,  1.3422e+00,  8.0110e-01, -1.4907e+00, -1.1063e+00,
        -4.6538e+00, -4.3476e+00,  9.3517e-02,  1.2028e+00, -1.5859e+00,
         3.7968e+00,  5.7929e+00,  2.1610e+00,  8.3359e-01, -1.2562e-01,
        -3.4787e+00,  1.0607e+00,  1.5611e-03,  3.2186e+00,  1.7567e+00,
        -1.2555e+00,  4.4815e+00,  2.5527e+00, -2.9631e+00,  2.4910e+00,
         1.8873e+00,  2.9993e+00, -2.2833e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,846 - myNeural - INFO - Forward Pass: tensor([-4.2337,  0.2225,  0.3464,  ...,  3.4724, -0.8133,  1.1769])
2021-05-25 09:10:36,861 - myNeural - INFO - Forward Pass: tensor([ 1.2878, -2.3315, -2.6121,  0.4784, -0.0853, -4.6539,  1.7956, -4.6270,
        -3.6572, -0.1781, -1.1300,  2.5927,  2.8860, -3.7958, -1.6670,  2.2593,
        -2.5072,  0.0493, -5.3462, -0.4596, -0.1757, -0.8660,  1.4159, -1.9569,
         2.6712,  4.1273, -1.2946, -3.4524, -3.5850, -2.0265, -0.5479, -1.6406,
        -3.2255,  1.1327, -1.4220, -3.6170,  3.4172,  1.6527,  4.2710, -3.3981,
         2.0440, -3.0080,  1.2165, -1.8859, -4.1670, -0.6491, -2.7595,  3.4839,
        -5.8495,  4.9021,  1.8025, -1.5972, -0.4736,  2.1510,  0.0439,  5.1221,
        -0.5436, -2.8859,  0.9172, -3.9104, -0.3264,  2.4938,  3.4233,  1.3163,
        -1.1530, -0.2089, -0.7054,  0.6721,  0.4856, -0.1560,  3.8461,  2.6744,
         1.5858, -0.5697,  0.0548,  1.9402,  2.4504,  5.5374,  2.4901, -2.9380,
        -0.4676, -1.4341, -2.9454, -1.4353,  2.8847, -2.4526,  4.0377,  0.8856,
        -1.9644,  0.9660, -4.0541,  2.1938, -1.6183, -2.1648,  1.3430,  3.0198,
        -0.0953,  1.9205, -0.8905,  0.8201, -3.0043, -1.4764,  2.7106, -3.3664,
         3.6774,  0.3030, -2.5474, -1.3540, -2.6283, -2.3704,  1.6166, -2.5535,
         2.0505, -1.4028, -1.2301,  0.7523, -1.4344, -4.5230, -2.7025, -4.7701,
        -3.8762,  0.5449, -3.1822,  2.2142, -1.2471, -0.2169,  3.4685, -0.7347],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,876 - myNeural - INFO - Forward Pass: tensor([-4.7067, -0.1993, -0.1693,  ...,  2.9250, -1.1908,  0.7916])
2021-05-25 09:10:36,890 - myNeural - INFO - Forward Pass: tensor([ 0.1452,  2.0982, -2.2780, -0.2214, -1.5046, -0.6367, -0.3106, -4.0275,
        -0.1557, -3.1576,  0.5497, -1.8235,  0.5483,  4.6302, -2.0926, -1.1838,
         4.6393, -5.1893, -3.1306, -2.6349,  0.5849,  3.3634, -1.7150,  1.7516,
         0.8750, -2.0976,  1.3257, -0.5964,  0.0170, -0.9890,  2.1468,  1.8822,
        -0.1456,  5.4286, -0.3324, -1.8774, -2.9551, -4.3831, -0.3636,  2.9191,
         0.9084, -1.7466,  0.1580, -0.7364, -0.6386,  2.1321, -3.0872,  0.7110,
        -0.0131, -2.1087, -2.4033,  1.4181, -1.8321,  0.5749, -0.9387,  3.2428,
         2.2108,  1.0187,  1.5486,  0.9873, -0.2680,  4.7731, -3.3805,  1.4342,
        -2.1058, -0.6868,  2.8476, -3.2520,  3.1221, -1.8916, -2.4337,  3.2240,
         2.7150,  0.0363, -0.8700, -3.4948,  1.2809,  0.6990,  1.7718, -3.9518,
        -2.6855, -0.2747,  0.0108,  2.1022,  2.0752, -1.8359, -2.2185,  1.0291,
         2.8325,  1.9325,  5.6560,  0.1333, -0.7973,  0.4242,  0.0611,  1.8775,
         1.0688, -1.4479, -6.3613, -1.4671,  2.2641,  3.8167, -1.6723, -4.3166,
        -3.6329, -4.9816,  1.6615,  2.7168,  0.6784,  3.2741, -3.6718, -2.2443,
        -1.4479,  3.7869,  0.3438, -2.3230, -2.8574, -2.8011, -3.8824, -1.9029,
         3.4378,  3.4308, -1.9281,  3.5140, -1.3061, -4.6860, -3.8711, -3.5006],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,904 - myNeural - INFO - Forward Pass: tensor([-3.7860,  0.7187,  0.8225,  ...,  3.9655, -0.4761,  2.0053])
2021-05-25 09:10:36,920 - myNeural - INFO - Forward Pass: tensor([-2.2683,  3.0035,  1.5763,  1.8120, -0.3487, -2.5247,  5.2067, -3.9516,
        -1.9310, -0.3141, -1.2344,  5.9507,  3.9097, -0.4673, -1.0494, -2.4979,
        -0.3549,  1.1312,  3.8615,  1.2871,  0.6151, -3.6888, -2.0229,  2.8841,
         1.4937, -1.6957,  0.4282, -4.2241,  3.0733, -1.2586,  3.4944,  1.2579,
         0.3176, -0.4645,  0.6610,  3.8470,  2.5081, -0.2150, -1.7562,  0.9031,
         3.3379, -1.0232,  3.6936, -0.0484, -0.8416, -0.7197,  0.3448,  0.4909,
        -0.9219, -3.5137,  2.1413,  2.2222,  0.0845, -0.5065, -1.6844, -1.2683,
         0.0205,  0.5053,  0.9712, -0.2479, -2.8749, -1.2089,  4.8443, -4.4698,
        -0.3131, -2.4447,  1.1451,  0.9865,  1.2055,  1.3795,  3.1026,  3.3182,
         2.1994,  1.1560, -0.8178,  3.7069,  5.2250,  2.3133, -1.3687,  3.3208,
        -0.2432, -4.0250, -2.7626,  0.0713, -0.2630,  4.4500,  4.3199,  1.4075,
        -2.1344,  3.6535, -0.4840, -0.3063,  0.0136, -1.8927,  0.7244,  0.5971,
        -2.1283,  4.0031,  0.4342, -1.6545, -1.0280,  1.0584, -0.7442, -2.3376,
        -0.8406, -1.6571,  0.5385,  4.3207,  5.1508, -0.6799,  1.6887,  2.9360,
        -0.6091, -1.9691,  0.3636, -2.0247,  3.3330,  2.3007,  0.0395,  5.3495,
         0.8223,  0.6340,  0.3089, -2.6733,  1.6628, -1.6957,  2.5163,  0.6952],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,935 - myNeural - INFO - Forward Pass: tensor([-4.4277,  0.2913, -0.0814,  ...,  3.2229, -1.2274,  1.3288])
2021-05-25 09:10:36,948 - myNeural - INFO - Forward Pass: tensor([ 0.6526,  0.7682, -0.9696, -3.5162, -2.6824, -2.7569,  1.1922, -1.2140,
         0.9870, -0.8842,  1.5844, -1.9410, -2.0150,  4.2934,  1.2328,  2.1502,
        -1.4807, -1.0413,  0.4201,  0.9841, -2.5088,  3.6553,  2.3517,  2.7403,
         0.1867, -4.4244, -4.7346,  2.3018, -2.5575,  0.5498,  4.8721, -0.1625,
         0.7986,  1.6566,  1.8912, -0.0947, -3.9167,  5.3169,  4.1636, -3.8803,
        -4.1651,  1.6421, -1.3443, -2.1370, -1.1454,  1.0338, -2.4390,  0.8818,
        -1.6736, -1.2372, -1.3525, -3.5494, -0.2025,  0.1346,  0.6488, -3.0860,
        -1.2345, -1.6544,  3.6630, -4.0541, -0.7913, -0.1209, -0.1523,  3.4998,
        -0.0805, -2.2234,  0.2983, -3.4777, -2.1318,  3.3172,  3.5003,  2.3289,
         1.9711, -0.1656, -2.2587,  0.9467, -0.2841,  3.0406,  0.5532, -3.7413,
        -0.6830,  1.1006,  4.4165, -4.6088,  1.0039, -2.1618,  2.9007, -2.0333,
        -2.8154, -2.5596,  1.8379,  0.4001, -0.9896, -0.7927,  1.3565,  2.8955,
         4.3854,  1.9764,  3.5163, -2.8213,  0.2950,  3.7313, -0.1985, -1.4605,
        -2.5941, -2.3882,  3.8530, -4.7023, -1.0802, -2.9958, -4.6450, -0.6576,
        -1.8569, -1.4574, -0.9161, -0.9487,  0.6751,  3.8174,  0.3696,  2.7783,
         1.1160, -2.7832,  1.4074, -0.2950,  0.5152,  3.9755,  1.0244,  0.0479],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,962 - myNeural - INFO - Forward Pass: tensor([-4.4466,  0.4439, -0.0632,  ...,  3.3133, -1.0848,  1.3229])
2021-05-25 09:10:36,976 - myNeural - INFO - Forward Pass: tensor([ 3.0596, -1.4437,  2.9223, -3.1844,  0.8722, -1.0163,  1.0504, -3.8279,
         0.1534,  1.2662, -2.9858, -1.9455,  0.8098,  0.4142,  2.5101, -2.3346,
        -2.4900,  4.8067, -1.7323,  3.8705,  2.1463, -0.2035, -1.9576,  4.3920,
         4.6466,  1.4958,  1.9834, -3.9581,  4.3476, -3.6396, -1.2355,  1.8810,
         0.6305,  2.6108, -4.2152,  2.6483,  2.4880,  0.8409,  3.5533,  1.6160,
        -3.5980, -3.9112,  1.1259,  0.7058,  1.1799, -1.2371, -0.5584, -0.3934,
         0.1690,  2.5188,  3.0501,  2.9014, -0.5961,  1.2629, -0.6145, -2.1273,
        -0.0300,  0.1796, -4.0077, -1.3210,  0.5730,  4.1538,  0.9359, -3.4095,
        -1.9254,  6.5433,  1.2872,  1.5984,  3.9851,  0.4683,  2.3070, -3.7499,
        -3.8405,  1.0134,  1.7193, -3.2268,  0.9156, -0.0992, -0.7288,  1.3869,
        -1.6921,  1.5348, -2.9011,  0.1505, -3.1022, -0.9891,  3.3888,  2.6437,
         3.3441, -0.0927,  1.0795,  5.0122,  2.5414,  3.7927, -1.5224, -3.1016,
         1.6446,  1.3279, -4.3941,  1.2933,  3.3842,  3.1663, -0.5008, -3.2604,
         2.6644,  0.5892,  1.6628, -3.6339, -5.4156,  4.2394, -1.1534,  1.3801,
        -3.2014, -1.5396, -2.5629,  3.5882, -2.8655,  1.1684,  2.5108, -3.4428,
         4.7960,  3.7457, -0.7525,  1.7463,  3.2059,  3.0917, -2.9067, -1.0379],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:36,991 - myNeural - INFO - Forward Pass: tensor([-3.9630,  0.8522,  0.4736,  ...,  3.8338, -0.5211,  1.7578])
2021-05-25 09:10:37,007 - myNeural - INFO - Forward Pass: tensor([-1.5626, -1.4571,  0.7053,  0.8099,  3.7398,  4.0678, -1.0117, -1.2239,
         2.0569, -0.0054,  3.4021,  0.4056,  3.7633, -1.6639, -1.6611, -0.7532,
         3.6942,  1.4718, -1.5029,  1.5164, -0.8797,  2.7002,  2.5316, -0.3679,
        -2.4467,  1.7302,  1.1012, -0.6287, -4.8330,  2.8426, -0.6144, -3.5568,
        -3.3164,  3.4599, -4.4135,  0.7510, -2.8938, -0.7928, -0.9150,  2.7823,
         3.0280, -2.1411,  3.4187,  4.8762,  0.1702,  1.7387,  0.0393, -4.2691,
        -1.3588,  2.4805,  1.0245, -1.2449,  2.2022,  2.0039,  3.1175,  1.2077,
        -1.7394,  1.0898, -3.8010,  1.5881, -0.5638,  5.0542,  3.6756, -4.1626,
         4.0712, -2.4626, -2.0041,  0.2265, -1.0720,  2.0121,  4.2912,  4.9575,
         0.4996,  0.7249,  1.2816, -0.4301,  5.2970, -2.1129, -0.3651,  4.0061,
         0.5450, -3.3267,  1.8129, -1.4236,  2.0007,  2.9310, -1.2188, -0.7336,
         2.5276, -2.4314, -2.8914, -1.5991,  1.6333,  1.5404, -2.2705,  2.1992,
         0.1469,  2.7565,  0.7788, -5.3277, -2.0756, -3.2302, -0.1644, -2.7899,
         0.9779, -0.6417,  1.2308,  2.4379, -3.9110,  2.2466, -1.5564, -2.3533,
        -2.8883,  4.5804,  1.1507,  3.5642, -3.1181, -3.3579,  0.2556,  0.5516,
        -5.0649, -4.1149,  2.4220, -2.7641, -2.3213, -1.8426, -1.4733, -1.4503],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,021 - myNeural - INFO - Forward Pass: tensor([-4.6267,  0.3171, -0.2319,  ...,  3.0977, -1.3633,  0.8780])
2021-05-25 09:10:37,037 - myNeural - INFO - Forward Pass: tensor([-1.9486, -1.9065, -3.1234, -3.1194, -0.3513,  3.5631, -1.7648, -5.5747,
        -3.1808,  1.2345, -2.9189, -1.1158,  0.1234, -0.5019, -0.2994, -1.8132,
        -2.3374, -2.9787,  0.7522,  1.5205, -3.3494, -1.6726, -2.4158, -2.9233,
         0.1296, -1.5395, -4.4120,  1.2502, -0.8107, -0.0119, -2.4636,  0.0680,
        -4.1491, -4.4019,  3.4281, -3.7165, -1.2846,  0.1922, -3.9948, -1.4230,
        -2.8467,  1.9064, -1.6681,  1.8331, -4.4096,  2.2219,  1.6383,  0.5550,
        -2.2727, -1.3706, -1.3372,  2.5584, -0.1655,  0.8834, -3.6751, -2.5993,
        -2.6146, -0.1417, -1.0325, -4.8236,  3.9283,  1.0454, -0.0876,  2.3155,
         1.5738,  2.3703, -4.8207, -5.9529,  3.5793,  3.0541,  0.7200, -1.2413,
         1.7048,  4.7935, -0.4614, -0.8514, -3.4768,  2.6590,  0.1970,  1.4477,
         3.0283, -3.9404, -3.4538,  2.9029, -2.8118, -2.9790, -1.6869,  0.6325,
         0.2816, -0.2294, -0.4281,  0.8770,  0.9103, -2.1146, -2.9234,  4.7520,
        -1.4387,  3.1946, -1.8397, -1.1646, -2.9966, -1.6409, -0.3034, -3.4872,
        -1.5584, -4.1380,  2.8018,  3.1526, -2.3678, -0.9675,  0.5698,  0.7940,
         2.3777,  1.1567, -0.9528,  2.6401, -1.0786,  3.0660, -0.0633,  2.5821,
        -1.9490, -0.8310, -3.0957, -3.2511, -2.8410,  3.4952, -0.6613,  1.6691],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,051 - myNeural - INFO - Forward Pass: tensor([-3.7548,  1.2712,  0.8261,  ...,  4.1597, -0.3361,  1.7207])
2021-05-25 09:10:37,065 - myNeural - INFO - Forward Pass: tensor([-3.4233e-01, -4.4733e+00, -1.1866e+00, -2.1803e+00,  1.4300e+00,
         1.9402e+00,  4.5003e+00, -2.0473e+00,  7.7707e-01, -3.1997e+00,
        -3.8780e+00,  2.1908e+00,  5.8985e+00,  7.2549e-01,  5.4112e+00,
        -2.5791e+00, -2.4826e+00,  2.4628e+00,  3.2553e-01,  7.2441e-01,
        -3.1947e-01,  2.1683e+00, -7.9001e-01,  1.0452e+00,  2.0100e+00,
        -2.5233e+00, -3.1895e+00, -2.6514e+00, -3.2888e+00,  4.3294e+00,
        -2.0074e+00, -1.0310e+00,  7.6596e-01,  1.8128e+00, -1.8415e+00,
        -2.3028e+00,  9.5572e-04,  3.1699e+00,  3.8875e+00,  4.9249e+00,
         1.8393e+00,  1.8156e+00,  8.2240e-01,  7.8396e-01,  2.5124e+00,
        -2.7329e+00,  2.1694e+00, -1.3716e+00,  2.7882e+00,  1.1996e+00,
         3.5566e+00,  2.2895e+00,  2.1946e+00, -3.3798e-01,  2.0469e+00,
         8.3160e-01, -2.1266e+00, -5.7735e-01,  3.6082e+00,  1.5571e+00,
         1.5395e+00,  2.7365e-01, -5.5767e-01,  9.7697e-01,  4.8382e+00,
         2.7599e+00,  4.0296e-01,  1.3957e-01, -6.1594e+00,  1.7435e+00,
        -3.4603e+00, -2.2812e+00,  1.7373e+00,  5.2108e-01,  7.1759e+00,
         3.5356e+00, -3.4863e+00, -1.2606e+00, -3.6874e+00,  1.9856e+00,
        -2.4626e+00, -2.5771e+00,  1.7575e+00,  2.1251e-01,  1.3685e+00,
         5.0597e-01,  6.7474e-01,  1.6583e+00,  1.1882e+00, -4.8018e-01,
         4.6859e+00, -1.4913e-01,  2.9104e+00,  3.5472e+00,  4.8167e+00,
        -4.2724e-01,  1.4486e+00, -3.5146e+00, -1.9088e+00,  2.5011e+00,
        -4.8909e-01, -1.0001e+00,  7.6956e-03,  2.2803e+00,  4.5325e+00,
        -4.0897e+00,  1.9124e+00,  2.3034e+00, -4.5658e-01, -1.9564e+00,
         3.4097e+00,  1.9647e+00,  4.5402e-01,  8.0987e-01,  1.8621e-01,
        -1.1484e+00,  2.0426e+00,  2.0663e+00,  3.5045e-03, -1.3925e+00,
         4.1944e+00,  1.1829e+00, -9.9298e-01,  1.1052e+00,  6.1850e-01,
        -3.0926e+00,  4.4135e+00,  1.4763e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,079 - myNeural - INFO - Forward Pass: tensor([-4.4778,  1.0356,  0.1859,  ...,  3.5251, -0.7389,  1.2952])
2021-05-25 09:10:37,094 - myNeural - INFO - Forward Pass: tensor([ 3.5120, -0.3455,  1.0241, -3.6267, -3.3277, -2.5167, -1.4772, -4.8928,
         0.8551,  2.9336, -3.1187, -3.7507, -0.7949, -1.0592,  1.7691, -3.4350,
        -1.8901, -2.7237, -0.3958, -1.2621,  2.1808, -4.5953, -0.1335, -2.9902,
         3.2292, -1.8360, -0.3855,  1.5818,  2.9387,  3.7537, -3.7328, -2.2632,
        -0.9667,  3.0118,  1.9459,  4.6451,  1.6479,  0.9640, -3.1369, -2.3445,
        -2.5094, -2.3866,  0.4314, -4.7653, -1.5685,  4.1233, -1.3630, -2.4687,
        -2.0983,  0.5621,  0.1146, -0.1597,  1.6566,  4.8952, -1.8892, -5.5151,
         1.9880, -0.2394,  4.8508,  3.6309,  5.6241,  3.5167, -1.5518,  0.7223,
         2.9394, -2.1259, -0.1632, -0.5308, -1.3638,  0.5300, -3.2098,  3.4432,
        -2.0025,  3.2131, -2.7381, -0.5487, -0.9379, -0.4610,  4.0199, -0.9735,
         1.6294,  0.1607, -0.2262, -0.9390, -4.7161,  2.4967, -1.4894, -1.7495,
        -2.7831, -0.1791,  2.8928,  1.5742, -2.0361, -4.2072,  1.7443,  2.8769,
         0.4063, -1.1771,  0.5670,  3.7130,  0.3320,  4.8930,  3.6547, -5.2774,
         0.6069, -2.8705,  1.9488,  2.6344, -3.2430,  0.2639, -5.1101,  3.1604,
        -3.0502,  1.1933, -0.3937,  2.9699, -5.6643, -0.0496,  1.5903,  1.8942,
        -1.7862, -1.6992,  1.4251,  1.7671,  2.4809, -2.2503,  0.1610, -2.2172],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,108 - myNeural - INFO - Forward Pass: tensor([-4.6045,  0.9632,  0.0468,  ...,  3.3309, -1.0015,  1.2156])
2021-05-25 09:10:37,123 - myNeural - INFO - Forward Pass: tensor([ 1.3033, -3.9375,  1.8006, -1.4775,  1.9232, -1.4446,  1.6328, -3.1635,
         0.0399, -0.9037, -4.2598,  1.0927, -1.7543,  0.6078,  0.2056,  4.3678,
        -2.0168,  1.4675, -2.7151,  3.7510, -3.1034, -0.9537,  3.0495,  3.7289,
        -1.2236,  0.4453, -1.5821, -2.3247, -0.2818,  2.7207, -2.5082,  0.4427,
         7.0521, -1.3716,  0.0596, -3.2490,  3.1491,  1.0913, -2.8972, -1.2553,
         3.1156, -4.0726,  0.2946, -2.3623, -2.9252, -1.1031,  5.0719, -1.2803,
        -0.4435,  3.2970, -0.6150,  2.0174, -2.9300, -3.2909,  3.8872, -2.3503,
         1.8355,  4.6152,  1.7188, -4.4040, -2.3413, -5.2227,  1.5578,  2.3196,
         4.4282,  0.5641,  0.9907, -1.8241,  2.7611, -2.7624,  0.2672,  1.9451,
         3.0295, -1.8653, -1.4295,  1.8849, -0.4864,  4.4195,  2.0782, -1.7813,
         0.5427, -2.7295,  0.8370, -2.7120,  0.5456, -0.8361,  1.6704,  1.9653,
        -1.2052,  1.6573,  3.2014, -3.9745,  4.0418,  1.4920, -0.2212,  3.4549,
        -1.4750, -2.5131, -1.5558,  3.4971,  4.0975, -1.4375,  1.6385,  0.6829,
         3.4484,  0.8312, -0.2943,  1.4908,  1.9246, -1.3867, -2.6401, -0.0294,
        -0.3731,  0.1945, -0.3227,  3.8260, -0.1300, -3.8905,  4.6795, -2.6859,
        -1.0847,  3.4597, -5.8136, -0.1277, -1.6491,  1.6933, -3.1538, -1.1707],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,137 - myNeural - INFO - Forward Pass: tensor([-4.4210,  1.1252,  0.2934,  ...,  3.6453, -0.7639,  1.2777])
2021-05-25 09:10:37,153 - myNeural - INFO - Forward Pass: tensor([ 4.6995,  2.0487,  3.4026, -1.7138, -1.5453,  3.7293,  4.3079, -1.5758,
         2.3997,  1.0172, -2.3537,  1.0531, -3.9206,  0.3891, -4.3830, -2.8953,
         1.0787,  3.2705,  4.9206, -5.1597, -7.7574, -0.0805,  1.3225,  3.4500,
        -2.8320, -0.4698, -3.3733, -1.0548,  0.3942, -4.2418, -3.8117,  2.1039,
         4.1177, -2.4736, -5.6816,  0.3865,  0.5294, -1.1126,  2.1276,  2.1866,
        -4.0656,  1.7033, -1.1225, -4.5720, -4.0949,  3.7233,  2.3890, -5.4676,
         3.7724,  4.1525, -1.2099, -0.2409, -5.5255, -5.6802, -1.0624, -3.5476,
         0.7274, -0.9048, -0.1542,  2.2531,  2.6698, -0.0674,  2.1298,  4.0655,
         1.6688,  0.2383,  1.3126,  0.6183, -1.4475, -1.1077,  2.2312,  0.8462,
        -3.2639, -3.3505,  0.1778,  0.5095,  3.1411,  3.5846, -3.4380,  0.6752,
         2.6148,  2.0949,  1.9199, -4.7099, -2.0102, -4.2353, -3.4212,  1.0064,
         5.4226, -3.1256, -3.0291, -3.0181,  0.3766,  3.9816, -4.1886, -2.3860,
         2.0978, -0.4186, -2.9435,  1.2798, -2.2893, -0.0916, -0.6524,  3.1344,
        -0.0931, -0.5532,  4.5750, -1.6932, -2.4180,  1.8079, -2.6935, -2.0966,
         3.1429,  2.6692,  0.1651, -0.2222, -0.7446, -3.1386, -0.6586, -2.1780,
         0.4857, -0.1340,  1.0959, -1.3087, -0.7933,  2.3043,  3.7797,  2.0988],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,167 - myNeural - INFO - Forward Pass: tensor([-4.2507,  1.2753,  0.6654,  ...,  3.7873, -0.4641,  1.6310])
2021-05-25 09:10:37,182 - myNeural - INFO - Forward Pass: tensor([ 1.9579, -2.5370,  2.2407, -2.8527,  1.0849, -3.7104,  3.8664,  1.9710,
        -1.9647,  1.7829, -2.5053,  0.9372, -3.7824,  1.2237, -0.9715, -2.1510,
        -3.8870,  1.0726,  0.3270,  2.1202, -0.2377, -0.5539, -3.5281,  3.3632,
         3.2772,  2.1535, -0.0474,  3.5008, -2.9537, -1.1513,  2.8599, -2.2525,
         3.7792,  0.7162,  2.7562, -1.7254,  1.1706, -1.3828, -1.5675,  4.6420,
        -1.9822, -1.1986,  0.1921,  0.0720, -3.5468, -1.2720, -1.4939,  0.7004,
        -3.0146, -0.6987, -4.0429,  0.1287, -1.6282,  0.5702,  2.1786,  4.1788,
         1.7729, -1.0267,  2.8352,  4.2777,  0.0616,  2.5608, -3.5903, -6.5339,
         0.9539,  0.3095,  4.5005, -1.2987, -5.3466, -0.1692, -0.5947, -4.6660,
         3.3415,  1.2335,  2.1288, -2.2063, -3.6141,  4.0767,  2.6462,  2.0871,
         3.1154, -4.0199,  4.1001, -4.4681,  0.5533,  2.7832,  1.7072,  5.0568,
         2.8605,  3.0751,  4.1498,  0.1524,  1.6125,  0.6729, -2.8892, -4.6291,
        -1.2078,  1.7518,  0.8041,  4.0176, -3.4435,  6.4858, -4.3327,  3.9816,
         2.5367, -4.0419,  2.6333,  1.3927,  2.1788,  4.8671,  1.6691,  1.1317,
         0.6997,  2.7104, -1.9831, -2.8935, -0.1514,  1.5086, -3.4655,  3.0175,
        -3.2388, -3.9872,  3.8665, -3.3022,  3.7199,  2.0698,  1.9816,  1.7499],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,196 - myNeural - INFO - Forward Pass: tensor([-5.0108,  0.2402, -0.3472,  ...,  2.7578, -1.1101,  0.4641])
2021-05-25 09:10:37,209 - myNeural - INFO - Batch 20 -- TrainLoss: 0.45925 -- TrainAcc: 78.12500% -- TestAcc: 79.40000%
2021-05-25 09:10:37,212 - myNeural - INFO - Forward Pass: tensor([-3.8440,  1.4365, -2.6649, -2.9825,  2.0198,  0.8055, -3.3034, -2.1221,
        -2.5948,  0.6113,  3.3058,  2.3875,  2.1141,  1.7327,  3.1631,  3.8680,
        -3.6444, -3.4407,  1.2037, -2.2799,  3.1079, -4.4984,  3.8729, -2.5952,
         0.1167, -2.8376, -3.3443, -3.6772,  3.1679, -1.4943,  3.5541, -0.0539,
        -2.3386, -5.2627, -1.1573, -2.2936,  3.2139, -1.6247,  0.1811, -1.8030,
         2.5798, -3.1130,  2.7776, -0.7541, -1.0080, -3.2286, -2.0155, -4.6253,
         2.5627,  0.2523, -5.1632,  1.1642,  1.5300,  0.8549, -4.4419, -2.3680,
        -0.0186, -2.1634, -3.1293,  2.0173,  5.7244, -4.8624,  1.5635, -1.5879,
        -4.9459, -4.1227, -4.6691,  0.0058,  1.8975, -0.4018, -3.8739,  0.1881,
         2.1678, -1.0592, -4.4738, -2.5112,  3.1813, -2.3978, -2.9447, -3.8817,
        -0.8185, -4.2066, -2.8087,  3.2677,  1.5007,  2.4093, -4.7434,  0.3757,
         0.8710, -1.5008, -2.7666, -2.5977,  3.0180, -1.5093,  1.5960, -2.0376,
         0.8137, -3.1587, -2.3087, -2.6425, -2.1769,  3.3981,  1.5748,  0.4196,
         2.2774, -0.0283, -2.0077, -0.2106, -3.9902, -0.7433,  2.1867,  3.7557,
         3.7158, -1.5613,  0.6210,  0.4941,  1.3527,  0.6171,  1.9432, -2.8115,
        -0.0837, -0.6279,  2.8148,  2.6878, -1.1379,  4.0557, -0.6960,  0.0487],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,226 - myNeural - INFO - Forward Pass: tensor([-4.2121,  1.1835,  0.5123,  ...,  3.6815, -0.4410,  1.3230])
2021-05-25 09:10:37,239 - myNeural - INFO - Forward Pass: tensor([-4.5665e+00,  3.8568e+00,  3.1573e+00, -1.1117e+00, -3.2848e+00,
         5.1465e+00, -2.1761e-01,  2.8350e+00,  3.9723e+00,  1.8028e-01,
         2.5647e+00,  3.1407e+00,  1.5134e-01,  3.2445e+00,  1.0005e+00,
        -4.0756e+00, -2.5167e+00, -1.8522e+00,  1.5574e+00,  1.6472e+00,
        -8.9034e-01,  2.0366e+00, -2.6260e-01, -1.2128e+00,  2.0766e+00,
         4.3201e+00,  2.9626e+00,  2.3557e+00,  3.8048e+00,  2.4159e+00,
        -4.0493e+00,  4.9671e-01, -1.6073e+00,  3.9307e+00,  4.9362e-03,
        -5.8655e-01, -1.5087e+00,  4.4862e+00,  2.1877e+00, -6.1187e-01,
        -2.3273e+00, -3.4487e+00,  5.0361e+00,  3.8831e+00,  3.3182e+00,
         4.6602e+00,  4.0937e+00, -2.8956e+00, -5.6012e+00, -3.2532e+00,
        -4.0053e+00, -2.7330e-01, -3.3885e+00, -3.4056e+00, -3.8468e+00,
         2.2366e+00,  1.7371e+00, -6.4823e-01,  2.6223e+00,  3.0981e+00,
         3.1478e+00, -2.9969e+00, -3.3813e+00,  3.7472e+00,  1.5417e-01,
         3.8620e-01, -1.5684e+00, -5.4485e+00,  2.5260e+00,  1.7702e+00,
         4.2433e+00, -3.4899e+00,  7.1288e+00, -1.9595e+00, -3.4121e+00,
        -1.7885e+00,  5.9779e+00,  4.5689e+00, -5.2822e+00, -8.9677e-02,
         6.5615e-01,  5.0781e-01,  6.1834e+00,  3.3090e-01,  2.7888e+00,
        -4.8085e+00,  2.4000e+00, -1.7551e+00, -4.3239e+00,  6.3636e-01,
         1.5438e+00,  1.5617e-01, -1.7349e+00,  2.0560e+00, -2.1898e+00,
         4.5434e-01, -9.4575e-01, -5.5510e-01, -2.3198e+00, -6.2677e-01,
        -2.5771e+00, -1.2310e+00, -3.3619e+00, -6.5852e-01, -1.6822e+00,
         2.3245e+00,  1.9605e-01,  3.9655e-01,  2.5916e-01,  1.6928e+00,
         1.9327e+00,  1.9497e+00,  7.9189e-02, -1.3985e+00,  1.3693e+00,
        -4.7092e+00, -2.9190e+00, -6.5804e-01,  5.2344e-01, -2.0771e+00,
        -7.4765e-01,  1.9029e+00, -2.3793e+00,  4.5052e+00, -2.8717e+00,
        -2.8803e-01, -2.1364e-01, -1.6136e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,253 - myNeural - INFO - Forward Pass: tensor([-4.7028,  0.6100,  0.0475,  ...,  3.0757, -1.1860,  0.7982])
2021-05-25 09:10:37,268 - myNeural - INFO - Forward Pass: tensor([ 9.3145e-01,  1.2874e+00, -1.2702e+00, -2.4746e+00, -1.1141e+00,
        -9.1449e-01,  1.9799e+00,  1.0222e+00, -7.4866e-01,  1.9375e-01,
         9.9676e-01,  3.9797e-01, -2.8254e+00,  1.2552e+00, -2.7473e+00,
        -8.0171e-01, -3.8651e+00,  1.5649e+00,  4.1833e-01, -3.0188e+00,
        -2.8595e+00, -4.1591e+00, -5.4917e-01, -8.0645e-01, -5.5284e-01,
        -1.6642e+00,  1.0783e+00,  2.2359e-01, -9.1240e-01,  1.3585e+00,
         1.4150e+00, -7.9785e-01,  3.7233e-01,  1.0065e+00, -1.1024e+00,
         2.7237e-02,  2.7541e-01, -1.6156e+00, -1.4174e-01, -2.2652e+00,
         3.3092e+00,  3.8796e+00, -2.2092e+00,  1.2641e+00, -2.7711e+00,
        -7.0759e-01,  2.3578e+00, -2.4969e+00, -1.2924e+00, -9.6805e-01,
        -2.2285e-01,  3.4635e-03,  1.6563e+00, -5.2154e+00, -2.9132e+00,
        -3.4745e+00, -1.2802e+00,  2.2929e+00,  1.6715e+00, -4.8276e+00,
        -1.7630e+00,  8.6164e-01, -3.2732e+00, -4.1676e+00, -3.2834e+00,
         4.5561e+00,  5.3043e+00,  3.6765e+00,  2.1101e+00, -1.0439e+00,
        -3.8622e+00, -1.7336e+00,  3.2545e+00, -3.6222e-01, -3.2918e+00,
         3.7240e+00, -6.2405e+00,  2.9202e+00, -2.5130e+00,  3.2404e+00,
        -3.8050e+00,  2.2105e+00, -4.3120e+00, -5.1122e+00,  6.8732e-01,
        -1.6959e+00, -1.2967e+00, -1.2581e+00,  2.8632e+00, -1.9768e+00,
         6.4879e-01,  1.5488e+00,  2.7360e+00,  6.6208e-01,  1.4484e+00,
         4.5254e-01, -1.4558e+00, -1.3235e+00, -4.7289e+00, -7.3240e-01,
         5.0077e-01,  1.4198e+00, -3.2642e+00,  1.5015e+00,  2.7605e+00,
        -2.1695e+00,  5.6689e+00,  1.0567e+00, -8.2305e-01,  2.5680e+00,
         1.9740e+00, -1.7810e+00, -5.3749e+00, -2.8570e+00, -2.9954e+00,
        -2.3627e+00, -2.6879e-01, -3.9722e+00, -6.3277e-01,  9.0262e-01,
        -2.8819e+00, -1.0628e+00,  9.4765e-01, -3.1335e+00,  3.1980e+00,
        -1.8502e+00, -1.2039e+00, -3.5752e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,284 - myNeural - INFO - Forward Pass: tensor([-3.9515,  1.2332,  0.7529,  ...,  3.7204, -0.3539,  1.1870])
2021-05-25 09:10:37,301 - myNeural - INFO - Forward Pass: tensor([ 2.9274, -1.1020,  1.4449, -1.9770,  0.5385,  0.6182,  2.6423,  3.2278,
        -2.4429,  0.7757,  5.0451,  1.0888, -0.3397, -1.2331, -0.7703, -3.1427,
         2.4585, -4.6990,  0.2869,  1.4233, -1.6402,  0.4194, -1.6061, -2.2045,
         6.3596,  0.9064,  2.4491,  4.1681,  3.1794, -0.6115, -2.3116, -1.4229,
         1.5516,  2.6918, -0.0646,  0.2192,  1.0735,  1.1063, -2.8959, -1.8259,
         3.9805,  2.4152,  1.7528,  1.9484,  1.9001,  2.5931,  0.1486, -1.0824,
         1.9704, -3.8038, -3.1925,  4.1044, -3.4264, -0.0400,  4.9318,  0.5313,
         0.2518, -0.1161, -3.3884, -1.9431, -0.0658,  3.3452,  4.3456, -1.3469,
         3.2523, -0.9850,  4.7312,  3.5010, -0.9818, -2.1433, -3.0550,  2.8628,
         4.2235,  4.1807,  2.1172,  1.5847, -2.3883,  1.2621, -1.4886, -0.0872,
        -4.2644,  3.0790, -3.6049, -0.4919, -3.7993,  5.4828, -3.5634, -4.6582,
        -2.3007,  3.8137, -0.2100, -1.0356,  3.7760, -2.3259, -2.2609, -4.6646,
         3.1532,  3.6826, -1.9644,  0.9577, -1.1515,  1.7048, -4.2374, -1.5730,
         2.8508,  2.3747, -1.5846, -4.9905, -0.7296, -1.2509, -3.0844, -3.0066,
        -2.3639,  4.9595,  1.2358,  1.6986, -2.1813,  0.7122, -0.6645,  1.4142,
        -1.0599,  4.5176, -0.1661, -2.6031, -1.5385,  2.8027,  2.8070,  2.1031],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,316 - myNeural - INFO - Forward Pass: tensor([-4.2184,  0.8643,  0.0947,  ...,  2.9329, -1.0721,  0.6477])
2021-05-25 09:10:37,334 - myNeural - INFO - Forward Pass: tensor([-2.0034,  0.2450, -3.5337, -4.1191, -0.6731, -0.9519,  0.5371,  2.7000,
        -2.3484, -0.3440,  4.1679,  1.2116, -0.2607,  0.5585, -0.1256, -1.7975,
         2.7690, -3.2952,  1.6590, -3.5250,  3.4153,  2.1578,  0.3042,  4.3270,
        -1.5525, -2.1881,  0.9274,  1.8608,  1.8575, -0.1309, -1.8443,  3.2375,
        -5.0213, -3.5196, -1.5618, -2.7036, -3.0632, -1.6567,  3.0829, -2.5580,
        -2.5364,  2.1540, -1.0671, -0.5042,  1.5504,  0.7467, -5.2137, -4.8453,
        -1.6871,  6.0008,  3.1398, -5.3740, -3.2152, -0.4651, -0.5802, -3.8636,
        -3.8342, -0.9555,  2.6940,  2.7292,  0.2997, -4.8741, -3.9457,  2.7866,
         1.9005,  4.3119,  0.2367, -0.1650, -1.8099,  5.1857, -4.3426, -2.9829,
         0.6819,  4.1037, -1.2424,  4.0304,  3.7149, -2.1028,  2.3715, -3.6043,
         2.8065, -2.3419, -0.2430,  0.5384,  2.3065,  1.3114,  2.3574,  2.6197,
         2.9406,  2.8447, -5.0238,  0.2753,  4.0951, -2.0819,  0.3532,  1.5030,
        -2.1337,  0.2835, -2.6563, -0.8653, -2.8819, -0.3501, -0.2053,  1.8767,
         3.0834,  1.7484,  2.8488, -0.9769, -1.5512, -3.6991, -3.2175, -3.4198,
        -3.0234,  0.1700, -2.5428, -1.6022, -2.5778,  0.6556, -1.8069,  1.4825,
        -1.7283,  2.0609, -4.8830, -2.4271,  2.2093, -2.9270, -5.4240,  1.5012],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,349 - myNeural - INFO - Forward Pass: tensor([-3.5541,  1.2668,  0.5444,  ...,  3.3106, -0.6630,  0.8658])
2021-05-25 09:10:37,364 - myNeural - INFO - Forward Pass: tensor([-3.8559,  5.9505, -3.7568,  1.6700, -1.6952,  3.9215, -4.1504, -3.0730,
        -2.4479, -3.9881, -0.6771, -3.2603, -1.4339, -0.6260,  0.9923,  3.9711,
         0.7862, -0.2503, -3.5389,  2.9900,  4.3250, -0.8104, -1.9029, -2.6346,
        -3.0254,  0.2710, -3.3310,  2.1391, -0.5422, -3.3416,  0.8479,  0.4131,
        -1.7533, -4.7895, -1.7783,  1.8958,  1.1859, -0.8338,  3.2442, -4.3322,
        -3.3704, -2.1738, -1.1405, -2.7988, -0.8849,  1.4003, -1.8241,  0.5321,
        -1.5641, -1.6579, -1.3585,  2.8888,  1.7499,  1.6160,  3.1191,  1.3940,
         1.4602, -1.8728, -1.1459, -2.4206,  1.4618,  4.0666,  3.2593,  1.6445,
         2.1134, -2.8808,  0.5694,  0.4241, -1.5567, -2.9819,  1.9667,  3.8737,
        -0.8070,  3.2880, -1.4896, -6.2201, -2.9199, -1.6278,  0.1704, -3.2810,
         2.0942,  0.3101,  2.3719, -0.7605, -2.7474, -3.0898, -3.0348, -0.0991,
         3.9012,  0.4193, -0.4594, -1.9907, -3.3986, -3.5953, -4.2471, -3.1594,
        -1.4707,  0.3832, -2.7193,  1.9470,  1.9707,  2.1669,  1.4952, -2.1295,
        -0.2487, -1.9991, -2.3850, -3.1617,  0.6095, -3.7430, -3.3432,  4.0590,
         4.6897,  0.7223, -1.8570, -0.3401,  0.9453, -1.2827, -0.3370, -0.6752,
        -0.0351, -1.2551,  3.9572, -1.3547,  5.2039, -1.6609, -1.7607, -0.5718],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,379 - myNeural - INFO - Forward Pass: tensor([-3.6513,  1.3866,  0.5840,  ...,  3.3047, -0.6560,  0.9577])
2021-05-25 09:10:37,395 - myNeural - INFO - Forward Pass: tensor([-4.7396, -0.5125,  1.9256, -2.0421, -3.2905, -2.7581,  0.0627,  1.5796,
        -0.3046, -0.4532,  1.1178, -0.9430,  2.5107,  3.0233, -2.4650,  0.4929,
        -1.8071,  3.7443,  4.1576, -3.7793,  5.2085,  0.7146, -1.7438,  1.4508,
        -3.3405,  2.6974,  2.1372,  3.1975, -1.3587,  0.9253,  4.6568, -0.5820,
        -3.3569, -2.2124, -4.9673,  1.1048,  3.0790, -4.3620, -1.2142,  1.5880,
        -2.0525,  2.2160,  4.6586, -2.2998,  0.2076,  1.5710,  3.0689,  3.7287,
         4.9055, -0.3672,  2.5379, -0.0278, -2.3506, -0.9246,  3.1035, -3.3456,
        -2.4360,  2.7409, -2.6031,  0.1149, -3.8355, -2.0181,  1.7853,  1.5728,
         0.5285, -1.9213, -3.0037, -2.0701, -3.8615,  0.7130, -0.7705,  2.7942,
        -0.5503, -1.7083,  4.3769, -3.6838,  0.9513,  4.3704, -5.3487,  1.4926,
         2.4117, -2.3027, -0.3771,  0.8872, -2.6935,  4.6782, -2.0555,  0.6238,
         1.0474, -1.8335, -2.8438,  2.0831, -3.8274, -0.7983, -4.8734, -0.1312,
        -1.5755, -0.4779, -1.6460, -2.7508,  3.1373,  0.4338, -1.5107, -3.1759,
        -4.1554, -3.0074,  1.2043,  2.5897,  1.1409,  2.3034, -0.3687, -2.1529,
         2.4403, -1.8128,  2.5522,  1.1603, -0.5656, -2.5089, -3.5158,  0.4007,
         2.0250, -0.1879,  0.3826, -3.4267,  4.2516, -1.9826, -2.9371,  1.3453],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,409 - myNeural - INFO - Forward Pass: tensor([-3.5630,  1.5294,  0.6224,  ...,  3.3824, -0.5690,  1.0729])
2021-05-25 09:10:37,425 - myNeural - INFO - Forward Pass: tensor([ 3.6085,  2.6800, -1.3897, -2.4268,  0.6589, -1.3321, -1.0703, -1.3569,
         2.4720, -0.8657, -1.3941, -2.1708, -2.8299,  3.1105, -4.5509,  2.6179,
        -3.3799,  0.1361, -2.3476, -2.3390,  1.1334, -3.6492,  0.6649,  0.7220,
        -1.0259,  0.9179, -3.6131,  5.9780, -2.0451, -2.7753, -1.3323,  1.0776,
        -2.2096,  4.7271, -3.1235, -2.3511,  0.2778,  0.7596, -0.7482,  2.1752,
         1.8843, -1.0520, -2.7000,  4.4296, -1.4102, -2.1576, -1.2159,  1.2546,
        -2.7135,  2.0483, -3.4470,  3.3402, -0.4831, -0.9674, -4.2687, -0.9954,
        -0.9344, -1.6871, -1.2787, -0.2706, -2.5416, -1.6261, -2.4868,  1.9786,
        -0.9142, -2.5165, -0.8166, -1.5929,  0.4333, -3.0936, -2.2615,  0.6546,
         4.7784, -5.3852,  2.5084, -2.4289,  2.2709,  2.7775,  3.7808,  1.2401,
         0.9520, -1.8601, -2.1664, -2.5099, -5.7957,  3.7130, -0.8816,  0.4235,
        -1.3260, -2.3998,  1.7093, -3.8967, -3.7402,  1.4375, -2.0880, -2.1340,
         1.9274,  3.7237,  6.3234,  3.0385, -3.9349, -3.1990,  2.8852,  1.6445,
         0.3484,  3.9997,  2.8346, -4.6444,  0.0429,  4.5935,  1.9467, -2.0338,
         0.7657,  1.7451,  3.5361,  4.2214, -0.9150, -3.8845,  3.4759, -0.2700,
        -1.1159, -1.4068, -1.9973, -3.1992,  1.4724, -1.6293, -0.4657,  2.0773],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,439 - myNeural - INFO - Forward Pass: tensor([-3.7751,  1.3263,  0.2535,  ...,  3.3233, -0.7652,  0.9879])
2021-05-25 09:10:37,454 - myNeural - INFO - Forward Pass: tensor([ 1.4518e-01,  1.8241e+00,  3.7043e-01, -3.5308e+00, -3.6390e+00,
         4.2523e+00, -1.2819e+00,  3.2501e+00, -2.7492e+00,  1.6736e+00,
         1.3560e+00, -5.5249e+00,  3.3602e+00, -4.8494e+00, -8.4704e-01,
         2.5416e+00,  6.2549e-01,  2.0969e+00, -1.5055e+00,  1.3230e-01,
         2.7044e+00, -1.9054e-01,  5.1612e-01, -1.6819e+00, -3.1928e+00,
        -1.9174e+00, -2.4299e+00, -4.1640e-01, -2.0670e+00, -2.0685e-01,
        -2.0185e+00,  3.3114e-01,  1.4393e+00,  4.1716e-01, -1.0410e+00,
         2.3817e-01,  1.4399e+00,  1.7380e+00,  5.9490e+00, -1.9263e+00,
         1.3822e+00,  2.2642e+00,  3.6245e+00, -1.5983e+00, -4.4312e+00,
        -4.1776e+00,  1.7252e+00,  2.7642e+00,  2.0633e+00,  4.4970e+00,
         1.2575e-01, -2.2740e+00, -3.1257e+00, -2.9123e+00, -2.4824e+00,
        -5.2323e+00,  3.7173e+00,  3.0281e+00,  5.6646e-01, -2.9235e-01,
         2.6133e+00, -2.0113e-01,  4.6635e+00,  2.8428e+00,  4.1991e+00,
        -1.7972e+00, -6.9342e-01,  9.3635e-01, -4.3860e+00, -3.5884e+00,
        -8.5282e-01, -1.9730e+00,  3.9343e+00,  4.0958e+00, -1.9436e+00,
         4.4030e+00, -1.9594e+00, -2.1099e+00,  1.8877e-01, -1.6385e+00,
         8.9507e-01,  1.0770e+00,  4.0276e+00,  8.4227e-01, -1.7990e+00,
        -4.4483e+00, -4.4490e+00, -2.9560e+00, -3.5813e+00,  3.5072e-03,
        -3.3827e+00, -1.5744e+00,  1.7766e+00,  2.7219e+00,  5.2563e+00,
         8.9019e-01, -1.1024e+00, -2.1197e+00, -2.7505e+00, -2.8736e+00,
        -3.1989e+00, -2.3309e+00,  3.7533e+00,  3.4947e-01,  2.5815e+00,
        -3.8368e+00,  1.2171e+00,  2.6493e+00,  1.7839e+00,  1.1103e+00,
         1.6345e+00,  1.4270e+00, -3.1714e+00,  8.5006e-01, -2.0010e+00,
        -3.1746e+00,  1.5117e-01, -5.0999e+00,  8.7811e-01, -9.1947e-02,
         1.4325e+00,  4.8842e+00, -1.6801e+00, -4.5034e+00, -3.0590e+00,
         1.5672e+00, -3.8737e+00, -3.2456e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,472 - myNeural - INFO - Forward Pass: tensor([-3.6748,  1.6845,  0.6171,  ...,  3.6703, -0.5323,  1.2083])
2021-05-25 09:10:37,488 - myNeural - INFO - Forward Pass: tensor([ 1.3792e+00, -3.0661e+00, -1.7662e+00, -2.4749e+00,  4.9212e+00,
        -1.1449e+00, -1.4617e+00,  1.4673e+00,  2.5430e+00,  3.1358e+00,
         4.1844e+00, -8.8710e-01,  1.6089e+00, -5.5927e-01,  3.4109e-01,
        -1.0367e+00, -3.1741e+00, -4.8351e+00, -4.6919e+00, -4.6268e+00,
        -5.2355e-01,  1.8178e+00,  4.3358e+00, -1.6094e+00,  5.0809e+00,
         3.3232e+00, -6.7997e-03, -2.9154e+00, -2.0763e+00, -3.3570e+00,
        -3.8327e+00,  4.4065e-01,  3.6368e+00, -9.3883e-01, -1.3431e+00,
         1.4868e+00,  1.2613e-02, -1.7007e+00, -2.4087e+00, -3.3130e+00,
        -5.0342e+00, -3.1889e+00,  1.0918e+00,  1.6211e+00,  6.3266e+00,
         3.8787e+00,  1.5500e+00,  8.8011e-02, -1.0239e+00, -1.1476e-03,
         4.7862e+00,  2.7887e+00, -1.1629e+00,  4.8978e+00, -7.8829e-01,
         5.5147e-01,  3.2364e+00,  1.8842e-02,  1.6174e+00, -8.1802e-01,
         3.4211e-01,  3.0726e+00,  4.0216e-01, -3.5025e+00,  4.9655e+00,
        -4.3400e+00,  3.2647e+00,  3.1911e-01,  2.4035e+00,  6.2024e-01,
         2.7972e+00,  2.1830e-01, -2.0325e+00, -4.8335e+00, -3.4985e+00,
         4.4319e+00,  1.0834e+00, -1.5188e+00,  1.1872e+00,  3.1693e+00,
        -9.5894e-01, -2.6801e+00,  1.9911e+00,  5.0745e-01, -9.7182e-01,
         3.4458e-01, -2.9805e-02, -9.0218e-01,  7.0232e-01,  2.9015e+00,
         2.5713e+00,  2.0183e+00,  9.3766e-01,  4.1105e+00,  2.5002e+00,
        -2.7577e+00, -9.8815e-01,  2.3174e+00, -1.5205e+00,  7.6866e-01,
         4.8956e+00, -1.8020e+00,  2.1894e+00,  1.5914e+00, -5.7025e-02,
        -3.5849e+00,  1.9783e-01,  1.4187e+00,  5.8189e+00,  4.4755e+00,
         5.4457e+00,  2.2921e+00,  2.6375e+00,  1.9085e+00,  1.9554e+00,
         3.1398e+00, -3.1558e+00,  5.0146e+00, -3.1364e+00, -3.6284e-01,
         3.6923e+00, -4.9048e+00,  1.8045e-03, -3.0188e+00,  5.0815e-01,
        -1.6972e-01, -2.5192e+00, -3.7734e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,505 - myNeural - INFO - Forward Pass: tensor([-4.5028,  1.1655, -0.1621,  ...,  3.1653, -1.0982,  0.5978])
2021-05-25 09:10:37,523 - myNeural - INFO - Forward Pass: tensor([-0.5346, -0.0689, -2.2401, -1.0115, -3.5007, -1.2501, -0.7916,  2.9775,
         0.1892, -1.5817, -2.1350, -4.8362,  1.8713,  3.6270, -5.1226, -6.0248,
         2.4598, -0.4161,  2.5263,  3.2829, -3.6692,  3.3515, -5.8683, -0.2684,
         2.5653, -2.4499, -1.2352, -4.9072, -1.5344,  2.3970, -3.4696, -1.9582,
         3.9442,  0.8615,  1.7297,  3.5036,  0.0968, -1.4114, -2.4114, -4.5226,
         0.2451,  0.0322, -1.4450, -3.8410, -0.3089,  1.7984,  0.2229,  0.0377,
         1.1618, -3.0531, -1.2873, -0.4396, -1.8967,  1.4929,  0.6610, -3.2096,
         3.0445,  3.3462,  0.9349,  0.1933, -4.3627, -2.0870,  2.7954, -3.4576,
        -1.7136, -2.8189,  0.5154,  1.3177, -2.6797, -2.3013,  4.0456, -2.1531,
        -0.9107, -3.8234, -0.6052, -2.0720,  3.1084, -2.5620, -0.0333, -4.4687,
         3.3789, -2.9673, -3.0423, -3.5899,  1.6544, -1.5788,  0.1856,  1.1516,
        -1.4921, -4.4706, -4.2179, -2.0330,  2.5344,  1.8930,  0.2572, -2.0225,
         2.8191, -1.4464, -2.6580, -5.7729, -4.6882, -5.0495,  2.2823,  1.3461,
        -5.3353, -1.8007,  1.2131, -3.3010,  1.2217, -2.4077,  0.3859,  2.5126,
        -3.8497,  2.5461,  2.8337, -3.8384,  0.3595, -0.7717, -3.1395,  4.0607,
        -5.5169, -4.7844, -3.9101, -2.7506, -4.5473,  3.4162,  2.7028, -2.3347],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,544 - myNeural - INFO - Forward Pass: tensor([-4.1103,  1.6781,  0.2225,  ...,  3.7246, -0.7265,  0.8976])
2021-05-25 09:10:37,565 - myNeural - INFO - Forward Pass: tensor([-2.2304,  1.9615,  0.4488,  4.9384, -4.8626, -1.8263,  2.2408,  0.8636,
        -3.4125, -3.0874,  4.3361,  3.7147,  1.2747,  3.5392, -0.3243,  2.4855,
         3.4468, -5.7716, -1.1114,  5.9674, -1.8354, -0.6911,  3.3745, -3.3167,
         2.2696,  4.1061, -1.8523, -1.6441, -1.3797,  0.3474, -1.8180, -1.1870,
        -0.0842, -0.7351,  0.2764, -5.4113, -3.5135,  0.4411,  2.9381, -4.3287,
        -2.4170,  5.9939,  5.6810, -1.0069,  1.5539, -2.0888, -0.1746,  2.2968,
         1.3802,  3.0902, -2.7064,  3.9093,  0.8082, -2.9340,  0.5237,  0.5946,
         2.3940, -0.0487, -1.7839, -0.4526,  1.3090, -1.1723,  3.5840, -2.3850,
        -1.7395, -1.1822, -4.1191,  0.7789,  1.1109, -0.1826, -0.2294,  0.4753,
         3.1838, -2.2217,  3.7337, -2.1926, -1.9194,  2.6536,  3.1196,  5.6279,
         2.5563, -0.2761,  3.1164, -2.9051,  0.4726,  5.2108,  0.2885, -2.3182,
        -1.2845,  1.3627, -1.1211,  1.4036, -3.3276, -3.3985, -3.1684, -0.1542,
         3.7405,  3.1074, -2.3049, -4.3542, -1.3034, -2.2498, -1.8846,  0.0963,
         1.4643,  4.3357, -0.9776,  2.4887, -2.7313, -1.1629, -2.7025, -3.4651,
        -1.1458,  5.2294, -1.4209,  2.7992, -3.1930,  4.9400,  0.4388, -4.1204,
        -1.6066,  3.0216, -0.2599, -1.7071, -1.3185,  0.9876,  3.6425,  2.0368],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,583 - myNeural - INFO - Forward Pass: tensor([-4.1189,  1.5034, -0.0119,  ...,  3.5501, -1.1537,  0.5593])
2021-05-25 09:10:37,602 - myNeural - INFO - Forward Pass: tensor([ 0.4236, -1.3912,  2.1202, -2.0317, -1.1820,  1.0467, -2.5881, -2.9049,
        -1.1095, -3.3355, -2.2831,  0.8722, -0.5197,  0.1293,  1.4275,  3.7213,
         2.7622, -2.8237,  3.1953,  2.3946,  2.9395,  1.3923, -2.2708,  1.0276,
        -3.3494, -1.0484,  3.6082,  1.6969,  4.0523,  2.9292,  3.9176,  1.9550,
        -2.0876, -4.4672, -0.6319,  3.1605,  2.6216,  5.7213, -2.9850,  1.6469,
         3.8090, -0.9442,  0.1505,  3.3291, -3.7662, -3.9363,  1.8958, -0.1573,
         4.2794, -0.3370, -1.5429,  2.2557,  4.6420, -0.3111,  2.3279, -5.8293,
         0.2279, -6.1223, -1.2771, -2.2582,  1.8614, -0.2025,  1.2554, -3.2150,
        -1.3721, -5.1818, -2.2024,  2.1839, -1.3088,  1.7878,  1.6029, -2.2749,
         1.6369,  0.9482,  2.2118,  2.0925,  2.7722,  0.3878, -5.1479,  0.9823,
         2.0709,  4.4473,  2.8943,  3.6728, -0.2149,  1.7577, -5.0585, -2.6920,
        -3.7160,  1.7563, -3.7999,  1.0843, -2.0100,  0.5116,  3.5964,  2.0101,
        -0.1315,  3.3244,  2.4739,  1.2455,  2.1348,  2.6622,  3.0780,  1.2601,
         3.0431, -0.4857, -0.6268, -4.8178,  1.5219,  0.9144, -1.6257, -2.3777,
         4.2341, -2.2657, -2.0592,  1.5147,  0.8658,  3.9142,  0.9902, -2.8962,
        -2.3673,  0.2743, -0.4446,  1.1029, -1.9113,  1.9174, -0.7534,  1.9528],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,621 - myNeural - INFO - Forward Pass: tensor([-4.0953,  1.5033,  0.1604,  ...,  3.7370, -1.2067,  0.8018])
2021-05-25 09:10:37,645 - myNeural - INFO - Forward Pass: tensor([ 5.6342, -1.3502, -1.4138,  1.0718,  3.0465, -3.7969, -0.0720, -0.8050,
         0.2275, -4.1725, -1.8075,  0.2985, -1.2005, -1.6754,  1.1908, -2.0819,
         1.5226, -5.4462,  1.1812, -4.6854,  1.4497, -0.2326, -3.6088,  1.2804,
        -2.0392, -1.3216,  3.4978, -4.7734, -1.6034, -3.4906, -0.2423, -3.0606,
         3.6024,  1.7175, -4.2088,  2.7940, -2.7970, -2.8992, -3.3503,  6.4441,
        -2.5018,  0.2970,  3.0901, -0.1555, -2.1579,  2.5726,  1.7937, -2.6107,
        -2.6510, -2.1004, -1.4858, -1.7269, -2.5619,  5.8125,  4.3302,  1.8373,
         1.8336,  1.8549, -2.4478,  1.9717,  1.3657,  0.0693,  0.7286,  3.9721,
        -0.0872,  2.0619,  4.1258,  2.2532, -1.0887,  3.8502,  0.1970,  3.4190,
        -2.0646, -3.7803, -3.8973,  2.3710,  0.4314,  2.4534, -1.5927,  2.5867,
         2.9691,  2.4160,  2.6164, -0.5942, -4.9544, -0.2159,  2.6432,  2.4353,
        -1.4755, -3.1214, -1.6856, -2.8791,  0.2773, -0.0244, -4.4115, -4.5329,
        -2.6806,  2.3493,  0.5295,  4.2086,  2.4228, -0.9048,  2.7468,  5.6801,
         4.1190,  0.2628,  5.9469, -2.3345, -2.4044,  0.2773,  0.7808,  0.2747,
         3.6102, -3.2569, -2.1900,  2.6409, -0.3756,  2.9927, -0.4147,  0.3915,
         1.7210,  2.2527,  4.7539, -4.2856, -3.0500,  0.6568, -4.0673, -3.4204],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,664 - myNeural - INFO - Forward Pass: tensor([-4.0312,  1.2398, -0.0466,  ...,  3.6793, -1.1606,  0.5275])
2021-05-25 09:10:37,683 - myNeural - INFO - Forward Pass: tensor([ 2.9039,  5.1566, -3.1633,  1.6259,  1.1366,  3.9651,  1.2760,  2.7413,
        -1.4054,  1.4662, -5.1317,  2.8984,  0.0845, -6.1529, -3.4449, -1.3993,
        -4.5241,  0.9148, -1.5653,  0.1071, -3.0865, -1.3550, -2.1489,  3.1551,
        -4.6385, -4.8858, -2.3194, -3.7815,  0.6268, -0.2775,  1.9271,  1.6431,
         2.9396, -2.5961,  0.7493,  0.9925,  0.4506, -0.9638, -2.7299,  0.1200,
        -0.8900, -1.1455, -2.1314,  2.5761, -1.5536, -2.3347, -1.1066,  2.6419,
        -4.7882,  0.0382, -0.4061, -3.6218,  2.4140,  1.8156,  2.3314,  1.4062,
        -4.2240,  0.6593, -1.3493, -2.5315,  1.5119, -3.4392, -0.3320,  0.0107,
         0.2054,  4.6624,  1.6148,  4.2125,  0.6470, -1.4533, -0.8022, -0.8233,
         2.0787, -1.3253, -0.4521,  2.3693, -2.7633,  0.4204, -0.6851, -1.2583,
        -1.6727, -2.0275, -0.9420, -0.1022, -4.8990, -3.8672, -5.5598, -2.4284,
        -4.1555, -1.0684,  1.9503, -2.7142, -0.1437,  5.0257, -0.1051,  3.4207,
        -3.7752, -0.8015,  1.9765,  3.2505, -6.4021, -5.5480, -0.7230,  4.3494,
         3.0323, -5.3802,  5.1611,  1.8845,  1.0034,  3.0800, -4.6561, -1.9354,
        -2.1402,  0.6868,  1.3771, -4.0921, -0.3840,  0.2682, -4.2854, -1.8644,
         2.1620, -4.1012, -2.7009, -2.5057, -2.7986,  0.0550, -1.7746,  4.4949],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,702 - myNeural - INFO - Forward Pass: tensor([-4.1457,  1.5407,  0.1867,  ...,  4.1226, -1.0624,  0.6653])
2021-05-25 09:10:37,724 - myNeural - INFO - Forward Pass: tensor([ 2.2710e+00,  9.9043e-03, -2.8062e+00, -4.8947e+00, -3.5778e-01,
         9.3172e-01, -2.9382e+00, -5.2448e+00, -2.0707e+00, -1.9866e+00,
        -3.9621e+00, -1.2976e+00, -1.1913e+00,  2.0270e-01,  1.5822e+00,
         1.4406e+00,  3.8709e-01, -2.6482e+00, -1.3037e+00,  7.0448e-01,
        -1.8065e+00, -1.2527e+00,  7.6540e-01, -4.1447e-01,  1.5982e+00,
        -2.6439e+00,  2.1397e+00,  3.6601e+00, -1.1836e+00,  6.7340e-01,
        -3.6947e+00, -1.8524e+00,  7.4758e-01, -6.3753e-01, -4.4023e+00,
         4.4666e+00, -4.8203e+00,  8.9245e-01, -3.4280e+00,  8.9068e-01,
        -2.6931e+00,  3.7198e+00,  2.8508e-01, -4.7796e+00,  2.8513e+00,
        -1.0035e+00, -3.0610e+00, -8.3379e-01,  3.3162e+00,  1.9872e+00,
         1.8192e+00,  5.9316e+00, -3.0164e+00, -3.7396e+00,  2.4162e+00,
         4.3445e+00, -1.2221e+00, -4.8252e+00, -2.6237e+00, -4.2928e-01,
         1.3385e+00,  5.0909e+00,  1.7221e-01, -3.3020e+00,  4.4611e+00,
        -1.8224e+00, -4.3440e+00,  3.9125e-01, -1.3684e+00,  3.0454e-01,
        -1.6698e+00, -1.8735e+00,  2.2241e+00,  1.0835e+00, -1.5810e+00,
         6.2145e-01, -3.9061e+00, -3.0298e-01,  3.8517e-01,  2.2823e-01,
        -1.0877e+00,  4.6995e+00,  3.3785e+00,  1.7952e+00,  2.4114e+00,
        -9.0979e-01,  3.0794e+00, -3.8332e-01,  1.0240e-01, -3.0311e+00,
        -4.4237e+00,  2.8045e+00, -1.5117e+00, -3.1794e+00,  2.5547e+00,
        -1.1201e+00, -4.6027e+00, -3.1470e+00, -2.2958e+00, -1.8716e+00,
         1.8711e+00, -3.6258e+00, -3.9420e-01,  2.9263e+00, -3.8396e+00,
        -3.7480e+00, -1.5871e-01, -1.0510e+00,  2.6313e-01,  1.1668e+00,
        -4.5701e+00,  1.5729e+00,  1.0420e+00,  3.8683e+00,  6.2118e-01,
        -3.1782e+00,  2.1670e-03, -2.0750e+00,  2.0166e+00,  2.3367e+00,
         3.7303e+00, -3.4830e+00, -5.2698e+00,  1.1361e+00, -5.1413e+00,
         6.9590e-01, -2.9288e+00, -5.1695e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,743 - myNeural - INFO - Forward Pass: tensor([-4.3706,  1.0473, -0.0591,  ...,  3.6933, -1.7439,  0.1141])
2021-05-25 09:10:37,767 - myNeural - INFO - Forward Pass: tensor([-2.6337, -0.9412, -2.1666,  3.8225, -1.5741,  3.3341, -0.4380,  1.6262,
         0.0493, -2.2598,  1.7898,  2.6425, -3.3813,  1.7322,  3.1337,  0.4408,
         1.4246,  4.4431,  3.3219,  3.7624, -1.0327,  2.3610, -1.5658, -0.8439,
        -2.2719, -0.8639, -4.3159, -1.7103,  2.2767,  2.3709, -3.9106, -3.4850,
         5.4634,  1.0725,  2.1206,  1.9239,  1.9098,  3.3461, -4.4757, -2.7656,
        -1.8846, -0.1594, -3.1485,  2.6498, -2.5279, -5.1911,  0.1651, -2.3101,
        -4.9631,  3.5080,  3.5987, -3.4257,  2.9862, -2.1749,  1.5055, -2.2287,
        -3.0156, -3.0353,  1.2899, -4.3492, -4.8782, -2.8226,  2.0388,  0.2862,
        -0.2882, -0.0839, -2.3713, -2.1878, -2.1114, -1.9343,  0.7910, -1.7327,
         3.8018, -3.0152, -2.9638, -2.3860, -1.5199,  1.1396, -4.3071, -1.3269,
         3.1267, -3.4092, -4.3493, -1.5363, -1.4973, -4.7713, -1.8133,  1.7410,
         2.3076, -1.0223,  0.3745,  3.5520, -1.6977,  2.4159,  3.7369,  0.9127,
        -5.4807, -0.1418, -2.6233, -2.9572,  2.6031,  4.5556,  3.3457, -1.4272,
         0.3651, -0.8743, -0.3906, -1.6590,  0.0188,  1.4800, -1.3832, -1.2013,
        -0.9533, -4.6315, -3.6463,  0.8266,  3.6554,  1.0246,  0.1911, -1.3004,
        -0.5710, -1.9718,  1.8382,  2.8490, -2.5345, -4.1978,  4.6595,  0.5609],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,790 - myNeural - INFO - Forward Pass: tensor([-4.4913,  0.8975, -0.0846,  ...,  3.5615, -1.7680,  0.1482])
2021-05-25 09:10:37,814 - myNeural - INFO - Forward Pass: tensor([ 2.9697,  3.6399,  1.1880, -1.4947,  0.3630, -4.3695,  0.0093,  1.1800,
        -5.4447,  0.7622,  0.3128, -0.1637, -0.5819,  1.3531, -1.0167,  4.5735,
         1.9598, -0.3652, -3.5043, -3.1618, -3.8454,  2.6893,  2.6840,  0.0474,
        -5.5300,  3.1974, -0.1181,  2.6261, -0.7573,  1.2325, -1.9024, -0.3105,
        -4.4016,  4.8584, -1.7632, -3.6260,  2.2947,  1.0814, -2.7516, -4.4392,
         1.4401,  2.3576, -3.4289,  5.1597, -2.8673,  1.9099,  3.2182,  2.0162,
         0.2618, -2.2723, -1.1696, -2.8648,  1.1063, -4.8493,  3.8177,  0.4006,
         3.5708,  0.0188,  0.3388,  2.3751,  3.9119, -1.8095,  2.8247,  0.1083,
        -1.4569,  2.8277, -3.1057, -2.0916, -4.2970,  1.8939,  0.7841, -0.3834,
         2.8238,  3.5676,  2.2834, -1.5688, -2.1123,  0.4972,  0.7279, -1.1695,
         2.7982, -2.1705,  4.0650, -4.3498, -0.9178,  0.6195, -2.2766,  2.9503,
         1.2212,  1.2597, -2.3974,  0.2902, -1.7336,  2.1211, -2.8257, -1.7447,
         5.0287,  0.9036, -1.2278,  0.2944, -0.6838,  3.0010, -1.5555, -2.5025,
        -4.4199,  4.1919, -1.1710,  1.2702, -5.9408,  2.1036, -0.3464,  1.2769,
        -3.1112,  0.0287, -2.3780, -1.9784,  4.6042, -2.6081, -1.4255, -0.3399,
        -0.9160, -4.9502, -3.5204,  1.1298, -1.1987,  1.7894,  2.0493,  4.7402],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,834 - myNeural - INFO - Forward Pass: tensor([-3.8226,  1.6140,  0.5002,  ...,  4.0865, -1.2405,  0.6417])
2021-05-25 09:10:37,858 - myNeural - INFO - Forward Pass: tensor([ 3.7999,  3.8463, -2.2853, -2.4708, -5.2336, -1.4656, -2.8478,  2.4127,
        -1.9250,  0.3863,  0.0721,  5.6520,  0.4821, -2.1120, -1.4563,  4.7190,
         3.0007, -2.1608, -0.0453, -3.0916, -0.0839,  4.0867,  5.1128, -0.5679,
         1.4820, -1.0213, -4.0048,  3.7926, -1.5383, -2.7514, -5.6659,  1.5092,
         2.3421,  1.8806,  1.4495,  3.5748, -0.7370, -1.8072,  5.0323, -2.0360,
        -2.1730,  1.3681, -6.4890, -5.1838, -3.1032, -0.4416,  1.4809,  1.1173,
         5.3607, -0.8662,  3.7504, -2.2301, -6.2531, -0.1721,  1.3970,  2.3948,
        -1.2412, -2.7688, -1.6253, -3.0242, -1.9878,  4.4543,  3.3151,  5.9362,
         5.1764,  0.0552,  1.6908,  3.3886, -6.0152,  3.4391,  2.3977,  0.3323,
         0.6293,  3.0011, -2.5332,  1.7516, -0.0101, -0.4292,  1.5890,  4.6318,
         2.7340, -0.5187,  0.8839,  3.7513,  3.2588,  3.1518,  3.8050,  3.2180,
        -0.6083, -4.4889, -3.4585, -3.7707,  0.6494, -0.3718, -2.5190, -2.8918,
        -1.6861,  2.0300, -0.7070, -5.9061,  5.1365,  0.6854,  2.0000, -0.9184,
         3.5160,  3.6596, -3.2482,  3.0365,  2.1746,  0.0207, -0.5535,  2.5605,
         1.2949, -0.8811,  1.7266,  2.8914,  2.1893,  2.3107, -1.9510,  3.8650,
         3.4173,  2.8061,  2.2107,  5.9692, -1.4485,  2.7021,  0.5461,  2.7469],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,880 - myNeural - INFO - Forward Pass: tensor([-4.4892,  1.2695,  0.0670,  ...,  3.7650, -1.7430,  0.5880])
2021-05-25 09:10:37,901 - myNeural - INFO - Forward Pass: tensor([-1.4511, -1.3264, -2.6249, -1.7698,  3.6487, -3.5644, -2.3144, -1.3890,
        -3.3598, -2.6922, -3.6018, -3.2810, -3.7962,  2.6465,  1.3935, -3.0401,
         1.1843, -3.7096, -2.4090, -7.2476,  2.3521, -2.2323, -3.5452,  1.2445,
         0.6747, -1.2733, -1.9849,  1.9190, -5.7728, -0.9627,  1.0343, -0.1602,
         2.2669, -5.0255, -3.2531, -2.6205,  2.2778, -2.9267,  1.9148, -1.0734,
         2.5918, -2.7844,  4.8038,  1.3159,  1.7027,  1.2935, -0.2131,  1.5695,
        -1.0692, -0.1192,  1.2786,  0.1921, -1.6260, -1.4870, -2.4630, -3.3799,
        -4.3661, -5.4845,  4.8834, -3.0060, -1.1291, -3.7607,  5.1555, -3.6311,
        -3.3757, -0.4886, -0.1667,  1.6693,  3.4040,  1.1304, -1.9096, -1.5125,
        -1.0503,  1.1907,  1.0434, -0.3231, -1.5384, -2.3680,  1.2378,  0.7525,
         4.3810, -0.5041, -3.7611, -1.7876,  4.7906, -2.6269,  2.4408, -3.6193,
        -5.7741, -3.8436, -2.6282, -2.8582, -2.2575,  3.2781,  1.6454, -0.3789,
        -3.7864,  3.0013, -2.8451,  2.9941,  0.5057, -2.2252,  5.0990, -1.0982,
         0.2029, -1.4072, -0.3927,  4.7095,  1.9047,  2.8272, -4.7083, -3.3355,
        -1.6591, -1.1904, -2.7920, -1.7739, -2.5359, -0.0628, -0.1615, -4.8028,
        -3.4486,  0.2980, -2.1888,  2.8457,  0.4885,  1.3084,  0.5994,  0.3637],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,920 - myNeural - INFO - Forward Pass: tensor([-4.0949,  1.6886,  0.4142,  ...,  4.0671, -1.2024,  1.0190])
2021-05-25 09:10:37,938 - myNeural - INFO - Batch 40 -- TrainLoss: 0.48343 -- TrainAcc: 79.68750% -- TestAcc: 82.05000%
2021-05-25 09:10:37,943 - myNeural - INFO - Forward Pass: tensor([-2.4079e+00, -9.2217e-01, -1.7523e+00,  4.4081e+00,  1.0122e+00,
         6.6477e-02, -2.6952e+00,  1.2079e+00,  1.0439e+00,  4.4287e+00,
         3.5352e+00, -7.0595e-01,  3.4258e+00, -3.9375e-01,  3.0983e+00,
        -4.5319e+00, -3.5753e+00, -2.1382e+00, -2.5616e+00,  3.0949e-01,
         2.7015e+00, -3.6745e-01, -2.1902e+00, -2.1820e+00,  2.3295e+00,
         5.5314e-03, -3.5187e-01,  3.5216e+00, -2.5285e+00, -1.2638e-01,
         3.2498e+00,  3.0406e+00, -4.0992e+00, -3.3994e+00, -3.6903e-01,
        -2.1378e+00,  1.8109e-01,  3.3869e-01, -2.1529e+00, -2.1236e+00,
        -4.8052e+00, -2.6594e+00,  5.4081e+00,  3.5634e+00,  1.0106e+00,
         3.7144e+00, -1.9872e+00, -5.2977e+00, -6.1892e-01,  5.4886e-01,
        -3.5183e+00, -4.2262e+00,  1.0354e+00,  1.9574e+00, -1.9421e+00,
         2.6607e+00, -4.7877e+00,  2.9238e+00,  2.8196e+00,  2.0506e-01,
        -1.5842e+00, -1.4437e+00, -3.6057e+00,  6.0783e-01, -5.0198e+00,
        -2.3478e+00,  3.8687e+00,  4.2431e+00, -2.1065e+00,  2.1986e-01,
         6.0685e+00,  2.2446e-01,  2.8205e+00,  3.7381e+00,  2.0415e+00,
         7.1406e-01,  2.7649e+00, -5.9515e-01, -1.9009e+00, -2.7917e+00,
        -1.8760e+00, -2.2082e+00, -3.2488e+00,  2.0868e+00,  3.9283e+00,
        -3.7058e+00, -2.8865e+00, -3.0558e+00, -9.8549e-01,  1.1541e+00,
         5.0503e-01, -2.0465e-01, -3.7725e-01,  2.7549e+00,  1.7532e+00,
         3.1221e+00, -1.6115e+00,  7.3622e-01,  5.0460e-01,  1.0020e+00,
         2.9578e+00, -2.9210e-01,  2.4717e+00,  6.3102e+00,  4.5099e+00,
        -3.0041e+00, -1.5874e+00, -3.8937e+00, -2.5124e+00, -2.7773e+00,
         5.9734e-01,  3.0614e+00,  3.0626e+00, -1.8418e+00, -1.1676e+00,
         4.8053e+00, -2.9091e+00, -2.8004e+00, -1.1423e+00,  2.6647e+00,
        -4.0824e+00,  2.3643e+00,  3.0971e+00,  5.5694e+00,  3.2374e+00,
         4.9017e+00, -3.5719e+00,  2.6219e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,963 - myNeural - INFO - Forward Pass: tensor([-3.8690,  2.0034,  0.8029,  ...,  4.1900, -0.9608,  1.1464])
2021-05-25 09:10:37,983 - myNeural - INFO - Forward Pass: tensor([ 0.6945,  4.4488, -1.1969, -3.8192, -1.1781, -2.7226,  3.0703,  0.5268,
         2.4758,  3.1013,  1.5331, -0.1235,  2.5805,  1.7515,  1.6995, -1.3146,
         1.2226,  1.2750,  0.7119,  3.5019, -0.8793,  2.9479,  0.1856,  5.2635,
         3.6644,  0.7846,  1.1722,  4.5564, -4.6488,  3.1169,  3.8033,  1.1826,
        -4.8440,  2.0266,  4.6918, -0.0635,  2.6793,  0.5701, -0.9625,  5.3443,
        -1.1127, -2.4750, -0.8778,  3.8591, -0.0404,  3.6030,  1.2747,  1.9794,
        -1.5613,  3.8027,  3.7635, -0.1729,  2.8463, -0.7494,  2.3966, -1.2552,
        -2.9751, -1.7734, -3.2574,  6.2472, -5.3100,  4.8120,  0.1449,  1.3180,
        -2.5759,  0.9820, -1.2926, -3.6073,  1.5287, -1.7724, -1.3893,  3.2318,
         0.5204,  3.5370, -2.0328,  2.3047,  2.6170,  2.7090, -1.5634, -0.5024,
         0.4733, -1.5944, -0.5659,  5.0707,  1.4030, -4.4505, -4.8163, -1.3100,
        -1.8534,  5.8501,  3.1501, -0.1094, -0.0075,  3.0524,  3.6025,  1.5595,
        -0.1508,  0.0408,  0.9060, -0.1963, -2.5549, -1.3067,  1.3844,  2.4508,
        -2.2857,  2.2537, -2.3196,  6.0433, -2.1242,  1.6707,  2.3094, -2.8878,
         2.2876,  3.0503,  5.7608,  1.4735, -1.5222,  2.6249,  4.4016,  0.5870,
         1.9222, -0.6140,  0.7424,  5.8785,  2.3754, -4.0145,  2.8767, -0.5915],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:37,999 - myNeural - INFO - Forward Pass: tensor([-3.7874,  1.7867,  0.5541,  ...,  3.8674, -1.3715,  1.0989])
2021-05-25 09:10:38,019 - myNeural - INFO - Forward Pass: tensor([ 3.5784e+00, -1.3641e+00, -1.2753e+00,  4.0240e+00, -1.2930e+00,
         1.9997e+00, -3.8373e+00,  4.8806e-01, -3.7169e-01, -3.1830e+00,
         3.3429e+00, -1.4030e+00,  7.3677e-01,  4.2773e-01,  2.2525e+00,
        -3.2330e+00,  2.2367e+00, -4.2121e+00, -3.1059e-01,  3.6454e+00,
         7.4743e-01,  3.4129e-02,  5.7797e-01, -3.3660e+00, -9.4562e-01,
        -6.0314e-01,  2.2141e-02, -5.3148e+00, -1.0698e+00,  3.3732e+00,
         8.2844e-01,  3.8540e+00,  2.1761e+00,  9.2474e-01,  3.3016e+00,
        -2.4465e+00,  2.1174e+00,  3.9930e+00,  3.2171e+00,  6.1768e-01,
        -2.6557e+00, -1.4831e+00,  1.4435e+00,  1.0833e+00,  2.7298e-01,
        -3.4928e+00,  5.3034e+00, -1.6227e+00,  1.3216e+00,  2.2965e+00,
        -5.9753e+00, -4.6074e+00, -1.9364e+00, -2.5331e+00, -2.7329e+00,
         1.6097e+00,  4.8477e+00,  2.7312e-01,  4.3374e+00, -2.3302e-01,
        -1.6303e+00, -2.9362e+00, -3.4710e+00, -2.5972e+00, -1.9279e+00,
        -2.0548e+00, -5.1023e-01, -9.1427e-01,  1.9774e+00,  1.2531e+00,
        -3.3707e+00, -1.4104e+00,  3.3367e+00,  2.2739e+00,  8.0956e-01,
         4.0323e+00, -3.4276e+00, -2.4821e+00,  6.2682e+00, -3.6135e-01,
         1.9434e+00,  2.0253e+00, -1.4730e+00,  3.6092e+00,  1.2593e-01,
         1.0658e+00,  1.5125e+00,  3.5891e+00, -2.9693e+00,  2.4332e+00,
        -1.0782e+00,  2.0108e+00,  1.0201e+00,  3.6974e+00,  1.6837e+00,
         2.0782e+00,  3.0811e+00, -4.2437e+00, -2.2098e+00,  1.9343e+00,
         1.9079e+00, -3.8097e+00,  1.7858e+00,  1.2288e-02,  3.5320e+00,
        -2.1257e+00,  3.7492e+00, -7.4138e-01,  1.7570e-01, -1.2480e+00,
         2.2641e+00, -2.0197e+00,  2.9394e+00,  5.2123e+00,  2.1965e+00,
        -2.4365e-01, -3.4766e+00,  2.6998e+00,  2.3140e+00, -1.8368e+00,
         1.3414e+00,  8.9712e-01,  2.5134e+00, -1.1698e+00,  1.7771e+00,
         3.4403e+00, -2.2587e-03, -3.9542e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,038 - myNeural - INFO - Forward Pass: tensor([-4.4226,  1.1329, -0.1866,  ...,  3.4446, -1.7427,  0.3695])
2021-05-25 09:10:38,064 - myNeural - INFO - Forward Pass: tensor([ 5.9797, -0.0472, -3.7405, -2.7946,  2.6367, -0.9306, -0.4016,  1.6495,
         2.3631,  0.8400,  5.1312, -3.1130,  1.1891, -0.9237, -0.8621,  3.0548,
        -1.3663,  5.5616,  2.2413,  0.3768,  5.9996,  0.4708,  2.7958, -3.9972,
         3.1409,  1.4320, -2.5957, -3.7250,  1.0710, -2.3249, -1.9486, -3.7383,
        -0.7922,  1.5722,  3.8843, -4.0652, -1.2990,  1.9076, -3.8481, -0.2930,
         1.1488, -0.9075,  3.2211, -3.8519, -1.2797, -2.8151, -1.7400, -4.0920,
         2.7177,  1.5697,  2.6035,  4.1753, -1.0434,  3.0594, -0.7716,  0.2016,
         2.3033, -0.8658, -0.3504, -0.2292, -3.2154,  4.8083,  1.1449, -2.2916,
        -1.3237,  1.5518,  1.0280, -3.5214,  2.2994,  5.0012, -2.7849,  1.9520,
         0.2056,  2.1778, -0.6216, -3.6661,  0.6634,  2.8996, -0.5492, -0.1153,
        -1.7893, -2.9458, -0.6130, -2.4490,  2.4426, -1.5359, -0.4646,  2.8110,
         3.9777,  0.0670, -1.0622, -2.9110, -1.5702,  1.9255,  2.0576, -3.0363,
         6.6668,  4.8318, -5.4937,  0.7262, -0.7855,  0.6426,  1.4002,  3.9768,
        -1.9853, -0.1387, -3.5167,  2.8726, -1.3701, -1.8340, -1.2132, -0.0326,
         0.6479, -0.6269, -1.4984, -1.6514, -7.2518, -4.0495, -0.6155,  1.5520,
        -0.5187, -1.3468, -5.0400, -2.8781, -1.0384, -3.8028, -3.4849, -4.4544],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,082 - myNeural - INFO - Forward Pass: tensor([-4.1469,  1.2425, -0.0944,  ...,  3.5108, -1.4453,  0.6673])
2021-05-25 09:10:38,104 - myNeural - INFO - Forward Pass: tensor([-1.0847, -0.2863, -1.1833,  1.0290, -2.7962, -1.0882,  4.2919,  3.1937,
         0.1460,  1.3221,  3.9671,  3.8245,  2.1208,  1.7181,  3.2465, -0.3739,
         3.7882, -3.9218, -1.2048,  4.6954, -0.3562, -2.1402,  0.6118, -2.2307,
        -2.0506,  2.7779,  0.5290, -0.7182,  0.1928, -2.3813,  1.7859, -1.2519,
        -0.1430,  3.8632, -3.4084, -1.3190, -2.5548,  2.8372, -2.5468, -1.1670,
        -0.8994,  1.4529,  4.4617, -3.9233,  0.9669, -3.2218, -2.4737, -0.8800,
         1.0940,  0.4030,  2.2252,  4.3999, -2.6596,  5.7979, -1.0796,  2.7875,
        -4.4790, -1.3177,  0.4705,  4.4552,  0.5867,  0.2661,  4.1876,  3.3184,
        -1.3766,  0.5610,  2.3401, -3.0189,  3.8450,  2.6819,  0.3540,  0.7719,
        -3.7640,  1.7479, -1.8968, -1.1120, -0.3949, -2.4870,  1.2985, -5.1477,
        -0.8385,  2.3706, -4.1251,  0.9560,  0.6821,  0.7450, -3.2742,  5.9851,
         1.3492, -2.2547,  3.8180,  2.7934, -3.3200, -3.5363, -1.9930, -2.0396,
         1.2054,  0.7097,  0.6329,  2.1388,  2.3107, -0.1020,  0.3629, -0.8643,
         3.5756, -1.8931, -1.7117, -0.0387, -6.0195,  4.5223,  1.7400, -0.0321,
         6.5479,  2.3122, -4.8427, -0.0226, -2.9813, -2.6027,  1.6286,  0.5121,
        -2.0562, -1.1523,  0.2615,  1.0280, -3.6881,  3.9377, -2.7528, -3.8638],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,123 - myNeural - INFO - Forward Pass: tensor([-3.4160,  1.9188,  0.6524,  ...,  4.4191, -0.6128,  1.4131])
2021-05-25 09:10:38,140 - myNeural - INFO - Forward Pass: tensor([ 3.1080,  4.1818,  3.0115, -3.5746,  2.5246,  2.3064, -1.0541,  0.1349,
        -3.9029,  1.8464,  2.2424, -0.8609, -1.0962,  3.1186, -3.3951,  2.7762,
         3.2246,  4.1555,  0.6901, -3.7178, -1.4431,  3.7632,  4.1934, -2.9813,
         4.4789, -1.8013, -1.3374, -2.5454, -0.4029,  1.3344,  2.5289, -2.0369,
         0.4428,  1.2178,  3.0031, -3.9802, -3.0585, -3.5597,  2.2012, -0.0962,
        -4.3173,  2.4025,  0.1328,  4.0256, -3.9318,  2.6097,  1.1053, -1.0586,
         1.9441, -1.9222, -0.3982,  2.7511,  1.7937, -1.2302, -4.2835,  0.9775,
         3.8057, -3.5215, -3.0983,  0.3567,  1.2910, -5.8957, -0.9243, -1.9182,
        -0.2897, -2.5255, -2.5135,  6.3902,  4.4907,  0.2147, -0.0628, -2.2743,
         0.7205,  3.2532, -0.4139,  0.0497, -2.7774, -3.1176,  6.1027, -1.0441,
         2.5842,  0.7228,  0.2953,  4.0841, -2.3447,  3.4026, -4.2309,  1.9556,
         4.3353, -1.6739,  0.0231,  3.4054,  4.1236,  1.6428, -2.1399,  1.6449,
         1.2953, -2.9212,  0.0976,  4.0354, -1.7059,  0.6126,  0.6274,  5.1907,
         3.2730,  4.6384,  0.3169, -0.5969,  2.3331, -0.4573,  2.0565, -1.2078,
         2.2786,  2.7292, -1.1972,  2.8123,  1.6238, -5.9623, -0.2060,  0.2629,
        -3.9067,  3.1435, -1.1716,  3.4667, -0.9571,  5.5994,  3.4275,  4.2542],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,158 - myNeural - INFO - Forward Pass: tensor([-3.8279,  1.6487,  0.1769,  ...,  4.1990, -0.8053,  1.0433])
2021-05-25 09:10:38,181 - myNeural - INFO - Forward Pass: tensor([ 1.7173,  0.2713, -2.7898, -2.6505, -0.2866,  1.3465, -1.8101, -4.0619,
        -4.9143, -1.8146, -3.7763,  3.0106,  2.5314,  2.4591, -1.8788,  0.5344,
         1.9650,  0.2518, -1.0971,  5.1810, -3.1940, -0.4919, -1.6814, -0.1667,
        -1.9054, -0.0435, -2.7507, -0.9029,  2.3062, -4.1122, -5.4979, -2.1793,
        -1.6044,  4.6334, -2.1249,  5.3448, -4.4951,  1.5087, -4.6147, -2.3506,
         0.8909, -0.0513, -2.2793,  0.3340, -2.9201, -1.1423,  1.3536, -1.1724,
         0.9771, -0.4325, -3.0305, -3.4860, -1.2148,  4.5212,  0.9269,  3.9349,
        -2.9772,  1.7773, -3.4822, -0.2762,  0.8248,  4.0726, -0.3480,  3.2420,
        -3.0150, -4.2209, -7.2283, -1.2456,  1.9263,  0.2620, -4.8607, -4.9366,
         0.0681,  1.7248, -0.9287, -3.0568,  1.7629, -1.8268, -3.9198, -3.6295,
        -0.9491, -0.2190,  1.3035,  2.5444, -2.8534,  1.6425, -0.2184,  4.4070,
        -1.2831, -1.8978, -0.2672,  2.0310, -4.1300,  3.0590,  0.4036, -3.5412,
        -0.0962,  0.4329,  0.8754, -3.6747,  2.8304,  4.1286, -2.4379, -4.0201,
         3.3919, -1.2965, -1.4111, -3.0109,  2.5686, -1.2953, -5.5659,  1.6450,
         0.8358,  1.6691, -2.1292,  2.8265, -0.9143,  1.3759,  4.7517,  7.1156,
         2.4402,  0.2281, -4.5864, -4.2815,  3.7479,  1.3707, -3.5701, -3.1461],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,201 - myNeural - INFO - Forward Pass: tensor([-4.4555,  1.4528, -0.3319,  ...,  3.7813, -1.1512,  0.3634])
2021-05-25 09:10:38,218 - myNeural - INFO - Forward Pass: tensor([ 2.6602e+00,  5.5595e-01, -2.6037e+00,  2.9062e+00,  2.0083e+00,
        -1.5439e+00,  1.6914e+00, -2.6812e+00, -2.7723e+00,  5.4565e-02,
         4.4053e+00, -2.6687e-01,  3.0040e+00, -4.5295e+00,  1.3994e+00,
        -2.8435e+00, -2.9859e-03,  3.4243e+00, -2.6625e+00, -2.3844e+00,
         2.7840e+00, -2.1473e+00,  2.0356e+00, -2.7364e+00,  5.8891e+00,
        -2.6777e+00,  2.6545e+00, -2.0667e+00,  1.2576e+00, -6.7622e-01,
         5.8952e-01,  2.0702e+00, -2.6686e+00,  1.2757e+00, -2.3382e+00,
         2.8297e+00, -6.8169e-01, -1.0145e+00, -3.2078e-01,  5.9232e-01,
        -2.7866e-01, -2.3328e+00, -1.4187e+00, -3.9207e+00, -4.4237e+00,
        -1.0733e-01,  3.0943e+00,  1.3354e-01, -3.0673e+00, -2.1040e+00,
        -3.9845e+00, -1.5034e+00, -2.1485e+00, -2.4790e+00, -4.9797e+00,
        -1.8853e+00, -4.1352e+00, -1.4640e+00, -5.7777e-01, -8.9339e-01,
         1.6263e+00,  6.1861e-01,  7.9624e-02, -1.5024e+00,  1.3102e+00,
         5.5872e-01, -6.3347e+00, -1.0483e+00,  3.4946e-01,  4.8694e+00,
         2.1350e+00,  3.3372e+00, -1.0139e+00, -2.3408e+00, -2.3332e+00,
        -9.8060e-02,  4.1539e+00, -2.6047e+00,  2.7269e+00,  1.7515e+00,
        -1.1611e+00, -5.9062e+00, -1.6346e+00, -5.4816e+00,  9.8358e-02,
        -2.3743e+00,  3.5139e-01, -6.9055e-01, -2.2591e+00,  2.9525e+00,
         2.8664e+00,  2.5236e+00, -1.8242e+00, -1.6279e+00,  1.2311e+00,
        -7.5269e-01,  3.0273e+00,  3.8618e+00,  1.9178e-01,  2.6990e-01,
         2.0026e+00,  3.9501e-03, -3.2331e+00, -5.8731e+00,  2.7364e+00,
         1.3062e+00,  1.6614e+00,  1.8962e+00,  4.7706e+00, -2.1018e+00,
        -1.6475e+00,  1.1114e+00, -2.2221e+00, -6.2487e-01, -3.5007e+00,
        -2.9720e+00, -3.4759e+00, -6.5972e-02,  2.6823e-01,  9.4876e-01,
         1.2164e+00, -2.8528e-01,  1.7077e+00, -1.9570e+00, -2.4337e+00,
        -1.3274e+00, -3.0678e+00, -2.4120e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,233 - myNeural - INFO - Forward Pass: tensor([-4.1220,  2.0405, -0.0161,  ...,  4.3588, -1.0332,  0.8073])
2021-05-25 09:10:38,252 - myNeural - INFO - Forward Pass: tensor([-4.0542,  0.3974, -3.2602, -1.1470, -0.0556, -1.9214,  3.1000, -1.4866,
        -0.2321, -3.5557,  0.1388, -0.7310, -0.1062,  4.3958,  1.4356, -3.6973,
        -2.4352, -0.7399,  0.7880,  1.8639, -0.6018, -3.6252,  1.3306,  0.3680,
        -0.0929,  3.6737,  3.0354, -1.8227,  0.6714, -0.7421,  4.1356, -3.4430,
        -0.3142, -3.3997,  2.0142, -1.8601, -4.9731,  3.8695, -1.3096,  2.4406,
         2.2413,  5.0331, -2.1231,  0.2932, -3.7480,  4.6414, -1.0060,  1.4094,
         5.0621,  2.8621,  3.5590, -3.4236, -0.9043, -1.7033,  3.3064,  1.1814,
        -0.3342, -1.3688,  1.3703, -1.7163,  2.8337, -3.8333, -1.5228,  3.3993,
         2.0720, -3.0494,  2.7490, -0.4109, -4.4364,  5.7974,  4.0280, -4.0541,
        -2.0803, -2.7395,  1.7666, -1.0955, -4.8496,  6.5362, -2.0750,  0.3436,
         3.8205,  4.9057,  1.3372, -3.0090,  0.2336,  0.4965,  1.4831,  1.4597,
         0.9246, -1.5821, -3.2923, -3.4081,  0.4384,  0.7535, -1.2755,  2.1622,
         2.7409, -0.8094, -1.9217, -0.5694, -1.8881,  0.8846,  4.1045,  3.6374,
         2.3091,  5.1225,  3.8726, -2.8100,  5.3218, -2.8120,  1.0756,  0.1675,
        -2.4141,  5.5790, -1.9797, -0.1771,  3.2526,  0.6880, -1.7039,  2.7317,
        -2.4576,  5.1054, -1.7955,  1.7336, -1.9498, -2.3219, -1.4627,  4.7460],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,270 - myNeural - INFO - Forward Pass: tensor([-4.4992,  1.7380, -0.3589,  ...,  4.0597, -1.4527,  0.3687])
2021-05-25 09:10:38,287 - myNeural - INFO - Forward Pass: tensor([-3.3985,  0.5869,  2.8339, -0.3669, -1.7671, -0.7799,  7.2020, -1.9419,
        -2.9338, -1.5466,  1.2528, -2.5251, -0.2185,  4.1147, -2.9792, -0.7478,
         5.1178, -2.2054, -0.2660,  0.7512,  4.0537,  2.0788,  0.1792, -3.5243,
        -6.9802, -0.9068, -1.8762,  2.6644,  4.7254, -0.5673,  2.8503,  3.7169,
         3.6967,  3.1190, -2.5432, -0.9271,  3.1436, -2.6746,  4.3902, -1.3192,
        -3.2982, -0.9187,  0.0317,  0.1517,  1.1309, -2.9890,  2.7332,  3.3727,
        -3.2004,  0.2150, -2.0591,  0.7695, -2.8645,  0.6162,  1.8943, -1.7337,
        -4.3829,  2.6327,  2.2523, -1.0371,  2.2454,  1.4856, -1.5773,  3.1772,
         0.0828,  2.9454,  2.0811,  0.1878, -0.4683, -1.0934,  1.1066, -3.9810,
        -5.3349, -4.3795, -3.7281, -3.3976, -3.0058,  3.3762,  0.6391,  1.2971,
         3.4919,  2.8964,  1.5452, -5.0931, -4.6916, -0.8784,  0.4476,  0.9540,
        -5.0494, -2.1999, -1.8343, -2.5937, -1.8015, -2.7654,  3.4224,  2.9597,
         5.9775,  0.6224, -2.8906, -0.7522,  0.6212, -0.1384,  0.8592,  0.9588,
         3.5903, -1.9348,  0.7452,  3.7883, -4.9891, -0.3550,  0.7850, -2.5668,
         1.1418,  2.8388, -1.3522, -0.1038,  2.2483, -3.4423,  1.3599, -0.1730,
         2.3159,  0.2959,  3.4994, -1.6328, -4.1159, -3.6196, -0.1601, -0.1511],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,302 - myNeural - INFO - Forward Pass: tensor([-4.0741,  2.1053,  0.0744,  ...,  4.5843, -1.1601,  0.8896])
2021-05-25 09:10:38,321 - myNeural - INFO - Forward Pass: tensor([-0.1684, -5.0395,  0.4655,  0.1856, -0.8877,  0.4638,  0.7648,  4.6816,
         2.6541, -2.1460,  0.9766,  3.5282, -0.7002, -1.0175, -0.4418,  3.0472,
         5.5617, -2.7545,  1.9621, -1.0780, -1.7374,  5.0068, -1.1957, -1.8269,
        -2.7798,  1.1871, -0.1218, -0.5503,  3.9873,  0.6232, -2.2398,  0.9844,
        -0.3451,  1.3392,  0.5455,  1.8962,  3.5949,  1.8756,  1.7727, -3.8904,
         1.1779,  1.3026, -0.9802, -1.4108,  4.2999,  3.1998,  4.1170,  4.5289,
        -5.2123, -0.9616, -3.9898, -0.9341,  0.2263, -3.0930, -6.7869,  4.2015,
         0.5518, -3.9427,  2.4459, -1.3593,  0.3152,  2.5007, -0.4894,  0.5942,
        -2.5835,  2.1940, -0.8573,  1.1112, -1.3620, -1.2719, -3.2328,  3.5394,
        -0.4262,  3.0086,  1.6549, -1.4098,  4.7350,  1.9721, -0.0256,  2.5887,
        -2.6145, -3.2103,  1.9109, -2.6368,  3.7319,  4.7155,  3.2136, -2.4809,
        -4.9378, -5.9076,  1.6716,  3.8646,  2.4622, -0.1409,  1.5313,  2.5316,
         2.4685,  4.3972,  5.7998,  0.7432, -1.9853,  2.2371,  2.3740, -2.4494,
         2.9755,  4.9288, -1.7416, -1.2774, -1.5196, -2.1670,  0.9033, -0.8224,
         1.6398, -6.0861, -0.4161, -4.3147,  2.6649, -0.1322,  5.3413,  1.4430,
         4.6031,  0.8535,  4.9435, -1.9586, -2.1906, -1.6593,  3.2646, -1.6383],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,338 - myNeural - INFO - Forward Pass: tensor([-4.0871,  1.6820, -0.2664,  ...,  3.8643, -1.3654,  0.8868])
2021-05-25 09:10:38,355 - myNeural - INFO - Forward Pass: tensor([-0.2267, -1.0842, -2.4720,  0.0596,  2.6637,  0.4061, -1.0405,  4.1113,
         0.4809,  5.3537, -3.8873, -2.4435,  2.3689, -5.6884,  2.4614,  4.8351,
        -2.8401,  3.4146, -4.6613, -0.5850, -3.5386, -2.4006, -2.2052, -1.8954,
        -2.9811, -3.5413, -1.5763, -2.5015,  2.9661, -4.7808, -0.6375,  4.1269,
         4.4419, -1.0370,  1.3226,  4.7238,  1.6646, -2.2371,  3.5509,  2.2825,
         0.4837, -3.6392, -1.4913,  3.1718,  3.0439, -2.0578,  1.1249,  4.6276,
         3.7087,  0.6557,  0.6797, -3.6085, -0.0934,  1.1737,  1.7256,  2.0565,
        -2.9264,  2.6793,  0.8193, -2.3150,  2.0489,  3.6143, -1.6056, -1.9727,
         2.2939, -2.3190,  0.3245,  0.5390,  2.8426,  3.5695, -1.6439, -0.4897,
         4.3648,  2.8875, -0.0869, -2.4749,  1.0739, -3.0745, -4.4332,  2.5520,
        -3.7990,  0.5288, -2.5665, -4.3605,  0.5641,  2.3404,  0.5237,  1.8124,
         1.6744, -0.9139,  0.9271,  0.6400,  1.2431,  0.3458,  2.2706, -0.9740,
         1.1242, -2.3630, -1.0834, -2.2733, -3.4398,  2.7589,  4.1473,  2.3426,
        -2.4349,  2.9652, -0.2539,  3.5250, -1.6024,  4.5205, -0.1709,  0.1864,
        -2.2142,  0.1940, -3.7349, -2.0569, -3.1407,  2.3936, -2.6178, -5.0499,
        -2.8817,  1.5759, -0.9306,  1.6219,  0.2274,  0.6399, -4.4404, -1.8874],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,371 - myNeural - INFO - Forward Pass: tensor([-4.3441,  1.5091, -0.1949,  ...,  3.8362, -1.3889,  0.9809])
2021-05-25 09:10:38,387 - myNeural - INFO - Forward Pass: tensor([ 0.3330, -1.9029,  0.4490, -0.0161,  1.5652,  1.4722, -0.5653, -0.8136,
         3.6597, -0.1827, -0.2046, -3.8502, -1.7159,  0.2870, -0.4270, -1.1696,
        -1.0120,  2.5690,  0.4418, -0.1297, -4.2893,  2.0482, -0.6021,  3.7486,
        -0.0323, -0.7557,  3.4481,  2.2197,  1.3667, -3.2079, -1.8702,  2.6184,
        -4.1457,  4.5513, -0.6335,  2.7303, -3.7703,  3.1719, -1.1741,  3.1533,
         2.4976,  5.6054,  1.8427, -2.7557, -0.8954,  3.9428,  1.0976,  2.5234,
        -3.3993, -2.8134, -0.6049,  1.4193,  2.3187,  3.3351,  1.6168,  3.5646,
         4.8369,  0.4871,  0.9085,  5.2742, -0.9627, -4.7725, -5.5227, -1.0808,
        -4.9888,  3.3230,  2.2701, -2.4724, -1.4297, -0.2028, -1.4915, -3.1839,
         3.7253, -3.4854,  5.0503, -4.7283, -1.3729,  3.2762,  6.6918, -2.1620,
        -0.7623, -4.6408,  1.2884,  2.7056, -2.3748, -2.2252, -1.2966, -3.8836,
        -2.6825, -2.1125, -0.8735, -4.6147,  5.5312, -3.9346, -2.2297, -3.6265,
        -1.2326, -0.3900,  2.1977, -2.0273, -1.1895,  2.3711, -4.0526, -1.2413,
         0.2192, -0.8152,  0.2372, -2.3422, -1.4834, -1.7201, -3.1847,  1.1049,
        -3.0436,  2.2763, -3.1221, -3.4967,  2.6323, -2.3939,  2.0446,  2.7887,
        -0.9243,  2.1677, -2.6480, -0.4357,  1.5127,  6.0731, -0.2996, -7.8507],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,404 - myNeural - INFO - Forward Pass: tensor([-4.1904,  1.7740, -0.0142,  ...,  3.9464, -1.0329,  1.1369])
2021-05-25 09:10:38,421 - myNeural - INFO - Forward Pass: tensor([-1.1199e+00, -2.6737e+00, -2.4533e-01, -2.7729e+00, -3.5808e+00,
         7.6669e-01,  5.9834e+00, -3.3920e+00, -3.1751e+00, -1.6210e+00,
        -3.8531e-01, -3.7399e-01,  2.5183e+00, -2.1606e+00, -5.4191e-03,
        -6.7430e-01, -2.1119e+00, -5.3319e-01,  4.5956e+00, -9.5042e-01,
         2.8923e+00, -3.0005e+00,  1.6796e+00,  1.2119e+00, -1.1925e+00,
        -6.1214e-02, -1.1636e+00,  2.1272e+00, -1.7578e+00, -3.6255e-01,
         2.1858e+00, -1.1143e+00,  4.2309e-01,  2.7153e-01,  4.8040e-02,
        -1.1845e+00,  4.2788e-01,  2.5380e+00,  2.1781e+00,  1.1731e+00,
        -1.4716e-01,  8.3231e-01, -6.3398e-01,  4.7253e+00, -2.7128e+00,
        -1.9729e+00,  2.2721e+00, -2.0613e-01,  6.5793e+00,  2.3396e+00,
         2.9620e+00,  6.2347e-01,  2.2898e+00,  5.0969e-01,  1.1343e-01,
        -1.7107e+00,  5.2323e+00,  3.3767e+00, -2.4911e+00,  2.2398e+00,
        -3.9654e+00, -1.2323e+00, -2.2970e+00,  1.4116e+00, -2.6272e+00,
        -4.1695e+00, -5.7492e-02,  1.4989e+00, -4.6360e+00, -1.7875e+00,
        -3.0208e-01,  2.5632e+00, -3.4360e+00, -1.2120e+00, -2.0277e+00,
        -6.8504e-01, -2.3209e+00, -4.1782e+00,  5.4443e-01,  1.1914e+00,
        -2.0694e+00,  2.7700e+00,  1.4078e+00,  2.9655e+00,  3.0248e+00,
        -1.0912e-02, -4.2021e+00, -1.7974e+00, -3.2488e+00, -9.0784e-01,
         4.4254e+00,  3.3892e+00, -3.0035e+00,  2.3965e+00,  4.0181e+00,
        -1.8271e+00,  2.6313e+00,  3.1406e+00, -3.4530e+00,  1.0734e+00,
         1.4358e+00,  2.1084e+00, -5.4185e+00,  3.4715e+00,  5.8728e+00,
        -3.0252e+00, -7.3581e-01, -3.6946e+00,  1.8048e+00, -5.9485e-01,
         3.9825e+00,  1.2839e+00,  5.4907e-01,  7.1897e-01,  4.7881e-01,
        -1.8557e+00, -8.4968e-02,  5.6652e+00,  2.7843e+00,  3.4786e+00,
         2.7750e+00, -9.0163e-01,  4.5849e-01, -1.1382e+00,  1.5567e+00,
        -2.1023e+00,  2.0036e+00, -3.4120e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,436 - myNeural - INFO - Forward Pass: tensor([-5.0548,  1.5390, -0.5345,  ...,  3.4907, -1.2516,  0.5321])
2021-05-25 09:10:38,452 - myNeural - INFO - Forward Pass: tensor([-0.5968,  1.1180, -0.1254, -4.4486,  0.5334,  4.6554,  6.0955, -2.9424,
        -2.3921, -0.7544,  2.8765, -2.7533,  0.8988,  2.7717, -2.5346, -2.4087,
         2.5460,  4.0373, -3.1006, -0.1548, -0.9800,  2.0743,  2.7759, -1.4029,
         3.2981, -5.4006, -0.7244,  4.4554,  4.2064,  0.5665, -3.2231,  1.9582,
        -3.9201,  3.4637,  2.7391,  0.0099, -1.3385, -0.8943, -3.3843, -2.2786,
         2.5254,  2.8321,  1.5727, -3.9979, -1.0268, -3.1342,  1.5248, -3.0172,
         2.4800,  1.4986,  3.8505, -0.5146,  2.5179,  0.2431,  3.5748,  4.6137,
        -1.4065,  1.4929, -0.5662, -3.6709, -3.6572,  0.8597,  4.7570,  0.5471,
        -2.0654,  1.4912,  0.8395, -2.6132,  1.5715, -3.8634,  3.5323, -2.4630,
        -4.6644, -1.9903, -2.2794, -0.4520, -1.0384, -0.7973, -0.6395,  3.0265,
        -0.2312, -1.6035,  3.2608, -2.8337, -0.3283,  1.7751,  2.0181, -3.2115,
         0.2419,  0.9925, -0.5133,  3.9224, -5.8035,  3.7158, -0.0634,  2.3233,
         0.7161, -2.9433,  0.3982, -2.5918, -0.7033,  0.4857, -3.6935,  2.0657,
         1.0334, -2.1668, -0.1352, -0.3270,  2.6799, -1.4896,  3.4146,  2.9366,
        -2.1330, -2.3096,  2.0432, -0.2445,  0.3493, -1.6739,  4.6683,  4.5954,
        -3.8207, -4.1297,  1.5380,  0.0129,  3.4745, -1.6123,  1.9155, -2.6058],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,466 - myNeural - INFO - Forward Pass: tensor([-4.2923,  2.3194, -0.0266,  ...,  4.0829, -0.3341,  1.0364])
2021-05-25 09:10:38,484 - myNeural - INFO - Forward Pass: tensor([ 2.1836, -1.9383, -3.4218,  3.2089, -2.3605, -3.4746,  2.9478,  2.2425,
         3.3908, -0.1974, -1.7861, -3.0235, -1.4566,  3.2246, -0.1329,  0.6660,
         2.5686, -0.9829,  0.4017,  2.6095, -1.7001, -1.0829,  4.1894, -1.2109,
         4.4743,  0.6807,  1.9530,  1.2903,  2.8566, -4.7781, -0.9028, -0.8002,
         0.0697,  2.4694, -1.3538,  0.8057, -0.7036,  0.8216, -0.1400,  3.1492,
         4.9154,  1.8753, -3.1567, -3.0725,  0.3300, -2.2803, -1.8629, -3.3970,
         0.2783,  0.4352,  2.3247,  3.4263,  1.3521,  2.7747,  0.5872,  0.3962,
        -0.1582, -3.4236, -5.1020,  1.8605,  0.8414,  3.9692, -0.6997, -1.0307,
        -1.3149,  3.9072, -2.3041,  3.5657,  3.5671,  3.4155,  0.1690, -2.5757,
        -3.4080, -1.5126, -1.1742,  3.8932,  2.6632,  5.3965,  0.5585, -3.0946,
         0.8600,  2.2002, -2.2284, -3.2320, -1.7257, -3.1465,  0.3833, -1.7872,
         0.5637,  2.1988, -1.7040,  0.3359,  5.7661,  1.3355,  1.8899,  1.4404,
         5.2402,  0.9506, -0.8360,  2.5202, -1.1137,  1.9047, -1.8813, -0.8076,
         1.6512, -1.6060, -1.5947,  0.4671,  0.1000,  2.1725,  2.6639,  5.0176,
         0.1300, -3.3132,  0.8606,  6.3722, -1.6950,  1.0863,  2.8698,  1.0847,
        -0.0153, -4.9374,  4.2077,  4.7704, -1.5506, -3.0904,  3.2709,  2.1863],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,500 - myNeural - INFO - Forward Pass: tensor([-4.5582,  1.9193, -0.4163,  ...,  3.5716, -0.8023,  0.5599])
2021-05-25 09:10:38,515 - myNeural - INFO - Forward Pass: tensor([-1.6901e+00, -4.0699e+00,  1.4751e+00,  3.8568e+00,  2.1137e+00,
        -1.9888e+00, -1.0635e+00,  1.8363e+00,  3.7908e+00,  1.0431e+00,
         3.7114e+00, -1.4795e+00, -3.6291e+00, -4.1893e-02,  3.4118e+00,
         2.3301e+00,  3.6575e+00,  4.8027e+00,  1.7746e+00,  1.5014e+00,
        -2.5792e+00, -3.4301e+00,  4.5075e+00, -1.6532e+00, -7.4931e-01,
        -1.2981e+00, -2.5594e+00, -3.3797e+00, -9.2759e-01,  2.2118e+00,
         2.8939e+00,  2.4257e+00, -3.5131e+00,  6.4711e-01, -3.1428e+00,
        -1.2255e+00,  2.8430e-03,  4.2070e+00,  9.0338e-01,  4.2772e+00,
        -5.1811e-01,  1.2791e+00, -1.5819e+00, -1.5499e+00,  3.6721e-02,
        -4.0799e-01,  2.9435e+00, -1.1601e+00, -4.0933e+00, -1.9627e+00,
        -2.0249e+00,  1.4824e+00,  8.7191e-01, -2.9293e+00, -1.7829e+00,
        -1.0370e+00, -1.6309e+00, -4.0686e+00, -4.3402e+00,  4.4667e-01,
         1.6193e+00, -1.4707e+00, -9.9284e-01,  1.6589e+00, -2.0532e+00,
         1.1256e+00, -2.9635e+00,  2.0767e+00,  5.7805e+00,  1.7864e+00,
         1.2156e+00,  2.4739e+00, -4.1942e-01,  1.2378e+00, -6.5824e-01,
        -1.1951e+00, -2.2071e+00, -8.2167e-01,  3.2266e+00,  2.9707e+00,
        -4.0689e+00, -3.1760e+00,  3.2588e-01,  2.6824e+00,  2.0314e+00,
         1.9955e+00,  3.5143e+00,  1.1881e+00,  1.1245e+00,  1.5768e+00,
        -2.1486e+00, -1.0048e+00, -2.7816e+00, -5.7749e+00,  7.9403e-01,
        -1.2198e-01,  1.6622e+00, -4.6461e-01, -1.9229e+00,  1.7210e+00,
         3.0083e+00, -2.3265e+00,  4.7293e-01,  6.8888e-01, -8.0013e-01,
         2.1087e+00,  1.6313e+00, -3.4023e+00, -3.1930e-01, -1.2335e+00,
         1.0143e+00, -3.2293e+00, -1.2849e+00, -1.0015e+00, -1.3853e+00,
         2.4792e+00, -7.1354e-01,  3.0854e+00,  1.5249e-01,  2.0307e+00,
        -3.1622e+00,  2.3996e-02, -5.1345e+00,  2.1424e+00, -9.9144e-01,
        -1.6148e+00,  3.3134e+00, -6.9180e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,531 - myNeural - INFO - Forward Pass: tensor([-4.7622,  1.6462, -0.7018,  ...,  3.0050, -0.9243,  0.1291])
2021-05-25 09:10:38,547 - myNeural - INFO - Forward Pass: tensor([-0.9251, -3.3865, -2.2800, -0.0512, -1.4280, -4.8656, -2.0502,  0.6930,
         2.4610, -3.3559,  0.1701,  1.4236, -1.0464, -1.2320,  1.7394, -1.0482,
         1.6952,  1.7909, -4.1443, -4.5800, -5.0275,  1.2252,  2.1128, -0.8175,
         1.0480,  0.0274, -0.9836, -5.6023, -1.6576, -4.0601,  0.3824, -2.0477,
        -3.4037, -2.2854,  2.8481, -2.8193, -1.6372, -0.0634, -2.3999, -2.6343,
        -1.5208, -5.6489,  4.0475, -1.4783, -3.3205, -3.9965, -4.3379, -1.2853,
         0.3235,  1.1080, -2.0541, -3.6612, -1.7383, -0.3940,  0.8017,  3.8305,
        -0.3868, -4.2132, -1.1509,  1.1603, -0.5269, -3.4715,  2.9662, -2.8051,
        -3.4229, -2.2829,  0.8376, -5.3427, -0.1061, -1.5174,  3.5952,  0.3043,
        -4.7064, -3.8012,  1.7784, -1.3614, -1.1643, -3.7754, -2.1828,  1.5578,
         2.7720,  2.2541, -1.1427, -3.5550,  2.3597, -1.3492, -4.8302,  0.1167,
         2.4653, -1.8484,  1.0515,  1.0097,  0.0577, -2.8240, -1.4155,  3.9403,
         0.9900, -3.4205,  0.2511, -2.5269, -3.6291, -0.9077, -1.4361, -1.1197,
        -3.9934, -4.0147,  0.0572, -1.3530,  3.9788, -2.0208,  1.4327,  1.9051,
         0.7827, -4.0698, -0.8206, -3.7534,  1.1343,  1.6492,  2.2564,  2.9863,
        -3.6339,  1.6837,  2.5393,  1.7152, -2.2607, -1.8034, -0.3893,  3.1681],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,561 - myNeural - INFO - Forward Pass: tensor([-3.8619,  2.3706,  0.1439,  ...,  3.6688, -0.0287,  1.0252])
2021-05-25 09:10:38,575 - myNeural - INFO - Forward Pass: tensor([-1.8781,  1.8074,  0.1209, -0.9790,  1.4914, -0.7973, -2.3982,  2.9502,
        -1.1987,  2.1700,  2.3349,  3.8239,  1.2930,  4.1590,  3.0562,  0.9341,
        -0.5933,  2.6064, -0.5429, -1.0629, -3.2548, -2.4509, -1.0437,  4.7705,
         2.6158,  4.6827, -2.4188, -1.8424,  2.8938, -2.3615,  0.1206,  3.0550,
        -1.5592, -1.9069,  3.4718,  4.0883,  2.1678, -1.7529, -1.9478, -1.4626,
         0.6876,  4.9319, -1.2028, -2.0138, -3.0382,  2.8543,  2.6539, -3.5968,
        -1.1607, -3.2170,  1.0891, -0.1572,  1.2915, -0.9944,  2.4748, -3.6305,
         0.3895, -1.0025, -1.9896, -1.1221, -3.0407,  1.4697, -2.4541,  2.8334,
        -3.8748,  4.9739, -4.8297,  6.7405,  0.0232, -1.4255, -4.0719, -3.8676,
         0.8556, -3.7378,  1.6735,  1.7088,  3.6017, -2.4139, -0.4802, -2.5405,
        -0.4464, -3.6846,  0.4866,  2.3969,  4.6546, -1.1470,  2.1846,  2.8781,
        -0.1220, -1.8688, -4.7748, -0.8643,  1.9091,  2.1577, -5.3407,  3.5974,
         0.4457,  3.8497,  0.3942, -2.6310, -3.1606,  3.7548, -1.0524, -0.0340,
        -0.8891,  1.4434, -4.2028, -0.9841, -0.7523, -0.2191,  3.3039,  2.3517,
        -2.8659,  2.2097,  3.9045, -1.0370,  2.3134,  0.5292, -1.5329, -1.9242,
         2.2892,  0.1246,  1.4692, -1.2730,  2.2680,  4.0172, -0.7040, -2.5899],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,590 - myNeural - INFO - Forward Pass: tensor([-3.7815,  2.0001,  0.2559,  ...,  3.6981, -0.0251,  1.1013])
2021-05-25 09:10:38,605 - myNeural - INFO - Forward Pass: tensor([ 3.3276, -3.9411,  0.1021,  3.9531, -2.3923,  1.9459,  2.5340,  0.2017,
        -2.7522,  0.2380, -0.6913, -2.0172, -1.5947,  2.4307, -1.6968,  1.8569,
        -3.1627, -0.7516, -0.4977,  1.5607,  3.0527,  3.0309,  0.4369, -0.1165,
        -1.6880, -2.1735, -0.6154,  3.5837,  1.7913, -0.1104, -2.2253, -0.5927,
         5.4854, -0.8053, -1.0168, -0.2974,  0.9931,  2.1870, -3.4784, -0.7785,
         1.1871, -0.6537,  3.9066,  3.3197, -2.3910,  1.6366,  0.9756, -0.7767,
         3.5325, -0.2125, -4.3306,  0.0481, -2.8064,  1.7330,  2.6943, -0.7395,
        -0.3302, -0.5720, -1.8253, -2.2249,  0.1498,  1.0606, -5.4354,  1.3093,
         0.1106,  0.3685,  1.4173,  0.3147, -1.9298, -5.2018,  0.4102, -0.2925,
        -3.0344, -0.9865, -3.8607,  0.4766,  0.9699,  2.3280, -1.2893,  3.2014,
        -2.7940, -4.5404, -2.1259,  1.7718, -0.6586, -1.8518, -1.3479,  4.6344,
        -0.0265,  0.1546,  0.2159, -0.9605, -0.7239,  1.3851, -0.9232,  1.3398,
         3.7046,  2.9994,  3.5959, -3.7707,  2.4106,  3.6116, -1.2062, -0.9485,
         1.5835,  1.7865,  0.2492, -5.5381,  0.9556,  0.3977,  2.7769, -0.3425,
        -4.0822, -4.4550,  0.1338,  1.5784, -1.5859, -2.3532,  0.8967, -2.5532,
         4.7985,  1.0815,  0.3751,  1.4936, -3.4261,  0.5600, -3.5341,  3.3466],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,621 - myNeural - INFO - Forward Pass: tensor([-4.3172,  1.3011, -0.5523,  ...,  3.2187, -0.8083,  0.5471])
2021-05-25 09:10:38,636 - myNeural - INFO - Batch 60 -- TrainLoss: 0.41667 -- TrainAcc: 82.81250% -- TestAcc: 81.80000%
2021-05-25 09:10:38,640 - myNeural - INFO - Forward Pass: tensor([-3.4249e+00, -5.4069e+00,  3.6039e-01, -2.5144e+00, -3.2617e+00,
         2.7042e+00,  3.4806e-01,  4.1360e+00,  1.0137e+00,  5.6059e+00,
        -4.4328e-01, -1.6307e+00,  2.9525e+00,  3.5722e-01, -6.9898e-01,
        -2.2778e+00,  1.0106e+00, -4.8859e-03, -1.7179e+00,  1.4528e+00,
         1.3785e+00,  2.6565e+00, -6.0428e+00, -1.1010e+00,  3.1768e+00,
        -3.3174e+00, -1.8528e+00, -6.6619e-02, -1.8804e+00, -9.3821e-01,
        -1.6238e+00,  7.2448e-01, -2.9158e+00, -2.1036e+00, -2.7294e+00,
         4.6818e+00,  2.9344e-01, -4.1175e+00, -2.6628e+00, -2.5485e-01,
         2.5068e+00, -2.4034e+00, -1.3413e+00, -1.6323e+00,  2.8701e-01,
        -2.3100e+00, -4.4436e+00, -1.0978e+00,  2.4848e+00,  6.9866e-01,
         3.6500e+00,  4.3382e+00,  2.8446e+00,  2.5739e+00, -4.5494e+00,
        -4.5479e-01, -2.8801e+00, -3.9486e+00, -3.4572e+00, -3.0126e+00,
        -2.9774e+00, -3.0972e-01,  4.2858e+00, -3.1809e+00,  8.9760e-02,
        -3.5214e+00,  1.4647e-01, -3.4982e+00, -3.4141e+00,  2.9535e+00,
        -3.0480e+00,  2.1108e+00, -2.9082e+00,  3.4632e+00, -9.6306e-01,
        -1.5176e+00,  4.4555e+00, -2.4570e+00, -2.6065e+00, -1.2223e+00,
         3.7364e+00, -3.2043e+00, -4.2867e-01, -8.5019e-01, -4.5910e+00,
        -1.9996e+00,  1.1387e+00, -3.3026e-01,  3.6524e+00, -1.6855e+00,
        -2.5523e+00,  2.9241e+00,  1.6866e+00,  3.6191e+00, -1.1687e+00,
         1.7769e+00,  2.2686e+00, -2.2595e+00,  3.1089e+00, -2.5241e+00,
         2.6269e+00,  1.0762e+00,  4.2571e+00,  9.0715e-01, -3.6334e+00,
        -4.9906e+00, -2.9989e+00,  2.7488e+00,  6.3904e-01,  3.1811e+00,
         1.3516e+00,  2.8276e+00,  1.8177e+00,  1.4497e+00, -3.4977e+00,
         1.6386e-01,  1.2552e+00, -5.3881e+00, -2.3869e+00, -5.0629e-01,
         4.6183e+00,  2.1576e+00,  7.3137e-01,  1.9631e+00, -4.2817e+00,
         3.4578e+00, -4.9612e+00, -2.3169e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,657 - myNeural - INFO - Forward Pass: tensor([-3.7564,  1.6161, -0.1680,  ...,  3.7506, -0.3202,  1.1245])
2021-05-25 09:10:38,675 - myNeural - INFO - Forward Pass: tensor([-1.4623,  3.6115,  5.6831,  3.9189,  2.4645,  3.5406,  0.7059, -0.9328,
        -2.8861, -3.3668,  2.3446,  3.2771, -5.7298,  1.2372,  1.3743,  2.6626,
         0.3343,  3.1369,  0.2051, -1.8843, -2.2425, -4.2173, -3.6739,  0.9591,
         3.8644, -1.4701, -1.1946, -2.1779,  0.0122,  3.9278,  5.5492, -2.5419,
         6.2058,  4.4030,  2.6899,  0.4669,  3.0429,  1.9263, -3.6086,  2.3930,
        -0.3669,  2.4746,  3.1569,  2.0518, -2.0864,  3.4554,  3.0131, -3.1344,
        -2.4367, -3.7949, -2.3830, -3.2630, -5.6888,  3.4133,  5.1026,  0.0590,
        -3.9360,  0.6516, -2.5369,  0.9867, -4.0694,  6.0851,  0.0789,  2.0740,
        -2.4304,  5.9544,  6.3361,  0.9773,  2.3789, -1.3150,  4.1022,  4.3609,
        -6.1888, -2.7888, -0.2016, -1.7984,  5.1075,  2.2854, -0.7522,  1.0424,
         0.8292, -3.5795, -0.3203,  2.2058, -2.8836, -2.3233, -4.5415, -2.1791,
         3.3824,  0.7651, -2.5615, -2.2003, -0.2017, -0.0784,  0.4509, -0.9220,
        -1.7547, -2.3715,  0.3493, -2.7380, -2.7041, -2.7805,  6.8585,  5.2315,
         3.8035,  0.5143,  1.7419,  3.2149, -1.4828, -3.1044,  1.1776,  1.2292,
        -3.2243,  2.2527,  3.5777,  1.2921, -1.5201, -1.9421, -1.7842,  3.8821,
         2.5035, -0.7922,  1.9154,  1.4542, -4.7277, -1.6034,  2.4082,  0.5322],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,692 - myNeural - INFO - Forward Pass: tensor([-4.0664,  1.4615, -0.2146,  ...,  3.5641, -0.6295,  1.0569])
2021-05-25 09:10:38,710 - myNeural - INFO - Forward Pass: tensor([-4.5775e-01,  5.1730e+00, -2.2636e+00,  2.4303e+00, -2.4881e+00,
         2.9001e+00,  2.5789e+00, -1.6168e+00,  2.3041e+00, -1.5053e+00,
        -2.0297e-01, -4.3214e+00,  2.1156e+00,  2.7768e+00, -4.6205e+00,
         3.1968e+00, -1.4306e+00,  4.3061e-01,  1.0675e+00,  7.7316e-01,
        -4.5758e+00,  2.8624e+00, -3.0994e-01, -1.5176e+00,  3.0194e+00,
        -2.6490e+00,  8.0926e-01, -1.3751e-02, -6.9546e-01, -2.2644e+00,
        -6.1199e-01, -1.7413e+00, -2.3209e+00,  6.1749e-01,  2.0346e+00,
         2.0062e+00, -1.1534e+00, -5.0671e-02,  5.0937e+00,  1.3670e+00,
        -3.5252e+00, -3.5341e-02, -2.5028e+00,  5.9155e+00,  3.3546e-02,
        -3.8599e-01, -2.0053e+00,  4.6539e+00,  3.1590e+00, -3.0422e+00,
        -3.1109e+00, -1.3118e+00,  3.4700e+00, -2.3575e+00, -2.6698e+00,
         7.1023e-02, -2.1944e+00, -3.0786e+00, -1.1880e+00, -2.4900e-01,
         2.0295e+00, -1.1900e+00, -4.0873e+00,  2.3229e-01, -7.2070e-01,
         1.0274e+00, -1.4147e+00, -1.1927e+00, -5.1262e-03,  1.8529e+00,
         2.2090e-01,  1.1756e+00,  9.5958e-01, -1.1897e+00, -3.1525e+00,
        -4.0307e+00, -1.1013e-01,  1.4657e+00, -2.7860e+00,  6.7496e-01,
         2.6060e+00, -4.5549e+00,  1.3764e+00, -1.8339e+00, -8.9643e-01,
        -9.9258e-01, -3.9415e-01,  5.3281e-01,  2.5793e+00, -3.1014e+00,
         2.6463e+00, -4.8839e+00, -1.3111e-01,  6.1421e-01, -2.1544e+00,
         1.1016e+00, -3.4545e+00,  2.3948e+00,  2.4570e+00,  1.6670e+00,
         8.2091e-01, -2.4115e+00, -2.5833e+00, -2.9788e+00,  1.4477e+00,
         4.4927e+00, -3.8144e-01, -7.3288e-01,  4.4756e+00,  2.0351e+00,
         3.5175e+00,  7.7132e-02, -1.8116e+00,  3.5885e+00,  4.3423e+00,
         1.9253e-01, -1.2226e+00,  6.0549e-01,  3.6525e+00, -3.3974e-01,
        -7.1364e+00, -5.2041e-01, -9.5335e-01, -3.5229e+00,  7.2683e-01,
         2.1438e+00, -2.1295e+00,  3.4411e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,727 - myNeural - INFO - Forward Pass: tensor([-3.9938,  1.4753, -0.2818,  ...,  3.3636, -0.8629,  1.0837])
2021-05-25 09:10:38,746 - myNeural - INFO - Forward Pass: tensor([-1.6822e+00, -3.3537e+00,  4.8445e-01, -6.3426e-01,  3.4879e+00,
         1.2848e+00,  5.2502e-01, -1.9023e+00, -4.3065e+00, -4.6679e+00,
        -2.7536e+00,  6.0643e-03, -7.8769e-01, -2.2295e+00, -6.5832e-01,
        -2.4457e-01, -4.5445e+00, -4.5816e-01,  5.0453e+00, -1.2627e+00,
         3.2996e+00, -4.2283e+00,  1.5216e+00,  2.4360e-01,  2.7495e-01,
         2.4475e+00,  2.6756e+00, -2.7691e-01,  1.0905e+00,  4.6055e+00,
         1.4101e+00,  1.7737e-01,  3.3717e+00, -2.1045e+00, -2.2031e+00,
        -3.5607e+00,  7.5273e-01, -3.2346e+00, -3.0353e+00,  3.4462e-01,
         8.6882e-01, -1.6359e+00, -3.5088e+00,  6.0075e-01, -3.0355e-01,
         1.6446e+00, -2.3088e+00, -1.6153e+00, -1.9681e+00,  1.0166e+00,
         2.2078e+00, -6.1465e-01, -1.3205e-01,  4.8307e+00, -2.3433e+00,
        -4.3019e-01,  2.9231e+00,  4.0701e-01,  1.8351e+00, -1.9966e+00,
         1.3969e+00, -4.4054e+00, -3.7823e-01,  6.0131e-01,  3.4813e+00,
        -1.6446e+00,  1.7903e+00,  1.4607e+00, -4.1712e+00,  8.9260e-02,
        -4.1053e+00,  2.5060e+00,  1.1100e-01,  1.8671e+00, -3.8557e+00,
        -1.0458e-01,  3.5535e+00,  1.8900e-01, -1.6564e+00,  1.8597e+00,
         8.6221e-01, -2.0264e+00, -1.9711e+00, -9.5890e-01, -4.2204e+00,
        -2.0049e+00, -7.0533e-01, -3.2451e+00, -6.0906e+00, -1.4558e+00,
         2.8793e+00,  1.5263e+00, -6.8225e-01, -1.1099e+00,  1.4561e+00,
         1.6659e+00,  2.8657e+00, -1.2999e+00, -5.5102e-01, -2.2591e+00,
        -2.9968e-01, -3.1246e-01,  4.0271e+00, -5.0134e+00, -1.3836e+00,
        -8.6361e-01, -3.1889e+00,  1.6608e-01, -2.7774e-01,  2.6431e-01,
         5.0264e+00, -5.2873e-01,  4.4787e-01,  3.5738e+00, -2.5658e+00,
         3.8729e+00,  5.7146e-02, -1.3432e+00,  3.2742e+00,  3.0015e+00,
        -3.9093e-01, -1.8334e+00, -3.2562e-02, -3.1931e+00, -5.1689e+00,
         3.0758e+00,  2.4652e+00, -1.9988e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,763 - myNeural - INFO - Forward Pass: tensor([-4.1851,  1.4625, -0.3031,  ...,  3.5533, -1.0976,  1.0145])
2021-05-25 09:10:38,779 - myNeural - INFO - Forward Pass: tensor([ 2.6531e+00, -1.0971e+00,  1.2531e+00,  5.9448e+00,  1.0017e+00,
         5.6985e-01, -2.8468e+00,  2.0538e+00, -1.1765e+00,  2.3839e+00,
         7.0508e-01, -2.2495e+00, -1.8938e+00, -1.7542e-03, -2.2404e+00,
        -3.9210e+00,  3.4849e+00,  2.9131e+00,  1.2387e+00, -8.0313e-01,
         4.3231e+00, -4.2945e+00, -2.8851e+00,  3.4094e+00, -3.1898e-01,
         3.3451e+00, -2.2132e+00,  2.9543e-02,  2.3411e+00,  2.0547e+00,
         2.7076e+00,  1.5353e+00,  9.3838e-01, -1.0553e+00, -1.4784e+00,
         2.2416e+00, -3.3071e+00,  3.9868e+00,  3.0432e+00, -3.0603e+00,
         8.6119e-02, -4.2693e+00,  1.9373e+00, -4.1960e+00, -2.4039e+00,
         2.4974e+00, -4.3171e+00,  4.0922e-02, -2.3276e+00, -9.0756e-01,
         1.4208e-01, -9.3811e-01,  1.5973e+00, -7.4660e-01, -3.2985e+00,
        -2.0451e+00, -2.7461e+00, -1.5222e+00, -4.3118e-01, -3.2398e+00,
         8.8861e-02,  5.0726e+00, -2.7516e+00,  3.9296e-01, -8.5199e-01,
        -5.7527e-01,  3.7713e+00,  1.4883e+00, -1.3145e+00, -3.5987e+00,
         4.0819e+00, -9.0404e-01,  4.6158e+00,  2.3800e+00,  2.8930e+00,
         7.0268e-01,  9.9889e-01, -8.2495e-01, -2.9296e+00, -1.7309e+00,
        -7.6796e-01,  1.8888e+00, -2.7695e+00,  2.3531e-01,  3.4829e+00,
         3.8146e+00,  4.8676e-01, -2.9518e+00, -2.1892e+00,  1.1420e+00,
        -3.1963e+00,  1.3706e+00,  5.8542e-01, -1.6772e+00, -6.6264e-01,
        -2.4397e+00,  1.8573e+00, -8.1926e-01, -1.4633e+00,  1.8850e+00,
        -4.7143e+00, -3.1622e+00,  1.9490e+00,  4.1624e+00,  1.3811e+00,
         1.6303e+00, -2.1896e+00,  1.1211e+00,  1.5446e+00,  1.2880e+00,
         4.3207e-01,  1.0626e+00, -2.2756e+00,  3.7375e+00, -6.7587e-02,
         1.2343e+00,  2.4533e+00,  2.1457e+00, -1.0624e+00,  4.1724e+00,
        -4.8473e+00,  1.4127e+00, -4.1617e+00, -8.2328e-01, -6.5351e-01,
        -2.1023e+00, -1.1217e+00,  3.3973e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,794 - myNeural - INFO - Forward Pass: tensor([-3.6539,  1.8015, -0.0044,  ...,  3.4268, -0.6509,  1.3575])
2021-05-25 09:10:38,810 - myNeural - INFO - Forward Pass: tensor([ 3.0198, -2.1126,  0.7176,  2.2646,  1.6331,  1.3917,  2.1928, -0.5801,
        -0.9792, -3.1720,  2.2554, -2.1899, -0.4304,  0.1886,  0.5787, -1.0023,
        -2.2944, -2.3555, -0.9664, -3.3823, -0.5503, -2.4327,  4.0482,  0.1576,
         2.3075,  1.2233,  2.3361,  3.3479, -4.3076, -1.1912, -1.1937, -3.5655,
        -1.3477,  0.1385,  0.2389,  2.3592,  2.5925, -0.5453, -5.0478,  3.5191,
         0.8698, -1.1425,  1.0861,  1.4528,  4.0754,  1.8594,  2.6565,  0.0426,
         2.9664, -0.5561,  1.1236,  1.2043, -3.3107,  0.3365,  0.8961, -2.4120,
        -5.4270,  1.1158, -0.3282,  3.1313, -3.1682, -4.6481,  2.6445, -3.0921,
        -1.9530, -1.1741,  5.1308, -0.5435,  3.5888, -3.0374,  1.8290,  2.1114,
         0.9002, -0.7891,  1.6275,  3.1257, -1.8419,  1.4912,  1.7408,  0.2865,
        -6.4675, -2.1712,  0.7437, -0.2402, -0.0227, -2.5775,  0.3096, -1.9149,
         0.2077, -0.1326,  0.0379,  2.8460,  1.8802, -2.7321, -2.0964, -0.2829,
         1.8932, -0.0468,  0.5447, -1.0172, -4.2341, -0.7737, -0.5361,  4.4574,
         1.0943,  2.8991,  5.0990,  2.9572,  5.2012,  0.2508,  3.4621, -0.6617,
        -0.4300,  3.5949, -3.6092, -0.1363,  1.5394,  2.6138, -4.2480, -2.2857,
        -0.1528, -4.5415,  2.5463,  1.4979,  1.0729, -0.9397,  1.6360, -0.6237],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,828 - myNeural - INFO - Forward Pass: tensor([-3.4756,  1.8008,  0.3029,  ...,  3.5414, -0.3833,  1.7136])
2021-05-25 09:10:38,847 - myNeural - INFO - Forward Pass: tensor([ 1.0064, -0.9882, -1.8269,  3.7981, -0.5140, -0.0689,  0.7214, -1.5363,
        -0.5604,  2.0269, -1.8128,  1.8754,  2.5612,  5.5578, -2.4251,  0.6804,
        -1.5035, -0.1589,  0.9624,  3.1135, -3.0799,  2.6778, -1.4159,  2.4220,
        -3.4031,  0.3696,  4.0056,  1.8094, -0.7873, -5.4715, -0.5835,  2.1239,
         1.7507, -0.5105, -4.6755, -0.9950,  3.0906,  2.1068, -3.9261, -2.3418,
         3.8044, -3.4555, -3.1252,  0.6819,  1.0707, -0.1973, -0.9284,  3.3870,
        -4.2318,  3.3960,  1.4632, -4.5624, -2.0811,  2.0014, -4.1917,  0.6420,
        -3.1370,  1.1076,  4.6514, -4.8300, -0.0930, -0.4508,  0.8104,  3.9270,
         4.1232,  2.5517, -3.3116, -3.5603, -3.6065,  2.8743, -0.3100, -0.5550,
         0.7614, -0.2783, -1.1454,  0.4423,  1.5792,  0.5305, -1.1586, -4.3218,
        -0.0865, -2.3527, -2.1914,  4.3024,  1.2991,  3.0550,  3.5150, -5.0828,
        -3.0015,  0.6701, -2.0373,  4.8060,  4.8503,  1.6397, -0.7351,  1.5536,
        -1.0339, -3.5392, -1.9935,  2.8052, -0.9630, -2.9486, -4.5334, -0.5509,
         1.8370, -1.1710, -5.5845,  3.4524,  3.0415,  0.7767,  0.8089, -0.3373,
         2.6074,  2.4129, -2.3146,  0.9903,  2.2124,  3.9257, -1.0235, -2.2094,
        -0.2139,  0.6637, -1.2965,  3.0927, -2.0107, -1.1662,  2.2820, -3.6264],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,863 - myNeural - INFO - Forward Pass: tensor([-3.8642,  1.4295, -0.0523,  ...,  3.3058, -0.6133,  1.3532])
2021-05-25 09:10:38,879 - myNeural - INFO - Forward Pass: tensor([-0.1981, -0.5904, -1.9262,  0.8246, -4.2679,  2.3883,  1.3626,  0.9889,
        -1.0841,  0.9880,  6.9150,  3.5317, -0.1219,  4.1052, -4.8791,  5.5577,
        -1.3836,  1.4042, -2.0636, -2.3683, -2.7165,  6.0524, -2.0672,  0.9462,
        -4.1188, -0.9320, -1.3021, -4.5546,  0.0082, -1.3319,  0.8887, -4.7244,
         3.2118,  4.5099,  2.9222, -2.2853, -2.5260,  0.8950, -4.0842, -2.3478,
        -3.2168, -3.2920, -3.9933, -2.6458, -1.7902, -2.7464, -3.2385,  1.0226,
         2.9483,  0.8611,  1.2871, -4.6855, -4.3495,  2.9138,  0.1822,  2.2434,
        -0.7264,  6.3606, -5.3517,  1.1707, -3.1480,  4.8822, -0.9268, -2.3320,
        -0.0505, -2.1673,  2.1120,  2.9863,  2.7598, -3.1437,  0.0885, -2.5542,
        -5.7451, -3.8761, -3.8369, -0.4842,  3.2868,  2.1479,  4.5843, -0.9175,
         0.5821,  0.5743, -3.6252, -2.0791, -2.2279, -2.5170,  0.8996, -5.5144,
         2.7236, -1.3106,  2.9139,  0.9748, -2.9219,  4.2171, -3.1169,  0.1452,
        -1.4458,  0.1262,  0.6175, -1.1891, -2.0376,  2.0803,  1.1380, -1.4232,
        -0.7044,  1.2207,  2.0201, -5.4411,  0.8964,  3.2120, -1.1417,  2.1955,
        -1.7941,  1.2493,  1.5773, -2.5822, -0.2187,  1.5144,  0.0767,  3.9647,
        -4.1293,  4.1549, -0.7216, -0.8984,  3.7403,  1.1424,  3.1335, -2.6201],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,894 - myNeural - INFO - Forward Pass: tensor([-3.6672,  1.6258,  0.1178,  ...,  3.6898, -0.2202,  1.5684])
2021-05-25 09:10:38,912 - myNeural - INFO - Forward Pass: tensor([-5.3139,  0.0149, -0.1245, -2.9030,  3.3217,  2.8975, -4.8235, -1.3680,
         2.7279, -3.7514,  0.6312,  0.4112, -1.3983, -0.4664,  0.4744, -3.2710,
         0.3484,  0.2409, -0.5806, -0.1363,  1.5209,  1.3979,  0.7321,  3.1177,
        -0.8805,  0.9441,  0.1531, -3.0659, -1.2238, -1.0640, -2.3669,  5.5648,
         1.5353, -1.4907, -2.0633, -0.1068,  7.8225,  1.0637,  2.5181,  0.4492,
         2.1179, -1.3996,  1.5276,  4.0991, -1.1441,  3.8591,  2.4573, -4.4525,
        -1.1230, -2.7016,  4.3814,  2.3974,  3.1018, -2.5370,  1.0445, -0.6204,
         4.2182,  2.1872, -0.6301, -0.5504,  3.6661,  1.9461, -2.0872,  0.8661,
        -3.5713,  3.0333,  2.6098, -1.0349,  2.6540,  3.4517, -3.6420, -1.8682,
         3.5855, -5.3598, -1.2227, -1.3976, -3.1219,  2.2841, -2.8556, -2.3002,
        -2.5292,  1.1250,  1.2603, -0.6799,  2.7218, -0.9252, -0.0236,  1.7056,
         0.9643,  3.0809,  2.7745,  4.1590,  3.5966,  3.1120, -4.0709, -0.9852,
         0.3004,  2.6453,  2.7562, -2.4239, -3.2839,  3.5499, -2.4377, -0.3368,
         1.8461,  4.3030,  3.0928, -1.7716,  2.6698,  2.5384, -1.1340, -0.0732,
         1.2427, -4.0420,  1.2894,  0.8852, -5.2429,  3.2145,  2.6070, -1.0437,
        -2.4360,  1.7518, -4.7678, -0.2013, -2.7186, -2.3299,  0.3762,  3.3936],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,928 - myNeural - INFO - Forward Pass: tensor([-3.7997,  1.5028,  0.3466,  ...,  3.6116, -0.2462,  1.5176])
2021-05-25 09:10:38,945 - myNeural - INFO - Forward Pass: tensor([-1.6463e+00,  4.7858e+00, -2.7303e+00, -4.9036e+00,  2.2840e+00,
         2.5880e+00,  3.6837e+00,  3.9395e+00,  5.2208e-01,  1.1963e+00,
         3.1395e+00,  3.3001e+00,  1.3158e+00, -1.1884e+00,  1.4003e+00,
        -2.4097e+00,  5.8306e-01, -2.6668e+00,  5.2881e+00,  8.2824e-01,
         1.9744e+00, -1.5660e+00, -1.5714e+00, -1.8096e+00, -2.4262e+00,
        -1.4414e+00,  1.2824e+00,  3.9704e-01,  1.4865e+00, -4.5293e-01,
         2.7034e+00,  8.9750e-01, -1.8131e+00, -1.4941e+00,  3.2703e+00,
        -4.7610e+00,  1.9564e+00, -2.9271e+00, -5.3722e+00, -2.8645e+00,
         2.3192e+00, -8.5396e-01,  4.4183e+00,  2.6851e-02,  3.3154e+00,
         1.2584e+00, -4.5199e+00, -3.3705e-01, -1.0053e+00, -1.9601e+00,
         2.1667e+00, -3.9610e-01, -1.3152e+00,  1.8666e+00, -3.4658e-01,
        -1.4587e+00,  5.7996e+00,  1.5383e-01, -8.2250e-01,  3.2944e+00,
        -6.8834e-01,  1.4749e+00, -1.4164e-01,  4.2601e+00, -2.4080e+00,
         1.6420e+00, -5.1368e+00,  8.2990e-03,  1.1816e+00,  1.2270e+00,
         3.1064e+00,  1.6994e+00, -3.3613e+00,  2.6560e+00, -6.9814e-01,
        -1.4721e+00, -7.0697e-01,  1.9146e+00,  2.5740e+00, -2.8683e+00,
        -2.6910e+00, -2.1755e+00,  4.7471e-03, -6.4550e+00, -2.4620e+00,
        -8.3040e-01, -5.3278e+00,  3.2157e+00, -3.2678e+00,  5.8198e-01,
         3.1906e+00, -3.0342e-01, -1.8650e+00,  1.0635e+00,  2.0759e+00,
        -4.1200e+00, -4.1937e+00, -2.4104e+00, -1.0247e-01,  2.2833e+00,
        -2.7043e+00,  2.8439e+00, -2.4625e+00,  4.9749e+00, -1.4051e+00,
         3.0501e-01, -1.9638e+00,  5.8803e-01, -1.8313e+00,  2.7652e+00,
        -7.1937e-01,  1.1515e+00,  4.5135e-01, -3.0764e+00, -1.3429e+00,
         1.3009e+00, -2.0096e+00,  6.6139e-01, -8.3416e-01,  3.1634e-01,
        -3.2114e+00,  1.9131e-01,  3.4456e+00, -3.6135e+00,  3.2692e+00,
        -1.9432e+00,  2.9509e+00, -1.6867e+00], grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:38,961 - myNeural - INFO - Forward Pass: tensor([-3.4442,  1.8697,  0.7107,  ...,  4.1994,  0.0715,  1.7657])
2021-05-25 09:10:38,982 - myNeural - INFO - Forward Pass: tensor([-2.6263, -0.6402,  4.1540,  4.0147,  1.4199,  0.6660, -0.7153,  3.5293,
        -1.2329,  7.1667, -1.7454, -0.1188,  2.8114, -1.6556, -1.3181, -2.1397,
        -0.5467, -2.7003,  2.6627,  0.3302,  1.4852,  1.1693,  2.8335, -1.3393,
         0.1123,  2.3802,  4.4298,  1.4871,  2.9325,  2.4920,  5.5551,  5.1054,
         0.0298,  2.5822,  1.7705, -1.9536, -1.6301,  6.6711, -1.2043, -2.8697,
        -2.1743,  3.1477, -3.3721, -2.8483, -2.6236,  3.7703, -4.3661,  3.4372,
        -2.5045,  2.6508,  1.2458, -3.2036,  3.3755,  0.0728,  0.5113,  3.8387,
         4.6757, -1.3348,  1.8232,  3.2575, -3.0670,  3.4764,  3.1813,  0.9626,
        -2.5845,  2.9777,  0.8382,  3.8829,  1.9752,  0.3487,  0.7253,  2.1039,
         1.8246,  2.5538,  1.3997,  2.0440, -3.3987, -3.7642,  1.0739, -2.1047,
        -1.6361, -0.9013, -0.8868,  6.4195, -2.7858,  1.9877, -0.9960, -1.2148,
        -1.9284,  2.9342, -1.8676,  4.5850, -0.5836,  1.2408, -2.4313,  0.0906,
        -0.1754, -1.2650, -2.2574, -1.4703, -1.4444, -3.6463, -0.9104, -3.1440,
         0.5428,  0.5648,  1.7256, -0.9979, -1.8713,  1.8749, -1.4040,  0.5625,
         6.8318,  1.8038,  2.2898,  2.9564,  0.4605, -4.0826,  1.1542,  1.0704,
        -3.9838,  5.7642,  0.8923,  2.6565,  2.0533,  0.3522,  3.8949,  0.8484],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,003 - myNeural - INFO - Forward Pass: tensor([-3.4047,  2.2487,  0.7987,  ...,  4.5412,  0.4927,  1.9918])
2021-05-25 09:10:39,026 - myNeural - INFO - Forward Pass: tensor([ 2.8667,  1.0104, -4.9654,  3.4006,  6.1745,  0.4194, -0.0738,  6.9904,
        -2.8198, -1.6549,  0.3122, -1.9765,  0.4861,  2.9193, -2.2750,  0.8571,
         1.9315, -1.5392, -1.1371,  3.0587,  0.5135,  1.2217, -1.3668,  5.0927,
         1.3310,  2.9706,  3.0508,  0.1938, -0.0578, -1.1679,  0.6077,  3.4825,
         3.5277, -0.4005,  2.2415,  3.6635,  5.1427,  1.3993,  1.5954, -0.5185,
         0.4714,  3.4445, -0.2789, -0.8350,  2.2332,  0.1540,  1.3333,  3.0652,
         2.1695,  1.0544, -3.4447, -3.5962, -1.9499, -3.0177,  0.2076, -1.6173,
        -2.1594, -4.7991, -1.2133,  4.5075,  2.1800, -1.9762,  2.2252,  0.0747,
        -7.0773,  2.1513, -0.5168, -2.9407,  2.0866, -5.0735,  1.2046,  2.7026,
         0.4695,  1.0430,  3.2149,  3.2110,  7.7083, -3.2645, -1.4240,  0.9395,
         3.7581,  3.6442,  4.5760, -1.5398,  0.6217,  1.8313, -3.6457, -1.5176,
        -0.4649, -0.9658, -2.6287, -0.7503, -1.1803,  3.7965, -0.3578,  3.7748,
        -3.5326,  2.6135, -0.3916,  0.6985, -3.3807,  2.4943, -1.2840,  0.7824,
        -1.9783,  4.5638, -0.5784,  2.7109, -2.4979,  3.5865,  2.1030, -2.9215,
         0.0935,  0.0996, -2.2218, -2.2474,  0.1154,  2.5707,  0.8017, -0.0777,
         3.9349, -1.7599,  1.4608,  5.7680, -0.2911,  1.1765,  0.5036,  0.8963],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,050 - myNeural - INFO - Forward Pass: tensor([-4.3227,  1.4301, -0.0071,  ...,  3.6398, -0.2234,  1.4040])
2021-05-25 09:10:39,072 - myNeural - INFO - Forward Pass: tensor([ 3.9172,  3.4553, -1.7464, -2.3728,  1.9382,  3.6063,  3.8914,  2.5074,
        -1.2435,  3.6786,  2.5528, -1.4810, -0.6964, -2.5125,  1.5352,  2.2176,
        -1.8476,  3.6499,  2.2776,  1.1833,  1.2394, -1.7196,  2.6729, -2.4772,
         1.3888,  2.6512, -0.4075, -0.3113,  0.3705, -0.8870, -0.9165,  0.1755,
         4.6672, -1.4317, -1.7013, -0.0102,  1.3344,  2.1573, -3.6493,  2.8721,
        -2.2973,  0.4909, -1.5971, -0.1413, -4.6275, -0.4728,  3.3985, -4.0194,
         4.1656, -1.2006, -1.7367,  1.7234,  4.8397, -2.4693, -1.0916,  1.7528,
        -0.4248, -1.8361,  3.8081,  2.7028,  0.7072,  1.8115,  0.3282,  1.9365,
        -3.8435, -1.7047, -1.0684, -2.7322, -3.5571,  0.7760, -1.5468,  2.1166,
        -1.0458,  2.5967,  0.0149,  0.0101,  2.9744,  2.2636, -0.2445, -3.7149,
         2.2973,  0.8839, -3.5425, -2.0330, -1.1213, -0.3166,  3.9701,  2.8703,
        -0.5833,  6.4747,  0.4257,  0.5689, -2.4030, -1.7257,  4.7356, -5.0437,
        -5.7230, -3.0271,  2.4725, -4.0828, -2.7384, -2.0533, -1.9586, -1.3288,
        -1.4103, -3.8829,  4.1188, -5.5889, -1.7997, -3.1806, -0.3805,  2.2137,
        -2.4539,  2.3067,  0.5063,  1.8155, -0.1772, -0.5244,  3.4374, -0.4900,
         0.0773, -1.9585, -2.6367,  2.5627,  1.3552, -1.8504,  1.8502, -5.5878],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,090 - myNeural - INFO - Forward Pass: tensor([-3.4371,  1.8636,  0.5192,  ...,  4.1449,  0.4920,  1.9009])
2021-05-25 09:10:39,118 - myNeural - INFO - Forward Pass: tensor([ 1.4812, -3.7928,  3.3296,  1.6571,  5.7371,  0.2561, -1.8012, -2.7541,
        -0.0194,  2.1904,  6.9806,  2.9441, -0.9516,  0.8049, -2.5255, -1.5654,
        -2.1451,  0.0518, -0.0469,  5.0213, -5.3030, -0.0298, -2.6656, -1.4172,
        -0.5447,  1.2647, -0.2729,  0.6359,  0.6828,  2.6121, -4.9812, -1.8304,
        -3.8804,  2.0961, -2.5385,  2.4735,  1.6577,  0.3258,  2.1662,  1.5835,
         1.6492,  4.2447,  6.2625, -0.9054,  1.2168,  1.9880,  5.8523,  1.9862,
        -1.1121,  3.0896,  2.6178, -2.7545,  5.2640,  2.5557,  4.2963, -0.8294,
        -3.4935, -2.0614,  4.6038, -1.2910,  2.0174, -0.1544, -3.2919, -0.0586,
         3.0781, -1.0913,  0.6998,  3.2587,  2.5107, -1.8356, -1.5505,  1.2394,
        -3.3676, -0.7935,  4.4779,  1.7750, -1.9259,  3.5692,  4.7069,  5.4893,
        -0.4604,  2.4638, -4.3149, -0.2435,  2.1989,  2.1390, -3.4485,  3.1686,
         1.9789,  1.4335, -1.5876,  4.1054, -1.4373,  0.5477, -2.8424,  5.3035,
        -0.1893, -3.1676, -2.7368,  2.9184, -3.4042, -1.0438, -4.0466,  1.1576,
        -0.6303, -4.9178,  1.9933, -1.5576,  5.2789, -0.0716, -3.9219, -2.9028,
        -5.3403,  3.1533,  0.6791,  2.0806,  1.0484, -2.4075,  2.0832,  2.3149,
         3.3301,  0.7315, -0.4614,  0.5573,  0.2442,  2.3154,  3.9631,  2.0389],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,141 - myNeural - INFO - Forward Pass: tensor([-3.8660,  1.4712,  0.2145,  ...,  3.8287,  0.4016,  1.6676])
2021-05-25 09:10:39,159 - myNeural - INFO - Forward Pass: tensor([ 0.8085,  0.1078, -4.9002,  2.2792,  2.4966,  4.9011,  2.3376,  0.4867,
         0.6362, -3.1931, -0.7522,  2.1499,  5.6393,  2.0691, -1.6555, -4.6254,
         2.4360,  1.2237,  0.0138,  5.1091,  4.4946,  4.3472,  1.3846, -0.8012,
         2.2335,  4.1071,  5.2265,  2.7453,  1.5973,  3.3078, -1.9247, -2.5863,
        -2.1816,  2.3399,  2.6833, -3.3780,  3.9038, -0.4286,  0.2555,  0.5235,
        -3.9296,  4.8680, -1.7130,  0.8918,  4.7200, -5.1628,  0.6088,  3.8643,
         4.4830,  0.9584,  4.4739,  0.0063, -1.4408, -0.7166,  2.9027, -2.1148,
        -3.3257,  2.2882, -1.2325, -3.7312, -3.3056,  3.2224,  3.4531,  1.9614,
        -0.8661, -2.5558,  3.9140,  1.8897, -0.7757, -4.9522, -0.4559,  2.9640,
        -0.3286,  1.2755, -3.5406,  1.9099,  0.6441,  0.6131,  3.2994,  1.0059,
         1.0637, -0.2326,  5.8806,  5.2478, -1.8984, -1.4976, -1.9045,  0.3698,
         1.7962,  2.3082,  0.9550,  1.4405, -3.8605,  2.0102,  5.1085,  1.7256,
         3.5817, -2.6969, -2.9172, -0.6051, -1.5505, -3.8633, -4.7714,  2.5783,
        -2.5728, -2.1020, -1.5061,  0.7501,  2.8297, -1.6567, -3.2348, -1.7095,
         2.5751, -1.6908, -2.6278, -3.7201,  1.2473,  3.8713,  3.8861, -5.6783,
         0.8045, -0.5835,  2.0071,  1.9383, -2.1924,  1.2296, -1.4980,  0.8104],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,177 - myNeural - INFO - Forward Pass: tensor([-3.7620,  1.5483,  0.2272,  ...,  4.0147,  0.4664,  1.8489])
2021-05-25 09:10:39,197 - myNeural - INFO - Forward Pass: tensor([ 4.1702, -0.5526,  0.4413, -0.1590, -3.5317,  0.8204, -0.5879,  3.8822,
         4.5574,  0.0874,  0.7361, -1.4568, -1.7920,  4.7209,  2.1425,  2.2495,
         2.7763, -1.3434,  0.9623,  1.6841,  2.1395, -0.1510,  2.2255,  3.4733,
        -3.2965,  1.8316, -0.7276,  0.9638,  1.4244,  1.4273,  0.0400,  3.1535,
         1.9310,  3.3893, -1.1551, -0.0417, -0.5753,  2.9391, -2.3638,  0.3529,
         2.6136, -2.1822,  2.8661, -5.1831,  3.1289,  5.5532,  1.4960, -0.3613,
         2.9130, -4.2574, -0.9322, -2.7318,  4.6980, -2.1487,  2.5532, -0.3174,
         4.0511,  2.9703, -1.7298, -1.2144,  2.2037, -3.5444,  2.2585, -0.6092,
        -3.6435, -0.0133,  0.5939, -1.0184,  2.4102, -2.4925,  1.7224,  3.1056,
        -0.0821, -2.4118, -3.3739,  3.5885,  1.9664, -3.0783,  3.4212,  4.3403,
         2.6476, -0.2720, -2.0714,  1.7609,  5.5151, -7.6242, -2.9004,  3.0478,
        -2.6160, -4.3530, -2.7423, -2.7416, -3.0602, -2.7732,  2.1875, -1.4568,
        -5.1445, -0.8148, -3.6789,  1.2542,  3.8523,  0.5217, -2.9700,  1.9593,
         5.5595,  2.4250,  2.7229,  1.6790,  0.9610,  1.5956, -1.1408, -2.3291,
        -4.7528,  1.3294, -5.8674, -1.5773, -1.3769, -3.0403,  0.9843,  1.1022,
        -2.4453, -2.4797,  0.3431, -3.3833,  3.6493, -3.3640, -0.2849,  2.4531],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,216 - myNeural - INFO - Forward Pass: tensor([-4.4051,  1.1249, -0.4703,  ...,  3.4423, -0.2261,  1.3600])
2021-05-25 09:10:39,239 - myNeural - INFO - Forward Pass: tensor([-0.3856,  2.6390, -0.4985,  3.1321, -2.3926, -2.5775, -0.8320, -3.6794,
        -2.4890,  4.5390,  0.9745,  0.8781,  0.2569, -2.2133,  1.7509,  1.1439,
        -1.1155,  0.1042,  4.1035,  3.2896, -0.6920, -0.5852,  2.3779, -2.7891,
         3.1080, -4.1667,  2.0272,  2.2644, -1.3077, -5.5508, -1.7562,  1.9538,
        -3.8516, -1.3391,  1.2358,  0.1707, -3.6960, -3.2330,  2.1311,  1.5488,
        -0.1298, -2.3379, -2.4857, -2.0591,  1.0341,  0.7058, -0.5101,  0.5521,
         2.8866, -3.1258, -3.5773, -4.3649,  4.5153,  1.5535,  2.5498,  3.4545,
        -1.4738,  2.2917, -1.0276, -2.0092, -0.7737, -0.4097, -0.1187,  1.4729,
        -2.3656,  3.4068,  0.8515, -1.0570,  0.8490,  0.0398, -2.5638,  0.6064,
         3.0137, -3.7176, -0.1004, -4.8113,  3.5868,  3.0827,  1.7870,  2.1906,
         1.1894,  0.4525, -2.2263,  1.9418, -0.0221,  0.4305,  3.9755, -5.3609,
         1.4886,  2.0829, -4.9974, -0.0942, -1.0175,  3.6969, -2.6682,  3.0663,
        -1.4154, -0.9182, -2.7770, -0.0180, -2.0854,  3.3084,  3.9969,  1.7924,
         2.8663, -2.4423, -2.1228,  0.6904, -3.7895,  2.7140, -0.9397,  3.9838,
         1.0472,  0.3991, -3.0170, -4.6195,  0.5465,  1.6463, -1.6873,  1.1256,
         1.9132,  1.5289, -5.6803,  0.4909, -2.5955, -2.4239,  3.7597, -2.9094],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,255 - myNeural - INFO - Forward Pass: tensor([-3.7929e+00,  1.8520e+00, -2.9024e-03,  ...,  4.0306e+00,
         4.1237e-01,  1.8911e+00])
2021-05-25 09:10:39,269 - myNeural - INFO - Forward Pass: tensor([ 0.2068, -3.0731, -3.1302,  0.7776,  1.6483, -2.0781, -3.4797, -2.4908,
         1.9334,  0.4723,  2.6465, -0.8227,  1.8721, -5.1732, -0.7525,  2.0016],
       grad_fn=<SqueezeBackward0>)
2021-05-25 09:10:39,285 - myNeural - INFO - Forward Pass: tensor([-3.4614,  1.1999,  0.1553,  ...,  3.7396, -0.1976,  1.3838])
2021-05-25 09:10:39,309 - myNeural - INFO - Training Done
2021-05-25 09:10:47,302 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:10:47,302 - parso.python.diff - DEBUG - line_lengths old: 4; new: 1
2021-05-25 09:10:47,302 - parso.python.diff - DEBUG - -> code[replace] old[1:4] new[1:1]
2021-05-25 09:10:47,303 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:10:47,303 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:10:49,151 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:10:49,152 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:10:49,152 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:10:49,152 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:10:49,152 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:10:49,154 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:10:49,155 - parso.python.diff - DEBUG - line_lengths old: 346; new: 346
2021-05-25 09:10:49,155 - parso.python.diff - DEBUG - -> code[equal] old[1:147] new[1:147]
2021-05-25 09:10:49,156 - parso.python.diff - DEBUG - copy old[4:332] new[1:136]
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - parse_part from 137 to 197 (to 197 in part parser)
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - -> code[replace] old[148:148] new[148:148]
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - -> code[equal] old[149:151] new[149:151]
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - -> code[replace] old[152:153] new[152:153]
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - -> code[equal] old[154:181] new[154:181]
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - -> code[replace] old[182:182] new[182:182]
2021-05-25 09:10:49,164 - parso.python.diff - DEBUG - -> code[equal] old[183:230] new[183:230]
2021-05-25 09:10:49,169 - parso.python.diff - DEBUG - parse_part from 198 to 233 (to 234 in part parser)
2021-05-25 09:10:49,169 - parso.python.diff - DEBUG - -> code[replace] old[231:231] new[231:231]
2021-05-25 09:10:49,169 - parso.python.diff - DEBUG - -> code[equal] old[232:346] new[232:346]
2021-05-25 09:10:49,169 - parso.python.diff - DEBUG - copy old[235:332] new[234:332]
2021-05-25 09:10:49,170 - parso.python.diff - DEBUG - parse_part from 333 to 345 (to 345 in part parser)
2021-05-25 09:10:49,170 - parso.python.diff - DEBUG - parse_part from 346 to 346 (to 345 in part parser)
2021-05-25 09:10:49,170 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:10:51,080 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,081 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,082 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,083 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,084 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,085 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,086 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,087 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,088 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,089 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,090 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,091 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,092 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,093 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,094 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,095 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,096 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-05-25 09:10:51,097 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,098 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,099 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-05-25 09:10:51,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,110 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-05-25 09:10:51,125 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-05-25 09:10:51,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-05-25 09:10:51,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-05-25 09:10:51,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-05-25 09:10:51,154 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-05-25 09:10:54,224 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:10:54,224 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:10:54,224 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:10:54,224 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:10:54,224 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:10:56,783 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:10:56,783 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:10:56,783 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:10:56,783 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:10:56,784 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:43:49,604 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:43:49,605 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:43:49,605 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:43:49,606 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:43:49,606 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:43:52,551 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:43:52,551 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:43:52,551 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:43:52,551 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:43:52,551 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:43:52,553 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:43:52,554 - parso.python.diff - DEBUG - line_lengths old: 346; new: 353
2021-05-25 09:43:52,554 - parso.python.diff - DEBUG - -> code[equal] old[1:264] new[1:264]
2021-05-25 09:43:52,555 - parso.python.diff - DEBUG - copy old[4:332] new[1:261]
2021-05-25 09:43:52,555 - parso.python.diff - DEBUG - parse_part from 262 to 262 (to 262 in part parser)
2021-05-25 09:43:52,556 - parso.python.diff - DEBUG - parse_part from 263 to 279 (to 280 in part parser)
2021-05-25 09:43:52,557 - parso.python.diff - DEBUG - -> code[replace] old[265:265] new[265:269]
2021-05-25 09:43:52,557 - parso.python.diff - DEBUG - -> code[equal] old[266:272] new[270:276]
2021-05-25 09:43:52,557 - parso.python.diff - DEBUG - -> code[replace] old[273:274] new[277:279]
2021-05-25 09:43:52,557 - parso.python.diff - DEBUG - -> code[equal] old[275:316] new[280:321]
2021-05-25 09:43:52,557 - parso.python.diff - DEBUG - copy old[276:332] new[280:321]
2021-05-25 09:43:52,557 - parso.python.diff - DEBUG - -> code[insert] old[317:316] new[322:323]
2021-05-25 09:43:52,558 - parso.python.diff - DEBUG - parse_part from 322 to 323 (to 324 in part parser)
2021-05-25 09:43:52,558 - parso.python.diff - DEBUG - -> code[equal] old[317:346] new[324:353]
2021-05-25 09:43:52,558 - parso.python.diff - DEBUG - copy old[318:332] new[324:339]
2021-05-25 09:43:52,559 - parso.python.diff - DEBUG - parse_part from 340 to 352 (to 352 in part parser)
2021-05-25 09:43:52,559 - parso.python.diff - DEBUG - parse_part from 353 to 353 (to 352 in part parser)
2021-05-25 09:43:52,559 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:43:57,510 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:43:57,510 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:43:57,510 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:43:57,510 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:43:57,510 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:43:57,556 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/types.py
2021-05-25 09:43:57,564 - parso.cache - DEBUG - pickle loaded: /Users/shaominliu/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2021-05-25 09:44:00,338 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:44:00,338 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:44:00,338 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:44:00,338 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:44:00,339 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:44:05,176 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:44:05,176 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:44:05,176 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:44:05,176 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:44:05,176 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:46:30,332 - ray.tune.suggest.suggestion - WARNING - DeprecationWarning: `max_concurrent` is deprecated for this search algorithm. Use tune.suggest.ConcurrencyLimiter() instead. This will raise an error in future versions of Ray.
2021-05-25 09:46:30,342 - ray.tune.tune - INFO - Initializing Ray automatically.For cluster usage or custom Ray initialization, call `ray.init(...)` before `tune.run`.
2021-05-25 09:46:30,342 - ray.worker - DEBUG - Automatically increasing RLIMIT_NOFILE to max value of 9223372036854775807
2021-05-25 09:48:38,096 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:48:38,099 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:48:38,099 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:48:38,104 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:48:38,104 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:48:40,202 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:48:40,217 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 09:48:40,217 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 09:48:40,217 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 09:48:40,218 - parso.python.diff - DEBUG - diff parser end
2021-05-25 09:48:40,219 - parso.python.diff - DEBUG - diff parser start
2021-05-25 09:48:40,224 - parso.python.diff - DEBUG - line_lengths old: 353; new: 353
2021-05-25 09:48:40,224 - parso.python.diff - DEBUG - -> code[equal] old[1:289] new[1:289]
2021-05-25 09:48:40,225 - parso.python.diff - DEBUG - copy old[4:339] new[1:279]
2021-05-25 09:48:40,225 - parso.python.diff - DEBUG - parse_part from 280 to 280 (to 280 in part parser)
2021-05-25 09:48:40,229 - parso.python.diff - DEBUG - parse_part from 281 to 352 (to 352 in part parser)
2021-05-25 09:48:40,230 - parso.python.diff - DEBUG - -> code[replace] old[290:290] new[290:290]
2021-05-25 09:48:40,230 - parso.python.diff - DEBUG - -> code[equal] old[291:326] new[291:326]
2021-05-25 09:48:40,230 - parso.python.diff - DEBUG - -> code[replace] old[327:327] new[327:327]
2021-05-25 09:48:40,230 - parso.python.diff - DEBUG - -> code[equal] old[328:353] new[328:353]
2021-05-25 09:48:40,230 - parso.python.diff - DEBUG - parse_part from 353 to 353 (to 352 in part parser)
2021-05-25 09:48:40,230 - parso.python.diff - DEBUG - diff parser end
2021-05-25 10:20:51,508 - parso.python.diff - DEBUG - diff parser start
2021-05-25 10:20:51,533 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 10:20:51,533 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 10:20:51,557 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 10:20:51,558 - parso.python.diff - DEBUG - diff parser end
2021-05-25 10:20:57,567 - parso.python.diff - DEBUG - diff parser start
2021-05-25 10:20:57,568 - parso.python.diff - DEBUG - line_lengths old: 1; new: 1
2021-05-25 10:20:57,568 - parso.python.diff - DEBUG - -> code[replace] old[1:1] new[1:1]
2021-05-25 10:20:57,569 - parso.python.diff - DEBUG - parse_part from 1 to 1 (to 0 in part parser)
2021-05-25 10:20:57,569 - parso.python.diff - DEBUG - diff parser end
2021-05-25 10:20:57,574 - parso.python.diff - DEBUG - diff parser start
2021-05-25 10:20:57,579 - parso.python.diff - DEBUG - line_lengths old: 416; new: 429
2021-05-25 10:20:57,580 - parso.python.diff - DEBUG - -> code[equal] old[1:341] new[1:341]
2021-05-25 10:20:57,582 - parso.python.diff - DEBUG - copy old[1:403] new[1:340]
2021-05-25 10:20:57,584 - parso.python.diff - DEBUG - parse_part from 341 to 342 (to 342 in part parser)
2021-05-25 10:20:57,584 - parso.python.diff - DEBUG - -> code[replace] old[342:342] new[342:342]
2021-05-25 10:20:57,584 - parso.python.diff - DEBUG - -> code[equal] old[343:372] new[343:372]
2021-05-25 10:20:57,593 - parso.python.diff - DEBUG - parse_part from 343 to 369 (to 370 in part parser)
2021-05-25 10:20:57,595 - parso.python.diff - DEBUG - parse_part from 370 to 403 (to 404 in part parser)
2021-05-25 10:20:57,595 - parso.python.diff - DEBUG - -> code[replace] old[373:373] new[373:373]
2021-05-25 10:20:57,595 - parso.python.diff - DEBUG - -> code[equal] old[374:404] new[374:404]
2021-05-25 10:20:57,597 - parso.python.diff - DEBUG - parse_part from 404 to 428 (to 428 in part parser)
2021-05-25 10:20:57,597 - parso.python.diff - DEBUG - -> code[insert] old[405:404] new[405:417]
2021-05-25 10:20:57,597 - parso.python.diff - DEBUG - -> code[equal] old[405:416] new[418:429]
2021-05-25 10:20:57,597 - parso.python.diff - DEBUG - parse_part from 429 to 429 (to 428 in part parser)
2021-05-25 10:20:57,597 - parso.python.diff - DEBUG - diff parser end
